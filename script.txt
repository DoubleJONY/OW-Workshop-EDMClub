variables
{
	global:
		0: Map
		1: SpawnVector
		2: CTFTimer
		3: BPMCalibrate_DefaultIs60
		4: DanceZoneVector
		5: DanceZoneText
		6: DanceZoneTimer
		7: HostSpawnVector
		8: LightManager
		9: stageEntity
		10: EnableTick
		11: LevelOfClimax
		12: ModeOfLightEffect
		13: AllowDrawingMode
		14: LightEntity
		15: TopDescription
		16: BeamVector
		17: HiddenVector
		18: BPM
		19: Tick
		20: ArtColorArray
		21: CinematicFocusPlayer
		22: GlobalBoostSparkleArray
		23: LetsNextMap
		24: isDrawingMode
		25: CheckInList
		26: Art
		27: CleanerIndex
		28: HiddenMap
		29: AllowScalingMode
		30: DJPlayer
		31: DJmode
		32: BlackList
		33: DanceZoneLock
		34: DummyDance
		37: ThemeColor1
		38: ThemeColor2
		39: ThemeColor3
		40: ThemeColor4
		41: ColorTheme
		42: VIPList
		44: ServerPanic
		45: GuestBook
		47: DefaultDjPlayer

	player:
		0: PlayerSize
		1: PlayerVoice
		2: Camera
		3: Art
		4: ArtColor
		5: HelpHUDOpened
		6: DJMenuHUDOpened
		7: DrawingMode
		8: BANNED
		9: Agreement
		10: HelloCount
		11: Light
		12: LightEntity
		17: SelectPlayer
		18: Sleep
		19: DvaBoostSpeed
		20: DanceSparkle
		23: cameraX
		24: CInematicHUD
		25: CinematicEnabled
		26: MAXLightEffect
		27: Hello
		28: CinematicDrone
		29: CinematicRate
		30: CinematicY
		31: CinematicZ
		32: CinematicDroneText
		33: lucioballHeroIndex
		34: VipFloorEffect1
		35: VipFloorEffect2
		36: VipFloorEffect3
		37: VipFloorEffect4
		38: Love
		39: SelectPlayerCache
		40: cameraZ
}

subroutines
{
	0: ColorPicker
	1: EntityCleaner
	2: ArtColor1
	3: ArtColor2
	4: SetTP
	5: SetFP
	6: VoicePitch
	7: Agreement
	9: ColorTheme_Default
	10: ColorTheme_Halloween
	11: ColorTheme_Xmas
	12: ColorTheme_Random
	13: BuildStage
	14: Welcome
	15: ColorTheme_NewYear
	16: ColorTheme_Summer
}

rule("글로벌 초기값")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Start Forcing Spawn Room(All Teams, 1);
		Disable Inspector Recording;
		Disable Built-In Game Mode Music;
		Disable Built-In Game Mode Announcer;
		Global.DJmode = Workshop Setting Toggle(Custom String("[1]DJ MODE"), Custom String("DJ 모드(비활성화시 그냥 노는방)"), True, 1);
		Create In-World Text(Global.DJmode ? Filtered Array(All Players(All Teams), Current Array Element.Love <= 3) : Null, Custom String(
			"{0}P키를 눌러 경기 보이스에 들어와보세요!", Ability Icon String(Hero(루시우), Button(Ability 2))), Global.DJPlayer + Vector(0, 2.500, 0), 2.200,
			Do Not Clip, Visible To Position and String, Color(Orange), Default Visibility);
		Global.ColorTheme = Workshop Setting Combo(Custom String("[2]시스템 설정"), Custom String("조명 테마"), 0, Array(Custom String("루시우"),
			Custom String("할로윈"), Custom String("크리스마스"), Custom String("완전 랜덤!"), Custom String("새해복마니!"), Custom String("섬머파티!")), 0);
		If(Workshop Setting Toggle(Custom String("[2]시스템 설정"), Custom String("백댄서 + 봇들 춤추기"), True, 0));
			Global.DummyDance = True;
		End;
		Global.GuestBook = Custom String("---------------------------");
		Create Icon(Global.DJPlayer != Null ? All Players(All Teams) : Null, Global.DJPlayer, Diamond, Visible To and Position, Color(
			Lime Green), True);
		Create In-World Text(Global.DJPlayer != Null ? All Players(All Teams) : Null, Custom String("{0} DJ {1}{2}", Ability Icon String(
			Hero(루시우), Button(Ultimate)), Global.DJPlayer, Custom String(" {0}{1}", Icon String(Heart), Global.DJPlayer.Love)),
			Global.DJPlayer, 1.400, Do Not Clip, Visible To Position and String, Color(Green), Default Visibility);
		Create In-World Text(Global.LightManager != Global.DJPlayer ? All Players(All Teams) : Null, Custom String("{0} 조명감독 {1}{2}",
			Icon String(Dizzy), Global.LightManager, Global.LightManager.Love != 0 ? Custom String(" {0}{1}", Icon String(Heart),
			Global.LightManager.Love) : Custom String(" ")), Global.LightManager, 1.500, Do Not Clip, Visible To Position and String,
			Color(Turquoise), Default Visibility);
		Global.AllowDrawingMode = Workshop Setting Toggle(Custom String("[2]시스템 설정"), Custom String("그림 그리기 모드"), False, 0);
		Global.AllowScalingMode = Workshop Setting Toggle(Custom String("[3]전역 설정"), Custom String("크기 조절 모드"), False, 0);
		Global.Map = Random Integer(1, 10);
		If(Workshop Setting Toggle(Custom String("[2]시스템 설정"), Custom String("히든맵 인카운터 강제 설정"), False, 0));
			Global.Map = Workshop Setting Integer(Custom String("[2]시스템 설정"), Custom String("히든맵 인카운터 강제 설정 변수"), 1, 1, 10, 0);
		End;
		Global.BPM = Workshop Setting Integer(Custom String("[3]전역 설정"), Custom String("BPM 초기값"), 128, 30, 220, 0);
		Global.Tick = 1;
		Global.ModeOfLightEffect = 1;
		Global.LevelOfClimax = 1;
		Global.CTFTimer = Workshop Setting Integer(Custom String("[3]전역 설정"), Custom String("공연 시간(초)"), 1210, 190, 3610, 0);
		Set Match Time(Global.CTFTimer);
		Global.BPMCalibrate_DefaultIs60 = 59.385;
		Set Objective Description(All Players(All Teams), Custom String("스트레스를 푸십시오"), Visible To and String);
		Wait(10, Ignore Condition);
		"모든 플레이어"
		Create HUD Text(Global.DJmode == True ? All Players(All Teams) : Null, Custom String("{0} DJ {1}", Hero Icon String(Hero Of(
			Global.DJPlayer)), Global.DJPlayer), Custom String("{0}경기보이스: P키 > 주황색 헤드폰", Ability Icon String(Hero(루시우), Button(Ultimate))),
			Custom String("{0}", Global.TopDescription), Top, 0, Global.Tick % 2 == 0 ? Color(Yellow) : Color(Green),
			Global.Tick % 2 == 0 ? Color(White) : Color(Orange), Color(White), Visible To String and Color, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened), Global.HiddenMap ? Icon String(Club)
			: Icon String(Spade), Custom String("{0}{1}클럽에 오신것을 환영합니다.", Current Map, Global.HiddenMap ? Custom String(" 에 숨겨진 히든")
			: Custom String(" ")), Custom String("v6.0 변기클라우드#3523[코드:C3NWZ]"), Right, 1, Color(Blue), Color(Yellow), Color(White),
			Visible To and String, Default Visibility);
		Create HUD Text(Global.DJPlayer != Null ? Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened) : Null,
			Ability Icon String(Hero(루시우), Button(Ability 2)), Custom String("경기 보이스에 음악을 틀고 있어요"), Custom String(
			"P 를 누르고 오렌지 헤드폰을 눌러보세요\r\n자신의 마이크 버튼을 음소거 해주세요!"), Right, 2, Color(Lime Green), Color(Lime Green), Color(White),
			Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened), Icon String(Question Mark),
			Custom String("여러가지 조작법"), Custom String("{0}\r\n{1}", Custom String("1인칭/3인칭 전환 > {0} + {1}\r\n텔레포트 > 공중에서({0}) + {2}",
			Input Binding String(Button(Jump)), Input Binding String(Button(Crouch)), Input Binding String(Button(Interact))),
			Custom String("야광봉 꺼내기 > {0}", Input Binding String(Button(Melee)))), Right, 3, Color(Green), Color(Green), Color(White),
			Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams),
			Current Array Element.HelpHUDOpened && !Current Array Element.MAXLightEffect), Ability Icon String(Hero(캐서디), Button(
			Ability 2)), Custom String("화려한 조명이 감싸지 않아 심심한가요?"), Custom String("시각효과 켜기 > {0} + {1}", Input Binding String(Button(
			Interact)), Input Binding String(Button(Reload))), Right, 4, Color(Gray), Color(Gray), Color(White), Visible To and String,
			Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams),
			Current Array Element.HelpHUDOpened && Current Array Element.MAXLightEffect), Ability Icon String(Hero(캐서디), Button(
			Ability 2)), Custom String("너무 눈이 부셔 아프신가요?"), Custom String("시각효과 줄이기 > {0} + {1}", Input Binding String(Button(Interact)),
			Input Binding String(Button(Reload))), Right, 4, Color(Yellow), Color(Yellow), Color(White), Visible To and String,
			Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened), Icon String(Eye), Custom String(
			"시네마틱 카메라 로 구경할 수 있어요"), Custom String("시네마틱 모드 참여 > [감정표현(춤or앉기)] + 길게 {1}\r\n시네마틱 대상에게 하트 주기 > {1}", Null,
			Input Binding String(Button(Interact))), Right, 5, Color(Red), Color(Red), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened), Icon String(Halo), Custom String(
			"다른 사람과 동시에 춤을 출 수 있어요!"), Custom String("화면에 카운트다운 표시 > 댄스존 밖 + [카운트다운(321)]\r\n같은 영웅끼리 춤추기 > 댄스존 안 + [카운트다운(321)]"), Right,
			6, Color(Turquoise), Color(Turquoise), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.HelpHUDOpened), Ability Icon String(Hero(아나), Button(
			Ability 1)), Custom String("잠수타거나 맵을 바꿀까요?"), Custom String("잠자기 > {0} + {1}\r\n많은 인원이 잠자면 다음 맵으로 스킵!", Input Binding String(
			Button(Crouch)), Input Binding String(Button(Ability 2))), Right, 7, Color(Blue), Color(Blue), Color(White),
			Visible To and String, Visible Never);
		Create HUD Text(Global.AllowDrawingMode ? All Players(All Teams) : Null, Ability Icon String(Hero(메르시), Button(Ability 1)),
			Custom String("예쁜 컬러 그림도 그릴 수 있어요!"), Custom String("그림그리기모드 > 길게 ({0} + {1})", Input Binding String(Button(Primary Fire)),
			Input Binding String(Button(Secondary Fire))), Right, 8, Color(Purple), Color(Purple), Color(White), Visible To and String,
			Visible Never);
		Create HUD Text(Global.AllowScalingMode ? All Players(All Teams) : Null, Ability Icon String(Hero(로드호그), Button(Ultimate)),
			Custom String("캐릭터 크기도 조절해보세요!"), Custom String("{0}+{1}+{2}", Input Binding String(Button(Crouch)), Input Binding String(
			Button(Interact)), Custom String("{0}(크게)/{1}(작게)", Input Binding String(Button(Primary Fire)), Input Binding String(Button(
			Secondary Fire)))), Right, 9, Color(Blue), Color(Blue), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Null, Icon String(Eye), Custom String("관전자입니다!\r\n관전자는 경기보이스에서 노래를 들을 수 없어요 ㅠㅅㅠ"), Count Of(Filtered Array(
			All Players(All Teams), !Is Dummy Bot(Current Array Element))) == 12 ? Custom String("풀방이니까 조금만 기다려주세요!!") : Custom String(
			"자리가 비어있어요! 게임에 들어와서 같이 놀아요!!!!!!!"), Right, 99, Color(Violet), Color(Violet), Color(White), Visible To and String,
			Visible Always);
		Create HUD Text(All Players(All Teams), Icon String(Question Mark), Custom String("설명을 모두 읽어주셔서 감사해요!"), Custom String(
			"설명 열기/닫기 > [알겠어요(응답키)]"), Right, 99, Color(White), Color(White), Color(White), Visible To and String, Visible Never);
		"중앙 화면"
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n "), Top, 50, Color(White), Color(White),
			Color(White), Visible To, Visible Always);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.Sleep), Custom String("{0}", Ability Icon String(Hero(
			아나), Button(Ability 1))), Custom String("클럽에서 수면 중.....?"), Custom String("다시 일어나려면 오른쪽 설명을 읽어주세요!"), Top, 51, Color(Blue),
			Color(Blue), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), !Current Array Element.Agreement), Custom String("{0}", Icon String(
			Warning)), Custom String("설명충 모드 켜짐"), Custom String("오른쪽 설명을 모두 읽고 설명 창을 닫아주세요!"), Top, 51, Color(Yellow), Color(White),
			Color(Yellow), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.DrawingMode), Ability Icon String(Hero(메르시), Button(
			Ability 1)), Custom String("현재 그림 그리기 모드입니다! 끄려면 {0}+{1} 을 길게 눌러주세요", Input Binding String(Button(Primary Fire)),
			Input Binding String(Button(Secondary Fire))), Custom String("{0} = 그리기\r\n{1} = 마지막 하나 지우기 \r\n{2}", Input Binding String(
			Button(Primary Fire)), Input Binding String(Button(Secondary Fire)), Custom String("{0},{1} = 색 변경\r\n남은 색연필 : {2}개",
			Input Binding String(Button(Ultimate)), Input Binding String(Button(Ability 2)), 128 - Entity Count)), Top, 51, Color(Purple),
			Color(Purple), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Global.ServerPanic ? All Players(All Teams) : Null, Custom String("{0}", Ability Icon String(Hero(토르비욘), Button(
			Ultimate))), Custom String("서버 과부하 감지!"), Custom String("잠시 일부 기능이 비활성화 됩니다..{0}", Ability Icon String(Hero(메이), Button(
			Ultimate))), Top, 52, Color(Red), Color(Red), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.DJMenuHUDOpened == True), Custom String(
			"{1}\r\n{0} BPM", Global.BPM, Ability Icon String(Hero(루시우), Button(Ability 2))), Custom String(
			"BPM(박자 속도)\r\n조절 : [Down({0})][Up({1})]", Input Binding String(Button(Primary Fire)), Input Binding String(Button(
			Secondary Fire))), Custom String("조명 : {0} / 레벨 : {1}\r\n비트 : {2} / 4", Global.ModeOfLightEffect, Global.LevelOfClimax,
			Global.Tick), Top, 61, Color(Yellow), Color(Yellow), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(Global.LightManager, Current Array Element.DJMenuHUDOpened == True), Icon String(Dizzy),
			Custom String("조명모드(닫으려면 치유요청(X) 를 누르세요)"), Custom String("{0}\r\n{1}\r\n모르겠으면 그냥 {2} 만 계속 누르세요!", Custom String(
			"조명레벨(1~3단계) : [Down({0})][Up({1})]", Input Binding String(Button(Ability 2)), Input Binding String(Button(Reload))),
			Custom String("조명색 : {0}\r\n화려한 조명 : {1}\r\n조명레벨3+전체 궁극기 : {2}", Input Binding String(Button(Melee)), Input Binding String(
			Button(Ability 1)), Input Binding String(Button(Ultimate))), Input Binding String(Button(Reload))), Top, 62,
			Global.ThemeColor1, Global.ThemeColor2, Color(White), Visible To String and Color, Visible Never);
		"매니저들"
		Create HUD Text(Host Player, Icon String(Flag), Custom String("방장입니다! 트롤, 비매너등 방 관리를 잘해주세요!"), Custom String(
			"남은시간 : {1}:{2}\r\n{0}1분연장 : [감사]+[점프] / 방폭 : [미안]+[점프]\r\n설명충 공지 : [공세유지] / DJ 모드 토글 : [함께]+[앉기]", Ability Icon String(Hero(
			트레이서), Button(Ability 2)), Round To Integer(Global.CTFTimer / 60, Down), Global.CTFTimer % 60), Left, 1, Color(Red), Color(
			Red), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Global.DJPlayer, Ability Icon String(Hero(루시우), Button(Ability 2)), Custom String("DJ 입니다! 신나는 음악을 틀어주세요!"),
			Custom String("BPM 조절모드 : [감정표현(춤권장)]\r\n남은 시간 : {0}:{1} / 현재 BPM : {2}", Round To Integer(Global.CTFTimer / 60, Down),
			Global.CTFTimer % 60, Global.BPM), Left, 2, Color(Lime Green), Color(Lime Green), Color(White), Visible To and String,
			Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams),
			Current Array Element == Global.DJPlayer || Current Array Element == Host Player || Current Array Element == Global.LightManager),
			Icon String(Club), Custom String("매니저입니다!"), Custom String("방을 재밌게 이끌어주세요!\r\n서버 부하 {0}% / 평균 {1}% / 객체 {2}개", Server Load,
			Server Load Average, 128 - Entity Count), Left, 3, Color(Orange), Color(Orange), Color(White), Visible To and String,
			Visible Never);
		Create HUD Text(Filtered Array(Global.LightManager, Current Array Element.DJMenuHUDOpened == False), Icon String(Dizzy),
			Custom String("조명감독 입니다! 현재 조명모드 꺼짐"), Custom String("조명모드 시작 : [감정표현(춤권장)]\r\n퍼포먼스 중지 : 길게 {0}  ", Input Binding String(
			Button(Crouch))), Left, 4, Color(Turquoise), Color(Turquoise), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(Host Player, Current Array Element.DJMenuHUDOpened == False), Icon String(Radioactive),
			Custom String("..조금 정신사나운 기능을 해금할 수 있습니다!"), Custom String("{0}\r\n{1}", Custom String("{0}그림 그리기 모드 허용 : 길게 {1} + {2}",
			Ability Icon String(Hero(메르시), Button(Ability 1)), Input Binding String(Button(Interact)), Input Binding String(Button(
			Secondary Fire))), Custom String("{0}크기변경 허용 : 길게 {1} + {2}", Ability Icon String(Hero(로드호그), Button(Ultimate)),
			Input Binding String(Button(Interact)), Input Binding String(Button(Primary Fire)))), Left, 5, Color(Purple), Color(Purple),
			Color(White), Visible To and String, Visible Never);
		disabled Create HUD Text(Filtered Array(Global.DJmode ? Host Player : Null, Current Array Element.DJMenuHUDOpened == False), Icon String(
			Recycle), Custom String("매니저를 양도할 수 있습니다!"), Custom String("{0}에게 DJ 주기/뺏기 : 길게 {1}\r\n{0}에게 조명감독 주기/뺏기 : 길게 {2}",
			Host Player.SelectPlayer == Null ? Custom String("바라보고있는 유저") : Host Player.SelectPlayer, Input Binding String(Button(
			Ability 2)), Input Binding String(Button(Reload))), Left, 6, Color(Orange), Color(Orange), Color(White), Visible To and String,
			Visible Never);
		"스폐셜 기능"
		Create HUD Text(Filtered Array(All Players(All Teams), Array Contains(Global.VIPList, Custom String("{0}",
			Current Array Element))), Icon String(Moon), Custom String("VIP 멤버 입니다!"), Custom String(
			"VIP의 관종 어그로 끌기! > [집결(뭉쳐요) 키]\r\n시공의 회오리!! > 길게 {0}", Input Binding String(Button(Ability 2))), Left, 7, Color(Rose), Color(
			Rose), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), !Array Contains(Global.VIPList, Custom String("{0}",
			Current Array Element))), Icon String(Moon), Custom String("Discord 에 오시면 VIP가 될 수 있어요!"), Custom String(
			"더 나은 음질로 노래 듣고 같이 놀아요!\r\nhttps://discord.gg/9EZMw2Z6NA(w는 소문자)"), Left, 7, Color(Gray), Color(Gray), Color(White),
			Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.Love >= 50), Icon String(Heart), Custom String(
			"오우...인싸신가봐요?"), Custom String("크기 조절 제한 증가!\r\n슈퍼 회오리 > 길게 {0}", Input Binding String(Button(Ability 2))), Left, 8, Color(
			Rose), Color(Rose), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.Love < 50), Icon String(Heart), Custom String(
			"관종 게이지가 부족합니다"), Custom String("시네마틱,인사,감사,보물찾기 등으로\r\n좋아요를 50개 이상 얻어야합니다!"), Left, 8, Color(Gray), Color(Gray), Color(White),
			Visible To and String, Visible Never);
		Create HUD Text(Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) == 12 ? All Players(
			All Teams) : Null, Icon String(Fire), Custom String("불탄다!! 12명 풀방!!"), Custom String("추가 눈뽕 효과 + 불\r\n자동 빙글빙글 > 길게 {0}",
			Input Binding String(Button(Ability 2))), Left, 9, Color(Red), Color(Red), Color(White), Visible To and String, Visible Never);
		Create HUD Text(Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) != 12 ? All Players(
			All Teams) : Null, Icon String(Fire), Custom String("아직 충분히 -핫- 하지 않아요.."), Custom String("{0}/12명 풀방시\r\n자동 빙글빙글 사용 가능!",
			Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)))), Left, 9, Color(Gray), Color(Gray),
			Color(White), Visible To and String, Visible Never);
		"시네마틱 카메라"
		Create HUD Text(Filtered Array(All Players(All Teams), Current Array Element.CinematicEnabled == True), Custom String("{0} LIVE",
			Icon String(Eye)), Custom String("{0} {1} {2}", Hero Icon String(Hero Of(Global.CinematicFocusPlayer)),
			Global.CinematicFocusPlayer, Custom String("{0} {1}", Icon String(Heart), Global.CinematicFocusPlayer.Love)), Custom String(
			"{2} 키로 {1}님께 하트날리기{0}\r\nAlt+Z 로 UI 가리기", Icon String(Heart), Global.CinematicFocusPlayer, Input Binding String(Button(
			Interact))), Top, 10, Color(Red), Color(Green), Color(Yellow), Visible To and String, Default Visibility);
		Call Subroutine(BuildStage);
		Create Effect(All Players(All Teams), Ring, Color(Turquoise), Global.DanceZoneVector, 4, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Index.MAXLightEffect), Light Shaft, Global.ThemeColor1, Vector(
			X Component Of(Global.HostSpawnVector), Y Component Of(Global.HostSpawnVector) + -18, Z Component Of(Global.HostSpawnVector)),
			13, Visible To Position Radius and Color);
		Create In-World Text(All Players(All Teams), Custom String("{0} 댄스존 > 카운트다운 키 {0}", Icon String(Halo)), Vector(X Component Of(
			Global.DanceZoneVector), Y Component Of(Global.DanceZoneVector) + 2, Z Component Of(Global.DanceZoneVector)), 1, Do Not Clip,
			Visible To Position and String, Color(Turquoise), Default Visibility);
		Global.DanceZoneText = Last Text ID;
		Create Effect(All Players(All Teams), Ring, Color(Lime Green), Global.SpawnVector, 2, Visible To Position and Radius);
		Create Icon(All Players(All Teams), Global.SpawnVector, Recycle, Visible To and Position, Color(White), True);
		Create In-World Text(Current Game Mode != Game Mode(루시우볼) ? All Players(All Teams) : Null, Custom String("{0}영웅변경 > {1}",
			Ability Icon String(Hero(에코), Button(Ultimate)), Input Binding String(Button(Jump))), Global.SpawnVector + Vector(0, 1, 0), 1,
			Do Not Clip, Visible To Position and String, Color(White), Default Visibility);
		Create In-World Text(Filtered Array(All Players(All Teams), Distance Between(Current Array Element, Global.SpawnVector) <= 2),
			Custom String("{1} QR코드 체크인 명부 {1}\r\n{0}\r\n...\r\n---------------------------", Global.GuestBook, Icon String(Club)),
			Global.SpawnVector + Vector(1, 0, 0), 0.600, Do Not Clip, Visible To Position and String, Color(Lime Green), Visible Never);
		Global.ArtColorArray = Array(Custom String("레킹볼"), Custom String("빨간색"), Custom String("노란색"), Custom String("초록색"), Custom String(
			"파란색"), Custom String("보라색"), Custom String("흰색"), Custom String("검정색"), Custom String("핑크색"), Custom String("옥색"));
		Create Effect(All Players(All Teams), Orb, Color(Rose), Global.HiddenVector, 1, Visible To Position and Radius);
		Create In-World Text(Filtered Array(All Players(All Teams), Distance Between(Global.HiddenVector, Current Array Element) <= 5),
			Global.HiddenVector == 0 ? Custom String("보물 품절됨 ㅠ") : Custom String("이게뭐지?({0} 누르기)", Input Binding String(Button(Interact))),
			Global.HiddenVector, 1, Clip Against Surfaces, Visible To Position and String, Color(Rose), Visible Never);
		Create Icon(Filtered Array(All Players(All Teams), Array Contains(Global.VIPList, Custom String("{0}", Current Array Element))),
			Global.HiddenVector, Heart, Visible To and Position, Color(Rose), True);
		"맵 스킵 투표"
		Create Progress Bar HUD Text(Global.LetsNextMap >= 2 && Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(
			Current Array Element))) >= 4 ? All Players(All Teams) : Null, Global.LetsNextMap / (Count Of(Filtered Array(All Players(
			All Teams), !Is Dummy Bot(Current Array Element))) + -2) * 100, Custom String(
			"{0}맵을 바꿀까요? 투표하려면 {1} 을 눌러주세요!\r\n{2} 명이 더 수면하면 다음 맵으로 이동!", Icon String(Recycle), Custom String("{0}+{1}",
			Input Binding String(Button(Crouch)), Input Binding String(Button(Ability 2))), Custom String("{0}/{1}", Global.LetsNextMap,
			Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) + -2)), Left, 99, Color(Red), Color(
			White), Visible To Values and Color, Default Visibility);
		Create In-World Text(Host Player.SelectPlayer != Null ? Host Player : Null, Custom String("{0}\r\n{1}\r\n{2}",
			Global.DJmode ? Custom String("{0}+{1} : DJ 시키기", Input Binding String(Button(Crouch)), Input Binding String(Button(Interact)))
			: Custom String(""), Global.DJmode ? Custom String("{0}+{1} : 조명감독 시키기", Input Binding String(Button(Crouch)),
			Input Binding String(Button(Reload))) : Custom String(""), Custom String("{0}+{1} : 관종 차단하기", Input Binding String(Button(
			Crouch)), Input Binding String(Button(Melee)))), Host Player.SelectPlayer + Vector(0,
			1 * Host Player.SelectPlayer.PlayerSize + 1.500, 0), 0.900, Do Not Clip, Visible To Position and String, Color(Orange),
			Visible Never);
	}
}

rule("최초 DJ 설정")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Global.DefaultDjPlayer = Workshop Setting Integer(Custom String("[2]시스템 설정"), Custom String("최초 DJ 설정(0=방장,1~6=1팀,7~12=2팀)"), 0, 0,
			12, 0);
		Wait(2, Ignore Condition);
		disabled Global.CheckInList = Array(Custom String("{0}", Players In Slot(0, Team 1)), Custom String("{0}", Players In Slot(1, Team 1)),
			Custom String("{0}", Players In Slot(2, Team 1)), Custom String("{0}", Players In Slot(3, Team 1)), Custom String("{0}",
			Players In Slot(4, Team 1)), Custom String("{0}", Players In Slot(5, Team 1)), Custom String("{0}", Players In Slot(0,
			Team 2)), Custom String("{0}", Players In Slot(1, Team 2)), Custom String("{0}", Players In Slot(2, Team 2)), Custom String(
			"{0}", Players In Slot(3, Team 2)), Custom String("{0}", Players In Slot(4, Team 2)), Custom String("{0}", Players In Slot(5,
			Team 2)));
		If(Global.DJmode == False);
			Global.LightManager = Null;
			Global.DJPlayer = Null;
			Abort;
		End;
		If(Global.DefaultDjPlayer == 0);
			Global.DJPlayer = Host Player;
		Else If(1 <= Global.DefaultDjPlayer && Global.DefaultDjPlayer <= 6);
			Global.DJPlayer = Players In Slot(Global.DefaultDjPlayer - 1, Team 1);
		Else If(7 <= Global.DefaultDjPlayer && Global.DefaultDjPlayer <= 12);
			Global.DJPlayer = Players In Slot(Global.DefaultDjPlayer - 7, Team 2);
		End;
		Wait(1, Ignore Condition);
		If(Global.DJPlayer == 0 || Is Dummy Bot(Global.DJPlayer));
			Global.DJPlayer = Host Player;
		End;
		Wait(0.200, Ignore Condition);
		If(Slot Of(Host Player) == -1);
			Wait(10, Ignore Condition);
			Wait Until(Count Of(Filtered Array(All Players(All Teams), Has Spawned(Current Array Element) && !Is Dummy Bot(
				Current Array Element))) > 0, 9999);
			Global.DJPlayer = Random Value In Array(Filtered Array(All Players(All Teams), Has Spawned(Current Array Element) && !Is Dummy Bot(
				Current Array Element)));
			Wait(1, Ignore Condition);
			Big Message(All Players(All Teams), Custom String("{1}방장이 관전에서 잠수타고 있어서 {0} 님이 DJ가 되었습니다!{1}", Global.DJPlayer,
				Ability Icon String(Hero(루시우), Button(Ability 2))));
			Global.LightManager = Global.DJPlayer;
		End;
		Global.DJPlayer.Love += 100;
	}
}

rule("개인별 입장 초기값")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Has Spawned(Event Player) == True;
	}

	action
	{
		If(Total Time Elapsed < 25);
			Global.CheckInList = Append To Array(Global.CheckInList, Custom String("{0}", Event Player));
			Wait(0.016, Ignore Condition);
		End;
		Set Status(Event Player, Null, Unkillable, 9999);
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
		Start Forcing Player Outlines(All Players(All Teams), All Players(All Teams), False, Color(White), Default);
		Disable Nameplates(All Players(All Teams), All Players(All Teams));
		Disable Game Mode HUD(All Players(All Teams));
		If(Event Player.Hello != 1);
			Event Player.cameraZ = 1;
			Enable Voice Chat(Event Player);
			Disable Voice Chat(Event Player, True, False, True);
			Create Icon(Event Player.SelectPlayer != Null ? Event Player : Null, Event Player.SelectPlayer, Arrow: Down,
				Visible To and Position, Color(Lime Green), False);
			Create In-World Text(Event Player.SelectPlayer != Null ? Event Player : Null, Custom String("[인사] : 인사하기\r\n[감사] : 하트주기"),
				Event Player.SelectPlayer + Vector(0, 1 * Event Player.SelectPlayer.PlayerSize + 1, 0), 0.900, Do Not Clip,
				Visible To and Position, Color(White), Visible Never);
			Event Player.HelpHUDOpened = True;
			Event Player.ArtColor = 0;
			Event Player.PlayerSize = 1;
			Event Player.PlayerVoice = 1;
			Start Scaling Player(Event Player, Event Player.PlayerSize, True);
			Start Modifying Hero Voice Lines(Event Player, Event Player.PlayerVoice, True);
			Event Player.DrawingMode = False;
			Event Player.MAXLightEffect = False;
			Event Player.CinematicEnabled = False;
			Set Projectile Speed(Event Player, 10);
			Create In-World Text(
				Event Player == Global.LightManager || Event Player == Global.DJPlayer || Event Player == Host Player || Is Dummy Bot(
				Event Player) ? Null : All Players(All Teams), Custom String("{1}{0}{2}", Event Player, Array Contains(Global.VIPList,
				Custom String("{0}", Event Player)) ? Custom String("{0}VIP ", Icon String(Moon)) : Hero Icon String(Hero Of(Event Player)),
				Event Player.Love != 0 ? Custom String(" {0}{1}", Icon String(Heart), Event Player.Love) : Custom String(" ")), Event Player,
				1, Do Not Clip, Visible To Position and String, Array Contains(Global.VIPList, Custom String("{0}", Event Player)) ? Color(
				Rose) : Color(White), Default Visibility);
			"DJ 는 스킵"
			Abort If(Event Player == Global.DJPlayer || Is Dummy Bot(Event Player));
			Call Subroutine(Welcome);
			Event Player.cameraX = -8;
			If(Global.DJmode == True);
				Wait Until(Has Spawned(Global.DJPlayer), 99999);
				If(!Array Contains(Global.CheckInList, Custom String("{0}", Event Player)));
					"입장 카메라"
					Start Camera(Event Player, Ray Cast Hit Position(Global.DJPlayer, Global.DJPlayer + Vector(Event Player.cameraX, 3, 5), Null,
						All Players(All Teams), True), Global.DJPlayer, 20);
					Disable Hero HUD(Event Player);
					Chase Player Variable At Rate(Event Player, cameraX, 8, 1.277, Destination and Rate);
					Wait(1, Ignore Condition);
					Small Message(Event Player, Custom String("춤추며 노는방에 오신걸 환영합니다."));
					Wait(4, Ignore Condition);
					Small Message(Event Player, Custom String("P키를 눌러 경기 보이스(주황색 헤드폰)을 누르시면 DJ가 틀고있는 음악을 들으실 수 있습니다."));
					Wait(4, Ignore Condition);
					Small Message(Event Player, Custom String("꼭! 마이크(주황색 마이크 아이콘) 을 눌러 꺼주셔야 다른분들께 방해가 되지 않습니다!"));
					Wait(4, Ignore Condition);
					Global.CheckInList = Append To Array(Global.CheckInList, Custom String("{0}", Event Player));
				End;
			End;
			If(Workshop Setting Toggle(Custom String("[2]시스템 설정"), Custom String("설명 읽기 강제하기(최초 입장시 응답(F)키 를 눌러야만 움직일 수 있음"), False, 0));
				Call Subroutine(Agreement);
			End;
			Event Player.Agreement = True;
			Event Player.MAXLightEffect = Workshop Setting Toggle(Custom String("[4]개인별 설정"), Custom String("화려한 시각효과"), True, 0);
		End;
		Teleport(Event Player, Global.SpawnVector);
		Wait(0.100, Ignore Condition);
		Set Facing(Event Player, Direction Towards(Global.SpawnVector, Global.HostSpawnVector), To World);
		Skip If(Array Contains(Global.VIPList, Custom String("{0}", Event Player)) && Event Player.Hello != 1, 6);
		Start Camera(Event Player, Local Player + Vector(0, Local Player.PlayerSize * 900 + 1, 0), Local Player, 0);
		Wait(0.100, Ignore Condition);
		Start Camera(Event Player, Local Player + Vector(0, Local Player.PlayerSize * 2 + 1, 0), Local Player, 9);
		Wait(1.250, Ignore Condition);
		Start Camera(Event Player, Ray Cast Hit Position(Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0),
			Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Local Player) * (
			-0.500 + Local Player.PlayerSize * -3), Null, All Players(All Teams), False), Local Player + (Eye Position(Local Player)
			- Local Player) + Facing Direction Of(Local Player) * 20, 10);
		Wait(0.500, Ignore Condition);
		Call Subroutine(SetTP);
		Event Player.Camera = True;
		Small Message(Event Player, Custom String("즐거운 시간 되세요!"));
		Enable Hero HUD(Event Player);
		Event Player.Hello = 1;
		If(Hero Of(Event Player) == Hero(에코));
			Small Message(Event Player, Custom String("{0} 에코 궁극기는 적 가까이서 사용하면 선택 됩니다.", Hero Icon String(Hero(에코))));
		End;
	}
}

rule("설명충 다시 등장")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Is Communicating(Host Player, Press the Attack) == True;
	}

	action
	{
		All Players(All Teams).Agreement = False;
		All Players(All Teams).HelpHUDOpened = True;
		Big Message(All Players(All Teams), Custom String("오른쪽 설명을 읽어주세요! {0}{0}{0}", Icon String(Arrow: Right)));
		Big Message(All Players(All Teams), Custom String("여기 보이시죠? 여기좀 봐주세요;; {0}{0}{0}", Icon String(Arrow: Right)));
		Big Message(All Players(All Teams), Custom String("물어보신 내용은 여기 써있어요! {0}{0}{0}", Icon String(Arrow: Right)));
		Big Message(All Players(All Teams), Custom String("눈뽕을 끄려면 {1}+{2} 를 눌러보세요! {0}{0}{0}", Icon String(Arrow: Right),
			Input Binding String(Button(Interact)), Input Binding String(Button(Reload))));
		Big Message(All Players(All Teams), Custom String("{1} 아니면 마이크는 꺼주세요! {0}{0}{0}", Icon String(Arrow: Right), Global.DJPlayer));
		Host Player.Agreement = True;
	}
}

rule("설명충 알겠어요!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating(Event Player, Acknowledge) == True;
	}

	action
	{
		If(Event Player.HelpHUDOpened == True);
			Event Player.HelpHUDOpened = False;
		Else If(Event Player.HelpHUDOpened == False);
			Event Player.HelpHUDOpened = True;
		End;
		Event Player.Agreement = True;
	}
}

rule("오브젝트 설명 드립")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		If(Global.ColorTheme == 0);
			Global.TopDescription = Custom String("스트레스를 풀고 가세요!");
		Else If(Global.ColorTheme == 1);
			Global.TopDescription = Custom String("해피 할로윈~");
		Else If(Global.ColorTheme == 2);
			Global.TopDescription = Custom String("메리 크리스마스~");
		Else If(Global.ColorTheme == 3);
			Global.TopDescription = Custom String("스트레스를 풀고 가세요!");
		Else If(Global.ColorTheme == 4);
			Global.TopDescription = Custom String("새해 복 많이 받으세요~");
		Else If(Global.ColorTheme == 5);
			Global.TopDescription = Custom String("핫-한 여름 되세요!");
		End;
		Wait(120, Ignore Condition);
		Loop If(Global.DJmode == False);
		Global.TopDescription = Custom String("P키를 눌러 경기보이스에 들어오세요!");
		Wait(10, Ignore Condition);
		If(Current Map == Map(눔바니) || Current Map == Map(리알토));
			Global.TopDescription = Custom String("둠피스트 봇을 때려주세요!");
			Wait(10, Ignore Condition);
		End;
		Global.TopDescription = Custom String("앉기를 눌러 Groove를 타주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("음악에 맞춰 점프하세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("미1친듯이 흔들어주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("춤추는 감정표현으로 댄스댄스!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("시네마틱 모드에서 하트를 날려주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("{0} 말고는 제발 마이크는 꺼주세요!", Global.DJPlayer);
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("너무 눈부시면 F+R을 눌러보세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("춤추는 감정표현을 위쪽에 장착하고 와주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("설정-조작법 에서 카운트다운키를 지정해주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("냉장고에 남는 술을 가져오세요!(미성년자는 안돼요!)");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("다른 사람에게 찝적대봐야 안생겨요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("노는방에서 까지 둠피스트를 선택하지 말아주세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("이런거 그만 읽고 춤이나 추세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("즐거운 시간 되세요!");
		Wait(10, Ignore Condition);
		Global.TopDescription = Custom String("제작 : 변기클라우드#3523 / 왼쪽에 디코 주소로 들어와보세요!");
		Wait(30, Ignore Condition);
		Loop;
	}
}

rule("DJ 입장 세팅")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.DJPlayer;
		Has Spawned(Event Player) == True;
	}

	action
	{
		If(Event Player.Hello != 1);
			Call Subroutine(SetTP);
			Teleport(Global.DJPlayer, Global.HostSpawnVector);
			Wait(0.100, Ignore Condition);
			Set Facing(Event Player, Direction Towards(Event Player, Global.SpawnVector), To World);
			Event Player.Agreement = True;
			Big Message(Global.DJPlayer, Custom String("{0}DJ가 되었습니다! 멋진 음악을 틀어주세요!{0}", Ability Icon String(Hero(루시우), Button(Ability 2))));
			Disable Game Mode HUD(Event Player);
			Event Player.MAXLightEffect = True;
		End;
		Event Player.Hello = 1;
	}
}

rule("방장 입장 대기 세팅")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Wait Until(Has Spawned(Host Player), 60);
		If(Host Player.Hello != 1);
			If(Global.DJmode == True);
				If(Slot Of(Host Player) != -1);
					Global.LightManager = Host Player;
					Wait Until(Has Spawned(Global.DJPlayer), 99999);
				End;
			Else;
				Global.LightManager = Null;
				Global.DJPlayer = Null;
			End;
			Wait(0.100, Ignore Condition);
			If(Global.HiddenMap == True);
				Big Message(All Players(All Teams), Custom String("{0} {1} 의 히든맵이 등장하였습니다! {0}", Icon String(Club), Current Map));
			End;
			If(Slot Of(Host Player) != -1);
				Wait Until(Has Spawned(Host Player), 99999);
				Create In-World Text(Host Player == Global.DJPlayer || Host Player == Global.LightManager ? Null : All Players(All Teams),
					Custom String("{0} {1}{2}", Icon String(Flag), Host Player, Host Player.Love != 0 ? Custom String(" {0}{1}", Icon String(
					Heart), Host Player.Love) : Custom String(" ")), Host Player, 1, Do Not Clip, Visible To Position and String, Color(Red),
					Default Visibility);
			End;
			Wait Until(Host Player.Hello == 1, 60);
		End;
		Host Player.Agreement = True;
	}
}

rule("BPM 카운터")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		1 == Global.EnableTick;
	}

	action
	{
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Abort When False);
		Global.Tick = 2;
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Abort When False);
		Global.Tick = 3;
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Abort When False);
		Global.Tick = 4;
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Abort When False);
		Global.Tick = 1;
		Loop;
	}
}

rule("죽지좀 마라")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Dead(Event Player) == True;
		Distance Between(Global.SpawnVector, Event Player) > 2;
		Match Time > 10;
	}

	action
	{
		If(Event Player == Global.DJPlayer);
			Teleport(Event Player, Global.HostSpawnVector);
		Else;
			Teleport(Event Player, Global.SpawnVector);
		End;
		Resurrect(Event Player);
		Set Respawn Max Time(Event Player, 0);
		Clear Status(Event Player, Burning);
		Clear Status(Event Player, Phased Out);
		Clear Status(Event Player, Unkillable);
		Clear Status(Event Player, Invincible);
		Wait(0.100, Ignore Condition);
		Set Status(Event Player, Null, Unkillable, 9999);
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
	}
}

rule("디오니소스행")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		(Match Time < 3 || Global.CTFTimer < 3) == True;
	}

	action
	{
		Start Camera(All Players(All Teams), Local Player + Vector(0, Local Player.PlayerSize * 9 + 1, 0), Local Player, 10);
		Small Message(All Players(All Teams), Custom String("다음 맵으로 이동합니다! 잠시만 기다려주세요!"));
		Clear Status(All Players(All Teams), Phased Out);
		Clear Status(All Players(All Teams), Unkillable);
		Clear Status(All Players(All Teams), Invincible);
		Set Respawn Max Time(All Players(All Teams), 990);
		Set Status(All Players(All Teams), Null, Asleep, 9999);
		Destroy All Effects;
		Destroy All HUD Text;
		Disable Built-In Game Mode Respawning(All Players(All Teams));
		Wait(2, Ignore Condition);
		Kill(All Players(All Teams), Null);
		Start Camera(All Players(All Teams), Local Player + Vector(0, Local Player.PlayerSize * 900 + 1, 0), Local Player, 1);
	}
}

rule("타이머!")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		disabled Game Mode(연습 전투) != Current Game Mode;
	}

	action
	{
		Global.CTFTimer = Global.CTFTimer - 1;
		Set Match Time(Global.CTFTimer);
		Wait(1, Ignore Condition);
		If(Global.CTFTimer <= 0);
			Declare Match Draw;
			Restart Match;
		End;
		Loop;
	}
}

rule("디오니소스 경고")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Match Time <= 60;
		Match Time > 58;
	}

	action
	{
		Big Message(Filtered Array(All Players(All Teams),
			Current Array Element == Global.DJPlayer || Current Array Element == Global.LightManager || Current Array Element == Host Player),
			Custom String("{0}{0} 종료 1분전 입니다 {0}{0}", Hero Icon String(Hero(둠피스트))));
		Wait(1.500, Ignore Condition);
		Big Message(Filtered Array(All Players(All Teams),
			Current Array Element == Global.DJPlayer || Current Array Element == Global.LightManager || Current Array Element == Host Player),
			Custom String("{0}{0} 종료 1분전 입니다 {0}{0}", Hero Icon String(Hero(둠피스트))));
		Wait(1.500, Ignore Condition);
		Big Message(Filtered Array(All Players(All Teams),
			Current Array Element == Global.DJPlayer || Current Array Element == Global.LightManager || Current Array Element == Host Player),
			Custom String("{0}{0} 종료 1분전 입니다 {0}{0}", Hero Icon String(Hero(둠피스트))));
		Wait(1.500, Ignore Condition);
	}
}

rule("Camera to fp")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player.Camera == True;
	}

	action
	{
		disabled Stop Camera(Event Player);
		Call Subroutine(SetFP);
		Wait(0.500, Ignore Condition);
		Event Player.Camera = False;
	}
}

rule("Camera to Tp")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Jump)) == True;
		Event Player.Camera == False;
	}

	action
	{
		disabled Start Camera(Event Player, Ray Cast Hit Position(Event Player + Vector(0, 2, 0), Event Player + Vector(0, 2, 0)
			+ Facing Direction Of(Event Player) * -4, Null, All Players(All Teams), False), Event Player + (Eye Position(Event Player)
			- Event Player) + Facing Direction Of(Event Player) * 20, 100);
		disabled Start Camera(Event Player, Ray Cast Hit Position(Event Player + Vector(0, 2, 0), Event Player + Vector(0,
			3 - Event Player.PlayerSize, 0) + Facing Direction Of(Event Player) * (-3 - Event Player.PlayerSize * 2), Null, All Players(
			All Teams), False), Event Player + (Eye Position(Event Player) - Event Player) + Facing Direction Of(Event Player) * 20, 100);
		Call Subroutine(SetTP);
		Wait(0.500, Ignore Condition);
		Event Player.Camera = True;
	}
}

rule("DJ 퍼포먼스 시작")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		(Is Communicating Any Emote(Event Player) || Is Button Held(Event Player, Button(Ultimate))) == True;
		Event Player == Global.LightManager;
		Event Player.DrawingMode == False;
	}

	action
	{
		Destroy Dummy Bot(Team 1, 5);
		Destroy Dummy Bot(Team 2, 5);
		Global.Tick = 1;
		Global.EnableTick = 1;
		If(Global.DummyDance == True);
			Create Dummy Bot(Hero Of(Global.DJPlayer), Team 2, 5, Global.DJPlayer + World Vector Of(Vector(1, 0, 0), Global.DJPlayer,
				Rotation), Facing Direction Of(Global.DJPlayer));
			Create Dummy Bot(Hero Of(Global.DJPlayer), Team 1, 5, Global.DJPlayer + World Vector Of(Vector(-1, 0, 0), Global.DJPlayer,
				Rotation), Facing Direction Of(Global.DJPlayer));
		End;
		Stop Camera(Event Player);
		Call Subroutine(ColorPicker);
		Communicate(Global.DJPlayer, Emote Up);
	}
}

rule("DJ 퍼포먼스 종료")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == False;
		Event Player == Global.LightManager;
		Is Button Held(Global.LightManager, Button(Crouch)) == True;
		Is Button Held(Global.LightManager, Button(Interact)) != True;
		Global.LightManager.DJMenuHUDOpened == False;
	}

	action
	{
		Wait(2, Abort When False);
		Global.EnableTick = 0;
		Destroy Effect(Global.LightEntity);
		Global.LevelOfClimax = 1;
		Global.Tick = 1;
		Small Message(Global.LightManager, Custom String("퍼포먼스 중지"));
		All Players(All Teams).CinematicEnabled = False;
		Press Button(Global.DJPlayer, Button(Crouch));
	}
}

rule("DJ BOOST UP")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.LightManager;
		Is Button Held(Global.LightManager, Button(Ability 1)) == True;
		Global.LightManager.DJMenuHUDOpened == True;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor1,
			Global.HostSpawnVector, 10);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Sphere, Global.ThemeColor1,
			Global.DJPlayer, 20, Visible To Position and Radius);
		Global.stageEntity = Last Created Entity;
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor3, Global.DJPlayer, 10);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor3,
			Global.DJPlayer, 4);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Color(White),
			Global.BeamVector, 10);
		Wait(30 / Global.BPM, Ignore Condition);
		Destroy Effect(Global.stageEntity);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor2,
			Global.HostSpawnVector, 10);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Sphere, Global.ThemeColor2,
			Global.DJPlayer, 20, Visible To Position and Radius);
		Global.stageEntity = Last Created Entity;
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor4, Global.DJPlayer, 10);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor4,
			Global.DJPlayer, 4);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Color(White),
			Global.BeamVector, 10);
		Wait(30 / Global.BPM, Ignore Condition);
		Destroy Effect(Global.stageEntity);
		Loop If Condition Is True;
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor1, Global.DJPlayer + Vector(0, Random Integer(-10, 50), 0), 10000,
			None);
		Global.GlobalBoostSparkleArray[Count Of(Global.GlobalBoostSparkleArray)] = Append To Array(Append To Array(Empty Array,
			Last Created Entity), Event Player);
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor2, Global.DJPlayer + Vector(0, Random Integer(-10, 50), 0), 10000,
			None);
		Global.GlobalBoostSparkleArray[Count Of(Global.GlobalBoostSparkleArray)] = Append To Array(Append To Array(Empty Array,
			Last Created Entity), Event Player);
		If(Entity Exists(Last Created Entity) == False);
			Call Subroutine(EntityCleaner);
		End;
		Destroy Effect(Global.stageEntity);
		Set Ultimate Charge(All Players(All Teams), 100);
	}
}

rule("DJ Everybody DROP THE BEAT!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Event Player == Global.LightManager;
		Event Player.DrawingMode == False;
	}

	action
	{
		Set Gravity(Global.DJPlayer, 10);
		Destroy Dummy Bot(All Teams, 5);
		Global.LevelOfClimax = 3;
		Set Ultimate Charge(All Players(All Teams), 100);
		If(Global.LightManager.DJMenuHUDOpened == True);
			Press Button(Filtered Array(All Players(All Teams),
				Current Array Element != Global.LightManager && Current Array Element != Global.DJPlayer), Button(Primary Fire));
		Else;
			Press Button(All Players(All Teams), Button(Primary Fire));
		End;
		Big Message(All Players(All Teams), String("{0}?", String("Ready")));
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Big Message(All Players(All Teams), String("{0}!!!", String("Jump")));
		Press Button(Filtered Array(All Players(All Teams),
			Current Array Element != Global.LightManager && Current Array Element != Global.DJPlayer), Button(Ultimate));
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
		Press Button(Filtered Array(All Players(All Teams),
			Current Array Element != Global.LightManager && Current Array Element != Global.DJPlayer), Button(Ultimate));
		Set Gravity(Global.DJPlayer, 100);
		Set Status(All Players(All Teams), Null, Burning, Global.BPMCalibrate_DefaultIs60 * 64 / Global.BPM);
	}
}

rule("미친 방 벽")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.LevelOfClimax >= 2;
		Global.ServerPanic == False;
		Workshop Setting Toggle(Custom String("[2]시스템 설정"), Custom String("춤추는 방벽"), True, 0) == True;
	}

	action
	{
		Start Scaling Barriers(All Players(All Teams), 7, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 5.100, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 4.400, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 3.800, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 3.400, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 3, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 2.700, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Start Scaling Barriers(All Players(All Teams), 2.500, True);
		Wait(Global.BPMCalibrate_DefaultIs60 / 8 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
		Stop Scaling Barriers(All Players(All Teams));
	}
}

rule("Teleport")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is In Air(Event Player) == True;
		Is Communicating Any Emote(Event Player) == False;
	}

	action
	{
		Teleport(Event Player, Position Of(Event Player) + Facing Direction Of(Event Player) * 10);
		Apply Impulse(Event Player, Vector(1, 1, 1), 0.001, To Player, Cancel Contrary Motion);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Color(White),
			Event Player, 1);
		Set Gravity(Event Player, 10);
		While(Is Button Held(Event Player, Button(Interact)));
			Apply Impulse(Event Player, Up, 3, To World, Cancel Contrary Motion);
			Wait(0.048, Ignore Condition);
		End;
		Stop Accelerating(Event Player);
	}
}

rule("Teleport 2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is In Air(Event Player) == False;
	}

	action
	{
		Set Gravity(Event Player, 100);
	}
}

rule("DJ 텐션 레벨 변경 -")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.LightManager;
		Is Button Held(Global.LightManager, Button(Ability 2)) == True;
		Global.LightManager.DJMenuHUDOpened == True;
		Event Player.DrawingMode == False;
	}

	action
	{
		Global.LevelOfClimax = Global.LevelOfClimax + -1;
		Abort If(Global.LevelOfClimax >= 1);
		Global.LevelOfClimax = 1;
	}
}

rule("DJ 텐션 레벨 변경 +")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.LightManager;
		Is Button Held(Global.LightManager, Button(Reload)) == True;
		Global.LightManager.DJMenuHUDOpened == True;
	}

	action
	{
		Global.LevelOfClimax = Global.LevelOfClimax + 1;
		Abort If(Global.LevelOfClimax <= 3);
		Global.LevelOfClimax = 1;
		Global.ModeOfLightEffect = Global.ModeOfLightEffect + 1;
		Call Subroutine(ColorPicker);
		Abort If(Global.ModeOfLightEffect <= 4);
		Global.ModeOfLightEffect = 1;
		Call Subroutine(ColorPicker);
	}
}

rule("조명 수동 변경")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Is Button Held(Global.LightManager, Button(Melee)) == True;
		Global.LightManager.DJMenuHUDOpened == True;
	}

	action
	{
		Global.ModeOfLightEffect = Global.ModeOfLightEffect + 1;
		If(Global.ModeOfLightEffect > 4);
			Global.ModeOfLightEffect = 1;
		End;
		Call Subroutine(ColorPicker);
	}
}

rule("Global 타이밍 조명 1-1")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.Tick == 1;
		Global.EnableTick == 1;
		Global.ServerPanic == False;
	}

	action
	{
		Disable Nameplates(All Players(All Teams), All Players(All Teams));
		If(Global.LevelOfClimax <= 2);
			Start Forcing Player Outlines(All Players(All Teams), All Players(All Teams), False, Color(White), Default);
		End;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor4,
			Global.BeamVector, Global.LevelOfClimax < 3 ? 3 : 10);
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor1, Global.DJPlayer, 3);
		Abort If(Global.LevelOfClimax <= 1);
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor3, Global.DJPlayer, 4);
		Abort If(Global.LevelOfClimax <= 2);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor1,
			Global.HostSpawnVector, 10);
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor2, Global.DJPlayer, 5);
		Start Forcing Player Outlines(All Players(All Teams), All Players(All Teams), True, Global.ThemeColor1, Always);
	}
}

rule("Global 타이밍 조명 1-2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.Tick == 2;
		Global.EnableTick == 1;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor3, Global.DJPlayer, 1);
		Abort If(Global.LevelOfClimax <= 1);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor1,
			Global.DJPlayer, 3);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor4,
			Global.BeamVector, 3);
		Abort If(Global.LevelOfClimax <= 2);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor2,
			Global.BeamVector, 10);
	}
}

rule("Global 타이밍 조명 1-3")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.Tick == 3;
		Global.EnableTick == 1;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor2, Global.DJPlayer, 1);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor3,
			Global.BeamVector, Global.LevelOfClimax < 3 ? 3 : 10);
		Abort If(Global.LevelOfClimax <= 2);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor2,
			Global.HostSpawnVector, 10);
		Start Forcing Player Outlines(All Players(All Teams), All Players(All Teams), True, Global.ThemeColor2, Always);
	}
}

rule("Global 타이밍 조명 1-4")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.Tick == 4;
		Global.EnableTick == 1;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor4, Global.DJPlayer, 1);
		Abort If(Global.LevelOfClimax <= 1);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor2,
			Global.DJPlayer, 3);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor3,
			Global.BeamVector, 3);
		Abort If(Global.LevelOfClimax <= 2);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor1,
			Global.BeamVector, 10);
	}
}

rule("더미봇 춤추기 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Dummy Bot(Event Player) == True;
		Global.Tick == 1;
		Global.EnableTick == 1;
		Global.DummyDance == True;
	}

	action
	{
		Start Holding Button(Event Player, Button(Crouch));
		Wait(Global.BPMCalibrate_DefaultIs60 * 0.500 / Global.BPM, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Abort If(Global.LevelOfClimax <= 1);
		Press Button(Event Player, Button(Primary Fire));
		Abort If(Global.LevelOfClimax <= 2);
		Press Button(Event Player, Button(Jump));
	}
}

rule("더미봇 춤추기 2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Dummy Bot(Event Player) == True;
		Global.Tick == 2;
		Global.EnableTick == 1;
		Global.DummyDance == True;
	}

	action
	{
		Start Holding Button(Event Player, Button(Crouch));
		Wait(Global.BPMCalibrate_DefaultIs60 * 0.500 / Global.BPM, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Abort If(Global.LevelOfClimax <= 2);
		Press Button(Event Player, Button(Jump));
	}
}

rule("더미봇 춤추기 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Dummy Bot(Event Player) == True;
		Global.Tick == 3;
		Global.EnableTick == 1;
		Global.DummyDance == True;
	}

	action
	{
		Start Holding Button(Event Player, Button(Crouch));
		Wait(Global.BPMCalibrate_DefaultIs60 * 0.500 / Global.BPM, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Abort If(Global.LevelOfClimax <= 1);
		Press Button(Event Player, Button(Secondary Fire));
	}
}

rule("더미봇 춤추기 4")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Dummy Bot(Event Player) == True;
		Global.Tick == 4;
		Global.EnableTick == 1;
		Global.DummyDance == True;
	}

	action
	{
		Start Holding Button(Event Player, Button(Crouch));
		Wait(Global.BPMCalibrate_DefaultIs60 * 0.500 / Global.BPM, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Abort If(Global.LevelOfClimax <= 2);
		Press Button(Event Player, Button(Jump));
	}
}

rule("더미 봇 DROP THE BEAT!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Global.LevelOfClimax == 3;
		Is Dummy Bot(Event Player) == True;
		Global.DummyDance == True;
	}

	action
	{
		Set Gravity(Event Player, 10);
		Wait(0.016, Ignore Condition);
		Press Button(Event Player, Button(Jump));
		Press Button(Event Player, Button(Ultimate));
		Wait(Global.BPMCalibrate_DefaultIs60 * 2.500 / Global.BPM, Ignore Condition);
		Set Gravity(Event Player, 100);
		Wait(Global.BPMCalibrate_DefaultIs60 * 1.500 / Global.BPM, Ignore Condition);
		If(Is Dummy Bot(Players In Slot(5, Team 1)));
			Attach Players(Players In Slot(5, Team 1), Global.DJPlayer, Vector(-1, 0, Z Component Of(Global.DJPlayer)));
		End;
		If(Is Dummy Bot(Players In Slot(5, Team 2)));
			Attach Players(Players In Slot(5, Team 2), Global.DJPlayer, Vector(1, 0, Z Component Of(Global.DJPlayer)));
		End;
		Wait(Global.BPMCalibrate_DefaultIs60 * 0.500 / Global.BPM, Ignore Condition);
		If(Is Dummy Bot(Players In Slot(5, Team 1)));
			Teleport(Players In Slot(5, Team 1), Players In Slot(5, Team 1));
		End;
		If(Is Dummy Bot(Players In Slot(5, Team 2)));
			Teleport(Players In Slot(5, Team 2), Players In Slot(5, Team 2));
		End;
	}
}

rule("관중 춤추기 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == True;
		Event Player != Global.DJPlayer;
		Global.LevelOfClimax >= 2;
		Array Contains(Global.VIPList, Custom String("{0}", Event Player)) == False;
		Global.ServerPanic == False;
	}

	action
	{
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor1, Event Player, 5, Visible To Position and Radius);
		Event Player.DanceSparkle = Last Created Entity;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor2,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor1,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
		Destroy Effect(Event Player.DanceSparkle);
		Loop If Condition Is True;
	}
}

rule("관중 궁 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Using Ultimate(Event Player) == True;
		Global.LevelOfClimax >= 3;
		Event Player != Global.DJPlayer;
		Global.ServerPanic == False;
	}

	action
	{
		Set Ultimate Charge(Event Player, 100);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor2,
			Event Player, 0.500);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor1,
			Event Player, 0.500);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("좌클릭 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Firing Primary(Event Player) == True;
		Global.LevelOfClimax <= 2;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor2,
			Event Player, 4);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("우클릭 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Firing Secondary(Event Player) == True;
		Global.LevelOfClimax <= 2;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor1,
			Event Player, 4);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("앉기 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor2, Event Player, 2.500);
		Abort If(Global.LevelOfClimax <= 2);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor1,
			Event Player, 2);
		If(Global.LevelOfClimax <= 2);
			Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		End;
	}
}

rule("Jump! 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Jump)) == True;
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(All Players(All Teams), Ring Explosion, Global.ThemeColor1, Event Player, 2.500);
		Abort If(Global.LevelOfClimax <= 1);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Global.ThemeColor2,
			Event Player, 2);
		If(Global.LevelOfClimax <= 2);
			Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		End;
	}
}

rule("관중 쉬프트 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Using Ability 1(Event Player) == True;
		Global.LevelOfClimax >= 3;
		Event Player != Global.DJPlayer;
		Event Player != Is Dummy Bot(Event Player);
		Hero Of(Event Player) != Hero(루시우);
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor1,
			Event Player, 1);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor2,
			Event Player, 1);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("관중 E 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Using Ability 2(Event Player) == True;
		Global.LevelOfClimax >= 3;
		Event Player != Global.DJPlayer;
		Event Player != Is Dummy Bot(Event Player);
		Global.ServerPanic == False;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor2,
			Event Player, 1);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor1,
			Event Player, 1);
		Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("야광봉")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Melee)) == True;
		Event Player.DJMenuHUDOpened == False;
		Global.ServerPanic == False;
	}

	action
	{
		If(Event Player.Light == 0);
			Event Player.Light = Random Integer(1, 15);
			If(Event Player.Light < 7);
				Create Beam Effect(All Players(All Teams), Good Beam, Eye Position(Event Player) + World Vector Of(Vector(-0.500, 0, 0),
					Event Player, Rotation), Event Player + Facing Direction Of(Event Player) * 4, Custom Color(Random Real(0, 255), Random Real(0,
					255), Random Real(0, 255), 255), Visible To Position and Radius);
			Else If(Event Player.Light == 7);
				Create Beam Effect(All Players(All Teams), Grapple Beam, Eye Position(Event Player) + World Vector Of(Vector(-0.500, 0, 0),
					Event Player, Rotation), Event Player + Facing Direction Of(Event Player) * 4, Color(Turquoise),
					Visible To Position and Radius);
				Small Message(All Players(All Teams), Custom String("{0} {1} 님이 고장난 야광봉을 얻었습니다! 축하해주세요!", Hero Icon String(Hero Of(Event Player)),
					Event Player));
			Else If(Event Player.Light > 7);
				Create Beam Effect(All Players(All Teams), Bad Beam, Eye Position(Event Player) + World Vector Of(Vector(-0.500, 0, 0),
					Event Player, Rotation), Event Player + Facing Direction Of(Event Player) * 4, Custom Color(Random Real(0, 255), Random Real(0,
					255), Random Real(0, 255), 255), Visible To Position and Radius);
			End;
			Event Player.LightEntity = Last Created Entity;
			If(Entity Exists(Last Created Entity) == False);
				Call Subroutine(EntityCleaner);
			End;
		Else;
			Event Player.Light = 0;
			Destroy Effect(Event Player.LightEntity);
		End;
	}
}

rule("잠자기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		(Is Button Held(Event Player, Button(Crouch)) && Is Button Held(Event Player, Button(Ability 2))) == True;
		Event Player.DJMenuHUDOpened == False;
		Event Player.DrawingMode == False;
	}

	action
	{
		If(Is In Spawn Room(Event Player) == True);
			Small Message(Event Player, Custom String("{0}너무 시끄러워서 잘 수가 없어.. 좀 조용한데 나가서 자야겠어", Hero Icon String(Hero Of(Event Player))));
			Abort;
		End;
		If(Event Player.Sleep == 0);
			Clear Status(Event Player, Phased Out);
			Small Message(All Players(All Teams), Custom String("{0}{1}: 쿨쿨... 첫 차 언제와..", Hero Icon String(Hero Of(Event Player)),
				Event Player));
			Set Status(Event Player, Null, Asleep, 9999);
			Small Message(Event Player, Custom String("다시 일어나려면 {0} + {1} 를 누르세요", Input Binding String(Button(Crouch)), Input Binding String(
				Button(Ability 2))));
			Event Player.Sleep = 1;
			Wait(0.500, Ignore Condition);
			Set Status(Event Player, Null, Phased Out, 9999);
			Global.LetsNextMap += 1;
		Else;
			Clear Status(Event Player, Asleep);
			Set Status(Event Player, Null, Phased Out, 9999);
			Event Player.Sleep = 0;
			Set Status(Event Player, Null, Unkillable, 9999);
			Set Status(Event Player, Null, Invincible, 9999);
			Global.LetsNextMap += -1;
		End;
	}
}

rule("눈뽕 제거")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		(Is Button Held(Event Player, Button(Interact)) && Is Button Held(Event Player, Button(Reload))) == True;
	}

	action
	{
		If(Event Player.MAXLightEffect);
			Event Player.MAXLightEffect = False;
			Small Message(Event Player, Custom String("시각효과가 감소되었습니다."));
			Wait(1, Ignore Condition);
		Else;
			Event Player.MAXLightEffect = True;
			Small Message(Event Player, Custom String("눈뽕이 다시 활성화 되었습니다ㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏ"));
			Wait(1, Ignore Condition);
	}
}

rule("영웅변경")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Distance Between(Global.SpawnVector, Event Player) <= 2;
		Is Button Held(Event Player, Button(Jump)) == True;
		Is Dummy Bot(Event Player) == False;
		Current Game Mode != Game Mode(루시우볼);
	}

	action
	{
		Start Camera(Event Player, Local Player + Vector(0, Local Player.PlayerSize * 9 + 1, 0), Local Player, 10);
		Wait(0.250, Ignore Condition);
		Start Camera(Event Player, Local Player + Vector(0, Local Player.PlayerSize * 900 + 1, 0), Local Player, 7);
		Wait(0.500, Ignore Condition);
		Respawn(Event Player);
		Set Respawn Max Time(Event Player, 990);
		Set Player Allowed Heroes(Event Player, Remove From Array(Allowed Heroes(Event Player), Hero Of(Event Player)));
		Set Player Allowed Heroes(Event Player, All Heroes);
	}
}

rule("더미는 외로워")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Has Spawned(Event Player) == True;
		Players In Slot(5, Team 1) != Event Player;
		Players In Slot(5, Team 2) != Event Player;
		Is Dummy Bot(Event Player) == True;
	}

	action
	{
		Wait(0.250, Abort When False);
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, All Teams)), 100, To World,
			Direction and Turn Rate);
		If(Current Map == Map(워크샵 개활지 밤) || Current Map == Map(워크샵 그린 스크린));
			Start Throttle In Direction(Event Player, Facing Direction Of(Event Player), 1, To World, Replace existing throttle,
				Direction and Magnitude);
		End;
		Wait(5, Ignore Condition);
		Communicate(Event Player, Hello);
		Wait(35, Ignore Condition);
		Stop Facing(Event Player);
		Loop If Condition Is True;
		Stop Facing(Event Player);
		Allow Button(Event Player, Button(Ultimate));
		Allow Button(Event Player, Button(Secondary Fire));
		Allow Button(Event Player, Button(Jump));
		Stop Throttle In Direction(Event Player);
	}
}

rule("더미와 함께 점프!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.DJPlayer;
		Is Button Held(Event Player, Button(Jump)) == True;
	}

	action
	{
		Press Button(Filtered Array(All Players(All Teams), Is Dummy Bot(Current Array Element)), Button(Jump));
	}
}

rule("더미와 함께 춤을")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.DJPlayer;
		Is Button Held(Event Player, Button(Crouch)) == True;
	}

	action
	{
		Start Holding Button(Filtered Array(All Players(All Teams), Is Dummy Bot(Current Array Element)), Button(Crouch));
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Holding Button(Filtered Array(All Players(All Teams), Is Dummy Bot(Current Array Element)), Button(Crouch));
	}
}

rule("더미봇은 도른자")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Global.LevelOfClimax >= 3;
		(Hero Of(Event Player) == Hero(젠야타) || Hero Of(Event Player) == Hero(리퍼) || Hero Of(Event Player) == Hero(모이라) || False) == True;
		Is Dummy Bot(Event Player) == True;
		Is Using Ultimate(Event Player) == True;
		Global.DummyDance == True;
	}

	action
	{
		Start Facing(Event Player, Direction From Angles(45, 0), 1080, To Player, Direction and Turn Rate);
		Wait(1, Ignore Condition);
		Loop If Condition Is True;
		Stop Facing(Event Player);
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, All Teams)), 100, To World,
			Direction and Turn Rate);
		If(Global.LevelOfClimax == 3);
			Set Ultimate Charge(Event Player, 100);
			Press Button(Event Player, Button(Ultimate));
			Loop;
		End;
	}
}

rule("더미라인은 도른자")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Global.LevelOfClimax >= 3;
		Hero Of(Event Player) == Hero(라인하르트);
		Is Dummy Bot(Event Player) == True;
		Global.DummyDance == True;
	}

	action
	{
		Disallow Button(Event Player, Button(Primary Fire));
		Disallow Button(Event Player, Button(Ultimate));
		Start Holding Button(Event Player, Button(Secondary Fire));
		Start Facing(Event Player, Direction From Angles(45, 0), 1080, To Player, Direction and Turn Rate);
		Wait(1, Ignore Condition);
		Loop If Condition Is True;
		Stop Facing(Event Player);
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, All Teams)), 100, To World,
			Direction and Turn Rate);
		Allow Button(Event Player, Button(Primary Fire));
		Allow Button(Event Player, Button(Ultimate));
		Stop Holding Button(Event Player, Button(Secondary Fire));
	}
}

rule("무대 세팅 - 호라이즌")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(호라이즌 달 기지);
	}

	action
	{
		Global.HiddenVector = Vector(-32.586, 8.652, -182.610);
		Global.SpawnVector = Vector(12.017, 10.174, -8.860);
		Global.DanceZoneVector = Vector(-23.466, 9.790, -17.825);
		Global.HostSpawnVector = Vector(-31.624, 9.450, 13.730);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(-467, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-476, 181, 254), 200, Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-32.959, 7.173, 19.257), Vector(-25.985, 27.173, 16.310), Color(
			Purple), Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-40.093, 6.822, 11.991), Vector(-30.658, 27.173, 7.913), Color(
			Purple), Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Orange), Vector(-18.560, 9.496, -6.555), 2, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("지구.. 지구를 보자..!"), Vector(-18.560, 9.496, -6.555), 1,
			Clip Against Surfaces, Visible To Position and String, Color(Sky Blue), Default Visibility);
		Global.BeamVector = Vector(-28.054, 21.962, 11.803);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.BeamVector, 10, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(레킹볼), Team 1, 4, Vector(2.634, 10.174, -31.617), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(윈스턴), Team 2, 4, Vector(-25.657, 9.423, -16.906), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 부산사찰 설날")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(부산 사찰 설날);
	}

	action
	{
		Global.HiddenVector = Vector(-236.587, 11.804, 181.165);
		Global.SpawnVector = Vector(-411.714, 11.461, 164.239);
		Global.DanceZoneVector = Vector(-421.019, 12.456, 165.206);
		Global.HostSpawnVector = Vector(-434.832, 12.456, 166.427);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(-328.293, 16.414, 140.535), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-328.293, 16.414, 140.535), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(-328.293, 16.414, 140.535), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(-328.293, 16.414, 140.535), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(-427.426, 12.456, 165.606), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Vector(-427.426, 12.456, 165.606), 200,
			Visible To Position and Radius);
		Global.BeamVector = Vector(-421.019, 19, 165.206);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(D.Va), Team 1, 4, Vector(-429.168, 12.456, 172.726), Null);
				Disallow Button(Players In Slot(4, Team 1), Button(Ultimate));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(D.Va), Team 2, 4, Vector(-430.434, 12.456, 159.538), Null);
				Disallow Button(Players In Slot(4, Team 2), Button(Ultimate));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 부산 (메카기지)")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(부산);
	}

	action
	{
		Global.HiddenVector = Vector(151.795, 12.864, 252.533);
		Create HUD Text(All Players(All Teams), Ability Icon String(Hero(D.Va), Button(Ultimate)), Custom String(
			"이 맵에서는 메카로 제트 비행할 수 있습니다!"), Custom String("D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(D.Va), Button(
			Ability 1)), Input Binding String(Button(Ability 1))), Right, 100, Color(Rose), Color(White), Color(Rose),
			Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("{2} D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(
			D.Va), Button(Ability 1)), Input Binding String(Button(Ability 1)), Ability Icon String(Hero(D.Va), Button(Ultimate))), Vector(
			229.745, 11.311, 258.400), 1, Clip Against Surfaces, Visible To Position and String, Color(Rose), Default Visibility);
		Global.SpawnVector = Vector(211.938, 10.832, 217.118);
		Global.DanceZoneVector = Vector(222.719, 10.584, 242.078);
		Global.HostSpawnVector = Vector(224.601, 17.466, 246.585);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(253.047, 35.548, 313.186), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(253.375, 35.548, 314.172), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(253.549, 35.548, 314.694), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(253.762, 35.548, 315.333), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(219.602, 12, 234.571), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Vector(219.602, 11.424, 234.571), 200,
			Visible To Position and Radius);
		Global.BeamVector = Vector(222.719, 22.584, 242.078);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(D.Va), Team 1, 4, Vector(221.028, 10.268, 212.685), Null);
				Set Ultimate Charge(Players In Slot(4, Team 1), 100);
				Wait(0.250, Ignore Condition);
				Press Button(Players In Slot(4, Team 1), Button(Ultimate));
				Wait(0.250, Ignore Condition);
				Disallow Button(Players In Slot(4, Team 1), Button(Ultimate));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(D.Va), Team 2, 4, Vector(148.575, 12.544, 251.917), Null);
				Disallow Button(Players In Slot(4, Team 2), Button(Ultimate));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 부산시내 설날")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(부산 시내 설날);
		Global.Map < 8;
	}

	action
	{
		Create HUD Text(All Players(All Teams), Ability Icon String(Hero(D.Va), Button(Ultimate)), Custom String(
			"이 맵에서는 메카로 제트 비행할 수 있습니다!"), Custom String("D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(D.Va), Button(
			Ability 1)), Input Binding String(Button(Ability 1))), Right, 100, Color(Rose), Color(White), Color(Rose),
			Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("{2} D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(
			D.Va), Button(Ability 1)), Input Binding String(Button(Ability 1)), Ability Icon String(Hero(D.Va), Button(Ultimate))), Vector(
			51.816, 8.047, -69.725), 1, Clip Against Surfaces, Visible To Position and String, Color(Rose), Default Visibility);
		Global.HiddenVector = Vector(-44.403, 37.472, -182.925);
		Global.SpawnVector = Vector(51.675, 6.176, -73.674);
		Global.DanceZoneVector = Vector(51.903, 13.104, -100.780);
		Global.HostSpawnVector = Vector(51.865, 22.573, -126.946);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(51.675, 36.176, -73.674), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(51.675, 6.176, -73.674), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Vector(51.675, 8.176, -73.674), 200,
			Visible To Position and Radius);
		Global.BeamVector = Vector(51.774, 30.497, -117.437);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(D.Va), Team 1, 4, Vector(-25.136, 18.378, -125.487), Null);
				Disallow Button(Players In Slot(4, Team 1), Button(Ultimate));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(D.Va), Team 2, 4, Vector(133.993, 18.149, -124.950), Null);
				Disallow Button(Players In Slot(4, Team 2), Button(Ultimate));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 부산시내 설날 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(부산 시내 설날);
		Global.Map >= 8;
	}

	action
	{
		Create HUD Text(All Players(All Teams), Ability Icon String(Hero(D.Va), Button(Ultimate)), Custom String(
			"이 맵에서는 메카로 제트 비행할 수 있습니다!"), Custom String("D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(D.Va), Button(
			Ability 1)), Input Binding String(Button(Ability 1))), Right, 100, Color(Rose), Color(White), Color(Rose),
			Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("{2} D.VA 메카 탑승시 길게 [{1}] = {0}슈퍼 부스터!!", Ability Icon String(Hero(
			D.Va), Button(Ability 1)), Input Binding String(Button(Ability 1)), Ability Icon String(Hero(D.Va), Button(Ultimate))), Vector(
			51.816, 8.047, -69.725), 1, Clip Against Surfaces, Visible To Position and String, Color(Rose), Default Visibility);
		Global.HiddenVector = Vector(-322.386, 13.811, -67.763);
		Global.HiddenMap = True;
		Global.SpawnVector = Vector(120.730, 18.174, -125.116);
		Global.DanceZoneVector = Vector(133.898, 17.349, -124.878);
		Global.HostSpawnVector = Vector(127.612, 18.185, -124.946);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(51.675, 36.176, -73.674), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(51.675, 36.176, -73.674), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(51.675, 6.176, -73.674), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Vector(51.675, 8.176, -73.674), 200,
			Visible To Position and Radius);
		Global.BeamVector = Vector(133.885, 21.500, -124.918);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				disabled Create Dummy Bot(Hero(D.Va), Team 1, 4, Vector(-25.136, 18.378, -125.487), Null);
				disabled Disallow Button(Players In Slot(4, Team 1), Button(Ultimate));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(D.Va), Team 2, 4, Vector(133.993, 18.149, -124.950), Null);
				Disallow Button(Players In Slot(4, Team 2), Button(Ultimate));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 블쟈월드 겨울")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(블리자드 월드 겨울);
		Global.Map < 8;
	}

	action
	{
		Global.HiddenVector = Vector(54.697, 12.558, 78.778);
		Global.SpawnVector = Vector(-12.581, -3.270, -35.863);
		Global.DanceZoneVector = Vector(2.778, -4.826, -70.141);
		Global.HostSpawnVector = Vector(2.980, -3.826, -90.243);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(3.035, 33.583, -89.085), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(3.035, 33.583, -89.085), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(3.035, 33.583, -89.085), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(3.035, 33.583, -89.085), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(2.892, -4.433, -70.321), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(2.892, -4.433, -70.321), 200, Visible To Position and Radius);
		Global.BeamVector = Vector(3.068, -0.464, -91.069);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 30, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(토르비욘), Team 2, 4, Vector(-0.454, -2.492, -28.899), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 블쟈월드 겨울 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(블리자드 월드 겨울);
		Global.Map >= 8;
	}

	action
	{
		Global.HiddenMap = True;
		Global.HiddenVector = Vector(-100.122, 2.200, 73.463);
		Global.SpawnVector = Vector(-32.112, 6.980, 99.509);
		Global.DanceZoneVector = Vector(-77.275, 1.700, 66.126);
		Global.HostSpawnVector = Vector(-77.275, 6.325, 66.126);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(-80.743, 70, 62.768), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-80.743, 70, 62.768), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(-80.743, 70, 62.768), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-80.743, 70, 62.768), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(-49.841, 7.031, 93.198), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(-49.841, 7.031, 93.198), 200, Visible To Position and Radius);
		Global.BeamVector = Vector(-77.275, 10.474, 66.126);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 30, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(에코), Team 2, 4, Vector(-49.841, 7.031, 93.198), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 쓰레기촌")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(쓰레기촌);
		Global.Map < 7;
	}

	action
	{
		Global.HiddenVector = Vector(59.144, 10.744, -64.368);
		Global.HostSpawnVector = Vector(-29.119, 3.654, -135.695);
		Global.DanceZoneVector = Vector(-49.666, 2.655, -134.895);
		Global.SpawnVector = Vector(-42.642, 8.008, -118.726);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-29.392, 3.489, -135.887), 3, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-29.107, 2.655, -132.664), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-32.055, 2.655, -137.712), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-31.463, 2.657, -134.643), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-46.881, 3.629, -126.392), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-27.649, 3.678, -124.225), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Vector(-29.392, 3.489, -135.887), 3,
			Visible To Position and Radius);
		Global.BeamVector = Vector(-33.434, 6.342, -133.603);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0}쓰레기 클럽{0}", Icon String(Diamond)), Vector(-41.230, 11.939,
			-116.952), 2, Clip Against Surfaces, Visible To Position and String, Color(Orange), Default Visibility);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(로드호그), Team 1, 4, Vector(-19.694, 7.655, -109.691), Local Vector Of(Vector(-45.511, 2.301, -135.573),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(정크랫), Team 2, 4, Vector(-55.438, 2.551, -132.245), Local Vector Of(Vector(-45.681, 2.654, -135.246),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 쓰레기촌 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(쓰레기촌);
		Global.Map >= 7;
		Global.Map < 9;
	}

	action
	{
		Global.HiddenVector = Vector(60.722, 10.451, -98.778);
		Global.HostSpawnVector = Vector(-89.155, 8.882, -103.593);
		Global.DanceZoneVector = Vector(-92.789, 6.606, -118.897);
		Global.SpawnVector = Vector(-97.117, 14.545, -139.363);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-87.009, 8.613, -101.948), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-90.537, 8.612, -100.947), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-87.009, 8.613, -101.948), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-90.537, 8.612, -100.947), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.DanceZoneVector, 10, Visible To Position and Radius);
		Global.BeamVector = Vector(-90.299, 13.958, -110.974);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(로드호그), Team 1, 4, Vector(-66.227, 14.545, -146.555), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(정크랫), Team 2, 4, Vector(-111.326, 7.693, -110.699), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 쓰레기촌 3")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(쓰레기촌);
		Global.Map == 9;
	}

	action
	{
		Global.HiddenVector = Vector(-53.911, 32.142, 87.762);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(-61.930, 11.655, -57.970);
		Global.DanceZoneVector = Vector(-64.308, 11.655, -67.051);
		Global.SpawnVector = Vector(-66.049, 10.655, -79.267);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Global.DanceZoneVector, 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Global.DanceZoneVector, 5, Visible To Position and Radius);
		Global.BeamVector = Vector(-61.920, 14.481, -57.921);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(로드호그), Team 1, 4, Vector(-55.300, 9.676, -80.901), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(정크랫), Team 2, 4, Vector(-65.058, 11.552, -74.469), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 쓰레기촌 4")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(쓰레기촌);
		Global.Map == 10;
	}

	action
	{
		Global.HiddenVector = Vector(-95.463, 13.501, -86.469);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(-92.540, 17.186, -72.212);
		Global.DanceZoneVector = Vector(-94.423, 11.363, -79.356);
		Global.SpawnVector = Vector(-76.218, 7.612, -101.862);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 10, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 11, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 12, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 13, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 14, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 15, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 16, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 17, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 18, -80.755), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-94.162, 20, -80.755), 20, Visible To Position and Radius);
		Global.BeamVector = Vector(-94.025, 22.773, -80.932);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(로드호그), Team 1, 4, Vector(-83.546, 15.176, -77.097), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(정크랫), Team 2, 4, Vector(-105.729, 15.335, -78.195), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 파리")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(파리);
	}

	action
	{
		Global.HiddenVector = Vector(-102.841, 14.500, -114.903);
		Global.HostSpawnVector = Vector(26.768, 13.173, -79.752);
		Global.DanceZoneVector = Vector(20.083, 18.174, -67.352);
		Global.SpawnVector = Vector(17.893, 11.180, -63.083);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(23.880, 12.173, -81.192), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(29.329, 12.173, -77.880), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Vector(27.783, 13.173, -81.201), 10,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(31.268, 15.601, -87.323), 5, Visible To Position and Radius);
		Global.BeamVector = Vector(26.341, 18, -79.056);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Purple), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(에코), Team 1, 4, Vector(23.961, 19, -74.146), Local Vector Of(Vector(25.502, 12.174, -71.159),
					Players In Slot(4, Team 2), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(위도우메이커), Team 2, 4, Vector(5.994, 12.173, -81.893), Local Vector Of(Vector(25.502, 12.174, -71.159),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 왕의길")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(왕의 길);
	}

	action
	{
		Global.HiddenVector = Vector(-17.639, 77.830, -45.476);
		Global.HostSpawnVector = Vector(-113.850, -3.227, -54.485);
		Global.DanceZoneVector = Vector(-104.016, -2.322, -50.531);
		Global.SpawnVector = Vector(-92.131, -1.319, -44.956);
		Create Effect(All Players(All Teams), Cloud, Color(Yellow), Global.BeamVector, 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Global.DanceZoneVector, 10, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Global.BeamVector, 5, Visible To Position and Radius);
		Global.BeamVector = Vector(-112.119, 1.220, -53.516);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(트레이서), Team 1, 4, Vector(-117.575, -3.227, -28.470), Vector(2.815, 3.176, 50.844));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(트레이서), Team 2, 4, Vector(-101.421, -3.227, -70.972), Vector(2.815, 3.176, 50.844));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 왕의길 겨울")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(왕의 길 겨울);
	}

	action
	{
		Global.HiddenVector = Vector(22.524, 0.015, -55.343);
		Global.HostSpawnVector = Vector(3.596, 3.450, 55.409);
		Global.DanceZoneVector = Vector(0.409, 2.174, 39.287);
		Global.SpawnVector = Vector(-3.292, 2.324, 21.145);
		Create Effect(All Players(All Teams), Cloud, Color(Yellow), Vector(-5.407, 3.201, 44.508), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Yellow), Vector(7.825, 3.221, 41.782), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Vector(0.391, 2.174, 39.161), 10,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(2.651, 11.039, 51.653), 5, Visible To Position and Radius);
		Global.BeamVector = Vector(2.677, 9.856, 51.900);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(트레이서), Team 1, 4, Vector(-20.182, 0.747, 28.307), Vector(2.815, 3.176, 50.844));
				Disallow Button(Players In Slot(4, Team 1), Button(Secondary Fire));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(트레이서), Team 2, 4, Vector(-2.758, 15.232, 23.484), Vector(2.815, 3.176, 50.844));
				Disallow Button(Players In Slot(4, Team 2), Button(Secondary Fire));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 도라도")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(도라도);
	}

	action
	{
		Global.HiddenVector = Vector(314.097, -7.235, 200.739);
		Global.HostSpawnVector = Vector(80.251, 17.102, -6.273);
		Global.DanceZoneVector = Vector(73.607, 8.128, -11.414);
		Global.SpawnVector = Vector(46.096, 7.896, -30.880);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(94.829, 19.810, 5.407), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(94.829, 19.810, 5.407), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(94.829, 19.810, 5.407), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(94.829, 19.810, 5.407), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Vector(59.714, 8.200, -14.124), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(59.714, 8.200, -14.124), 200, Visible To Position and Radius);
		Global.BeamVector = Vector(63.447, 16.575, -18.358);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Green), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Vector(63.140, 10.803, -18.731), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Vector(63.140, 7.803, -18.731), 6, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Light Shaft, Color(Turquoise), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(솜브라), Team 2, 4, Vector(70.514, 12.271, -29.483), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 할리우드")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(할리우드);
	}

	action
	{
		Global.HiddenVector = Vector(1.433, 18.433, -112.531);
		Global.HostSpawnVector = Vector(-27.131, 5.364, -156.348);
		Global.DanceZoneVector = Vector(-29.317, 7.126, -165.249);
		Global.SpawnVector = Vector(-31.880, 7.130, -175.804);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Vector(-21.659, 5.089, -158.228), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Vector(-32.197, 5.089, -155.257), 4, Visible To Position and Radius);
		Global.BeamVector = Vector(-32.509, 10.495, -178.148);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(솔저: 76), Team 1, 4, Vector(-17.393, 4.927, -160.935), Local Vector Of(Vector(-39.149, 4.927, -155.505),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(솔저: 76), Team 2, 4, Vector(-37.470, 4.923, -156.031), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 66번국도")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(66번 국도);
	}

	action
	{
		Global.HiddenVector = Vector(78.882, 37.178, 50.263);
		Global.HostSpawnVector = Vector(66.430, 3.498, -26.811);
		Global.DanceZoneVector = Vector(58.040, 3.179, -22.160);
		Global.SpawnVector = Vector(48.597, 4.718, -18.096);
		Global.BeamVector = Vector(63.267, 7.475, -25.405);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Blue), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(애쉬), Team 1, 4, Vector(55.374, 3.904, -28.784), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(캐서디), Team 2, 4, Vector(55.009, 3.947, -9.266), Local Vector Of(Vector(55.009, 3.947, -9.266),
					Players In Slot(4, Team 2), Rotation));
				Disallow Button(Players In Slot(4, Team 2), Button(Secondary Fire));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 네팔마을")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(네팔 마을);
	}

	action
	{
		Global.HiddenVector = Vector(-139.066, -77.737, 102.795);
		Global.HostSpawnVector = Vector(-137.832, -97.053, -118.813);
		Global.DanceZoneVector = Vector(-141.236, -97.652, -111.829);
		Global.SpawnVector = Vector(-149.952, -97.053, -95.196);
		Global.BeamVector = Vector(-141.236, -89, -111.829);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Global.BeamVector, 300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 25, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(젠야타), Team 1, 4, Vector(-145.728, -97.053, -120.869), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(젠야타), Team 2, 4, Vector(-131.582, -97.053, -113.141), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 네팔제단")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(네팔 제단);
	}

	action
	{
		Global.HiddenVector = Vector(-55.668, 13.714, 116.437);
		Global.HostSpawnVector = Vector(-18.113, 14.348, -0.003);
		Global.DanceZoneVector = Vector(-40.914, 14.348, -0.015);
		Global.SpawnVector = Vector(-80.720, 9.348, 0.067);
		Global.BeamVector = Vector(-33.440, 20.220, -0.040);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Global.BeamVector, 300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 25, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(젠야타), Team 1, 4, Vector(-25.075, 18.319, -8.298), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(젠야타), Team 2, 4, Vector(-24.979, 18.319, 8.169), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 네팔성소")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(네팔 성소);
	}

	action
	{
		Global.HiddenVector = Vector(72.218, 133.910, -58.857);
		Global.HostSpawnVector = Vector(83.409, 128.385, 0.024);
		Global.DanceZoneVector = Vector(99.920, 129.173, -0.053);
		Global.SpawnVector = Vector(51.097, 130.892, 0.047);
		Global.BeamVector = Vector(80.526, 179.100, 0.595);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Global.BeamVector, 300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(99.920, 129.173, -0.053), 5, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(젠야타), Team 1, 4, Vector(92.569, 129.173, -4.079), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(젠야타), Team 2, 4, Vector(92.408, 129.173, 4.138), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 리장정원 설날")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(리장 정원 설날);
		Global.Map < 7;
	}

	action
	{
		Global.HiddenVector = Vector(-93.890, 99.459, 143.430);
		Global.HostSpawnVector = Vector(95.687, 96.450, 143.395);
		Global.DanceZoneVector = Vector(113.997, 95.348, 143.740);
		Global.BeamVector = Vector(113.997, 105.348, 143.740);
		Global.SpawnVector = Vector(128.228, 95.848, 143.487);
		Create Effect(All Players(All Teams), Cloud, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(113.997, 95.348, 143.740), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(113.997, 95.348, 143.740), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(113.997, 95.348, 143.740), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(113.997, 95.348, 143.740), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Vector(113.997, 95.348, 143.740), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(메이), Team 1, 4, Vector(116.796, 96.764, 134.718), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 4, Vector(116.756, 96.764, 152.194), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 리장정원 설날 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(리장 정원 설날);
		Global.Map >= 7;
	}

	action
	{
		Global.HiddenVector = Vector(25.794, 309.450, 337.253);
		Global.HiddenMap = True;
		Create HUD Text(All Players(All Teams), Icon String(Fire), Custom String("이 맵에서는 제트팩을 사용할 수 있습니다!"), Custom String(
			"길게 [{1}] : {0}제트팩!!", Icon String(Fire), Input Binding String(Button(Jump))), Right, 100, Color(Sky Blue), Color(White),
			Color(Sky Blue), Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("길게 [{1}] : {0}제트팩!!", Icon String(Fire), Input Binding String(Button(
			Jump))), Vector(0.578, 227.697, 261.161), 1, Clip Against Surfaces, Visible To Position and String, Color(Sky Blue),
			Default Visibility);
		Global.HostSpawnVector = Vector(0.045, 242.728, 210.114);
		Global.DanceZoneVector = Vector(0.184, 226.173, 237.152);
		Global.BeamVector = Vector(-0.087, 324.173, 239.066);
		Global.SpawnVector = Vector(-0.067, 271.174, 261.014);
		Create In-World Text(All Players(All Teams), Custom String("{0} 위쪽에 영웅 변경이 있습니다. 알아서 날아 가세요..", Icon String(Arrow: Up)), Vector(
			0.447, 230.997, 255.774), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.DanceZoneVector, 100, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 50, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 10, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-0.087, 324.173, 239.066), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-0.087, 324.173, 239.066), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-0.087, 324.173, 239.066), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(-0.087, 324.173, 239.066), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Vector(-0.087, 324.173, 239.066), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(메이), Team 1, 4, Vector(-24.947, 226.173, 243.315), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 4, Vector(24.575, 226.173, 242.707), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(메이), Team 1, 3, Vector(-22.987, 243.597, 346.735), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 3, Vector(21.102, 243.662, 345.936), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 리장야시장 설날")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(리장 야시장 설날);
	}

	action
	{
		Global.HiddenVector = Vector(1.031, -0.550, -79.630);
		Global.HostSpawnVector = Vector(1.049, 0.348, -67.525);
		Global.DanceZoneVector = Vector(1.019, 0.348, -61.155);
		Global.BeamVector = Vector(1.019, 10, -61.155);
		Global.SpawnVector = Vector(1.063, 1.348, -10.352);
		Create Effect(All Players(All Teams), Cloud, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(1.074, 25.848, -11.829), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(1.074, 25.848, -11.829), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(1.074, 25.848, -11.829), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(1.074, 25.848, -11.829), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Vector(1.074, 25.848, -11.829), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 4, Vector(1.053, 3.348, -77.474), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 리장센터 설날")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(리장 관제 센터 설날);
	}

	action
	{
		Global.HiddenVector = Vector(-53.847, 273.116, 325.624);
		Global.HostSpawnVector = Vector(0.006, 271.173, 266.207);
		Global.DanceZoneVector = Vector(-0.013, 279.174, 300.981);
		Global.BeamVector = Vector(0.004, 280.498, 280.033);
		Global.SpawnVector = Vector(0.001, 270, 314.677);
		Create Effect(All Players(All Teams), Cloud, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(1.849, 285.753, 204.970), 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(1.849, 285.753, 204.970), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(1.849, 285.753, 204.970), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(1.849, 285.753, 204.970), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Vector(1.849, 285.753, 204.970), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(0.017, 279.176, 303.019), 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 4, Vector(-0.099, 279.173, 292.950), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 아유타야")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(아유타야);
	}

	action
	{
		Global.HiddenVector = Vector(17.771, 54.728, -38.259);
		Global.HostSpawnVector = Vector(15.943, 2.450, 89.953);
		Global.DanceZoneVector = Vector(15.999, 2.174, 98.075);
		Global.BeamVector = Vector(16.004, 4.667, 97.971);
		Global.SpawnVector = Vector(15.958, 2.173, 108.588);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.BeamVector, 18, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(시메트라), Team 1, 4, Vector(5.961, 2.173, 107.550), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(바티스트), Team 2, 4, Vector(25.842, 2.174, 107.737), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 하나무바라 겨울")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(하나무라 겨울);
	}

	action
	{
		Global.HiddenVector = Vector(88.107, -0.550, 30.247);
		Global.HostSpawnVector = Vector(-16.909, 0.700, -90.763);
		Global.DanceZoneVector = Vector(-13.574, 10.173, -67.196);
		Global.BeamVector = Vector(-17.559, 5.116, -91.430);
		Global.SpawnVector = Vector(11.884, -0.510, -62.021);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Vector(-8.647, 0.249, -82.316), 10, Visible To Position and Radius);
		Disallow Button(Players In Slot(4, Team 2), Button(Jump));
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(겐지), Team 1, 4, Vector(-3.045, 3.713, -82.459), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(한조), Team 2, 4, Vector(-8.699, 3.714, -76.768), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 하바나")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(하바나);
		Global.Map < 8;
	}

	action
	{
		Global.HiddenVector = Vector(27.368, 7.351, -44.695);
		Global.HostSpawnVector = Vector(-34.224, 6.841, 67.623);
		Global.DanceZoneVector = Vector(-34.295, 8.020, 47.800);
		Global.BeamVector = Vector(-34.223, 12.840, 77.707);
		Global.SpawnVector = Vector(-34.229, 7.024, -16.754);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Lime Green), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Vector(-34.220, 8.020, 51.499), 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(메르시), Team 1, 4, Vector(-19.649, 8.172, 50.245), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(겐지), Team 2, 4, Vector(-50.880, 8.172, 49.778), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 하바나 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(하바나);
		Global.Map >= 8;
	}

	action
	{
		Global.HiddenVector = Vector(186.179, 19.127, 0.583);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(187.931, 18.124, -63.965);
		Global.DanceZoneVector = Vector(186.101, 12.424, -46.465);
		Global.BeamVector = Vector(187.345, 26.812, -50.519);
		Global.SpawnVector = Vector(199.896, 11.173, -32.300);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Lime Green), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.DanceZoneVector, 20, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(메르시), Team 1, 4, Vector(159.306, 12.201, -29.509), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(겐지), Team 2, 4, Vector(159.021, 12.203, -63.479), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 볼스카야")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(볼스카야 인더스트리);
	}

	action
	{
		Global.HiddenVector = Vector(-40.219, -0.863, -83.514);
		Global.HostSpawnVector = Vector(-132.692, 6.020, 25.906);
		Global.DanceZoneVector = Vector(-123.001, 6.020, 31.693);
		Global.BeamVector = Vector(-139.330, 30.218, 22.171);
		Global.SpawnVector = Vector(-115.158, 6.020, 36.489);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(-118.357, 6.020, 34.747), 10, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(자리야), Team 1, 4, Vector(-108.633, 7.193, 9.114), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(자리야), Team 2, 4, Vector(-131.528, 7.193, 46.783), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 오아시스 도심")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(오아시스 도심);
	}

	action
	{
		Global.HiddenVector = Vector(239.632, 2.301, 142.438);
		Global.HostSpawnVector = Vector(225.239, 2.348, 160.694);
		Global.DanceZoneVector = Vector(213.214, 2.347, 178.477);
		Global.BeamVector = Vector(217.306, 12.152, 172.408);
		Global.SpawnVector = Vector(203.737, 2.347, 193.350);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.BeamVector, 38, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Orange), Global.BeamVector, 20, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(모이라), Team 1, 4, Vector(215.900, 8.174, 185.543), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(모이라), Team 2, 4, Vector(206.041, 8.573, 179.155), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 오아시스 정원")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(오아시스 정원);
	}

	action
	{
		Global.HiddenVector = Vector(77.786, 18.383, -293.364);
		Global.HostSpawnVector = Vector(197.321, 8.733, -173.244);
		Global.DanceZoneVector = Vector(206.430, 7.768, -182.528);
		Global.BeamVector = Vector(197.321, 15, -173.244);
		Global.SpawnVector = Vector(220.008, 7.768, -193.280);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.BeamVector, 38, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Orange), Global.DanceZoneVector, 23, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(모이라), Team 1, 4, Vector(192.710, 25.683, -196.245), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(모이라), Team 2, 4, Vector(209.393, 25.683, -179.373), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 오아시스 대학")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(오아시스 대학);
	}

	action
	{
		Global.HiddenVector = Vector(-188.008, 10.850, 0.007);
		Global.HostSpawnVector = Vector(-218.468, 60.174, -0.091);
		Global.DanceZoneVector = Vector(-188.873, 60.174, -0.868);
		Global.BeamVector = Vector(-188.933, 74.997, -0.489);
		Global.SpawnVector = Vector(-166.838, 59, -1.194);
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Vector(-232.231, 0, 0.004), 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Vector(-232.231, 0, 0.004), 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(-232.231, 0, 0.004), 1000, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0} 밖으로 텔레포트 하면 {1}수영하실 수 있습니다 {0}", Icon String(Arrow: Up),
			Icon String(Spiral)), Vector(-232.231, 61.650, 0.004), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue),
			Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.BeamVector, 38, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Orange), Global.BeamVector, 58, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(-187.247, 59, -0.679), 40, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Vector(-187.247, 59, -0.679), 30, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(모이라), Team 1, 4, Vector(-188.024, 67.976, -24.688), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(모이라), Team 2, 4, Vector(-187.885, 67.935, 24.386), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 리알토")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(리알토);
	}

	action
	{
		Global.HiddenVector = Vector(-142.304, -0.824, -215.952);
		Create In-World Text(All Players(All Teams), Custom String("{0} 밖으로 텔레포트 하면 {1}수영하실 수 있습니다 {0}", Icon String(Arrow: Up),
			Icon String(Spiral)), Vector(-56.075, 0.099, -59.323), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue),
			Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(-112.133, -0.990, -37.119), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Vector(-110.745, -2.563, -37.987), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(-108.711, -0.170, -39.257), 1000,
			Visible To Position and Radius);
		Global.HostSpawnVector = Vector(-57.007, 6.108, -166.300);
		Global.DanceZoneVector = Vector(-56.941, 4.924, -156.976);
		Global.BeamVector = Vector(-56.997, 10.657, -171.029);
		Global.SpawnVector = Vector(-56.986, 5.198, -185.825);
		Create Effect(All Players(All Teams), Light Shaft, Color(Red), Vector(-57.068, 2, -171.168), 16, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.BeamVector, 8, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(-56.834, 3.750, -161.552), 100, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(리퍼), Team 1, 4, Vector(-49.002, 4.924, -157.982), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(둠피스트), Team 2, 4, Vector(-56.985, 4.924, -155.908), Null);
				Disallow Button(Players In Slot(4, Team 2), Button(Secondary Fire));
				Wait(0.250, Ignore Condition);
				Clear Status(Players In Slot(4, Team 2), Phased Out);
				Clear Status(Players In Slot(4, Team 2), Invincible);
				Set Max Health(Players In Slot(4, Team 2), 1000);
				Clear Status(Players In Slot(4, Team 2), Unkillable);
			End;
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(솜브라), Team 1, 3, Vector(-65.771, 4.924, -158.112), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(시그마), Team 2, 3, Vector(-48.978, 4.924, -175.631), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 1)));
				Create Dummy Bot(Hero(모이라), Team 1, 2, Vector(-56.971, 5.349, -177.216), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 2)));
				Create Dummy Bot(Hero(위도우메이커), Team 2, 2, Vector(-65.004, 4.926, -175.691), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - Aㅏ누비스 신전")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(아누비스 신전);
	}

	action
	{
		Global.HiddenVector = Vector(-72.208, 5.621, -83.034);
		Global.HostSpawnVector = Vector(-5.871, 29.181, 143.141);
		Global.DanceZoneVector = Vector(9.056, 21.988, 111.001);
		Global.BeamVector = Vector(-5.228, 47.673, 151.729);
		Global.SpawnVector = Vector(-13.381, 20.736, 94.919);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Vector(-3.016, 20.989, 129.511), 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Vector(-3.016, 20.989, 129.511), 15,
			Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0} 떨어지면 못올라옴 ㅋ", Icon String(Warning)), Vector(-7.508, 21.341,
			104.589), 1, Clip Against Surfaces, Visible To Position and String, Color(Red), Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.BeamVector, 38, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Orange), Global.BeamVector, 58, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Vector(-6.737, 20.291, 116.647), 10, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Aura, Color(Orange), Vector(-6.253,
			21.988, 140.183), 400, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(아나), Team 1, 4, Vector(-7.187, 20.292, 115.510), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(파라), Team 2, 4, Vector(-5.276, 53.345, 150.337), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 지브롤터")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(감시 기지: 지브롤터);
	}

	action
	{
		Global.HiddenVector = Vector(-16.284, 33.698, -222.694);
		Global.HostSpawnVector = Vector(84.804, -9.975, 31.761);
		Global.DanceZoneVector = Vector(75.462, -9.050, 38.567);
		Global.BeamVector = Vector(75.509, -3.053, 38.584);
		Global.SpawnVector = Vector(62.862, -4.975, 62.187);
		Create Effect(All Players(All Teams), Light Shaft, Color(Turquoise), Vector(75.453, -11.050, 38.438), 16,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Turquoise), Global.BeamVector, 8, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(-56.834, 3.750, -161.552), 100, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(윈스턴), Team 1, 4, Vector(92.215, -5.799, 36.158), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(트레이서), Team 2, 4, Vector(92.720, -6.801, 60.129), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(브리기테), Team 1, 3, Vector(71.013, -8.801, 54.064), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(라인하르트), Team 2, 3, Vector(86.328, -6.801, 53.820), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 1)));
				Create Dummy Bot(Hero(메이), Team 1, 2, Vector(62.372, -8.802, 40.953), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 2)));
				Create Dummy Bot(Hero(메르시), Team 2, 2, Vector(66.879, -5.755, 58.087), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 남극 겨울")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(탐사 기지: 남극 겨울);
	}

	action
	{
		Global.HiddenVector = Vector(-10.422, 8.446, -56.605);
		Global.HostSpawnVector = Vector(-17.098, 40.390, -2.868);
		Global.DanceZoneVector = Vector(2.232, 12.808, 25.010);
		Global.BeamVector = Vector(7.577, 59.729, 0.266);
		Global.SpawnVector = Vector(4.156, 23.622, -50.778);
		Create In-World Text(All Players(All Teams), Custom String("{0} {1} + {2} = 텔포", Icon String(Arrow: Up), Input Binding String(
			Button(Jump)), Input Binding String(Button(Interact))), Vector(0.682, 26.300, -42.420), 1, Clip Against Surfaces,
			Visible To Position and String, Color(Sky Blue), Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.HostSpawnVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.BeamVector, 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.BeamVector, 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Global.BeamVector, 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.BeamVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Global.BeamVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Global.BeamVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Global.BeamVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 10, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Global.BeamVector, 300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Global.BeamVector, 300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Aqua), Global.BeamVector, 100, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 150, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(메이), Team 2, 4, Vector(-24.411, 42.838, -25.821), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 일리오스 + 일리오스 등대")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		(Current Map == Map(일리오스 등대) || Current Map == Map(일리오스)) == True;
	}

	action
	{
		Global.HiddenVector = Vector(-47.747, -60.998, -1000);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(505.603, -71.500, -131.510), 1500,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Vector(505.603, -71.500, -131.510), 1500,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(505.603, -63, -131.510), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Vector(505.603, -63, -131.510), 1000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(505.603, -63, -131.510), 1000, Visible To Position and Radius);
		Global.HostSpawnVector = Vector(370.460, -28.641, -56.747);
		Global.DanceZoneVector = Vector(358.504, -25.641, -51.752);
		Global.BeamVector = Vector(357.869, -13.716, -51.251);
		Global.SpawnVector = Vector(326.409, -23.665, -38.359);
		Create Effect(All Players(All Teams), Light Shaft, Color(Blue), Vector(370.429, -70.060, -56.729), 80,
			Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0} 외곽 원 밖까지 텔레포트 하면 {1}수영하실 수 있습니다 {0}", Icon String(Arrow: Up),
			Icon String(Spiral)), Vector(420, -23.645, -76), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue),
			Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("{0} 접근 금지! 원에 가까이 오시면 죽습니다! {0}", Icon String(Warning)), Vector(
			420.080, -60.863, -76.326), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue), Default Visibility);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Vector(352.022, -28.253, -17.159), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(352.022, -28.253, -17.159), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Vector(329.947, -28.253, -72.131), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(329.947, -28.253, -72.131), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(368.701, -26.892, -55.973), 200,
			Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(353.023, -25.846, -12.030), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(326.405, -25.845, -76.169), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 일리오스 우물")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(일리오스 우물);
	}

	action
	{
		Global.HiddenVector = Vector(-315.364, -2.853, 64.149);
		Create Effect(All Players(All Teams), Good Aura, Color(Aqua), Vector(-91.115, 105.466, -190.541), 40,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-91.115, 105.466, -190.541), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Vector(-91.115, 105.466, -190.541), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-91.115, 105.466, -190.541), 70,
			Visible To Position and Radius);
		Global.HostSpawnVector = Vector(-90.479, 102.720, -187.036);
		Global.DanceZoneVector = Vector(-37.410, 91.056, -112.206);
		Global.BeamVector = Vector(-90.541, 117.383, -187.323);
		Global.SpawnVector = Vector(-139.237, 62.697, 13.595);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(-71.208, 83.048, -92.438), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(-45.060, 82.584, -66.405), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 일리오스 폐허")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(일리오스 폐허);
		Global.Map < 8;
	}

	action
	{
		Global.HiddenVector = Vector(38.461, 78.817, -138.243);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura, Color(Aqua), Vector(28.538,
			61.804, -217.576), 40, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura, Color(Orange), Vector(
			28.538, 61.804, -217.576), 50, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura, Color(Lime Green), Vector(
			28.538, 61.804, -217.576), 60, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura, Color(Blue), Vector(28.538,
			61.804, -217.576), 70, Visible To Position and Radius);
		Global.HostSpawnVector = Vector(28.408, 62.561, -148.932);
		Global.DanceZoneVector = Vector(28.385, 58.542, -157.259);
		Global.BeamVector = Vector(28.404, 80, -157.159);
		Global.SpawnVector = Vector(28.538, 61.804, -177.576);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(33.543, 58.542, -148.711), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(23.511, 58.542, -148.916), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 일리오스 폐허 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(일리오스 폐허);
		Global.Map >= 8;
	}

	action
	{
		Global.HiddenVector = Vector(-51.533, 107.566, -112.868);
		Global.HiddenMap = True;
		Create Effect(All Players(All Teams), Good Aura, Color(Aqua), Vector(306.880, 74.337, -164.103), 40,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(306.880, 74.337, -164.104), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Vector(306.880, 74.337, -164.103), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(306.878, 74.337, -164.103), 70,
			Visible To Position and Radius);
		Global.HostSpawnVector = Vector(179.644, 61.447, -160.132);
		Global.DanceZoneVector = Vector(164.683, 60.847, -160.200);
		Global.BeamVector = Vector(179.871, 78.063, -160.257);
		Global.SpawnVector = Vector(145.606, 62.551, -160.180);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(161.391, 66.350, -166.768), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(161.403, 70.668, -153.605), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 눔바니")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(눔바니);
	}

	action
	{
		Global.HiddenVector = Vector(178.227, 11.108, 44.714);
		Global.HostSpawnVector = Vector(258.448, 8.623, 22.743);
		Global.DanceZoneVector = Vector(248.790, 1.432, 22.723);
		Global.SpawnVector = Vector(234.864, 1.429, 22.734);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Global.DanceZoneVector, 10, Visible To Position and Radius);
		Global.BeamVector = Vector(240.309, 3, 22.702);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(오리사), Team 1, 4, Vector(248.096, 4.886, 33.663), Vector(2.815, 3.176, 50.844));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(오리사), Team 2, 4, Vector(248.139, 4.878, 11.621), Vector(2.815, 3.176, 50.844));
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(둠피스트), Team 2, 3, Vector(260.848, 1.748, 22.782), Null);
				Disallow Button(Players In Slot(3, Team 2), Button(Secondary Fire));
				Wait(0.250, Ignore Condition);
				Clear Status(Players In Slot(3, Team 2), Phased Out);
				Clear Status(Players In Slot(3, Team 2), Invincible);
				Set Max Health(Players In Slot(3, Team 2), 1000);
				Clear Status(Players In Slot(3, Team 2), Unkillable);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 카스티요")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(카스티요);
	}

	action
	{
		Global.HiddenVector = Vector(-120.031, 64.939, 100.315);
		Global.HostSpawnVector = Vector(-130.263, 35.553, 63.921);
		Global.DanceZoneVector = Vector(-115.650, 39.747, 60.919);
		Global.SpawnVector = Vector(-75.069, 33.172, 53.019);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(-102.884, 41.657, 59.026), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-102.884, 41.657, 59.026), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-102.884, 41.657, 59.026), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(-102.884, 41.657, 59.026), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.SpawnVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.SpawnVector, 200, Visible To Position and Radius);
		Global.BeamVector = Vector(-130.903, 42.743, 63.738);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Green), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Vector(63.140, 10.803, -18.731), 2, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Sky Blue), Vector(63.140, 7.803, -18.731), 6, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Turquoise), Global.BeamVector, 30, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(솜브라), Team 2, 4, Vector(-115.354, 33.780, 24.163), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 네크로폴리스")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(네크로폴리스);
	}

	action
	{
		Global.HiddenVector = Vector(-51.979, 10.450, -7.864);
		Global.HostSpawnVector = Vector(-17.497, 5.494, -0.152);
		Global.DanceZoneVector = Vector(-31.121, 3.348, 0.062);
		Global.SpawnVector = Vector(18.385, -0.652, -0.100);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-97.455, 57.275, -6.647), 15, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-97.455, 57.275, -6.647), 25,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(-97.455, 57.275, -6.647), 35,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-97.455, 57.275, -6.647), 45, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.SpawnVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.SpawnVector, 200, Visible To Position and Radius);
		Global.BeamVector = Vector(-19.137, 10.898, 0.028);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Green), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.BeamVector, 60, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(솔저: 76), Team 1, 4, Vector(8.543, 6.061, -8.569), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(아나), Team 2, 4, Vector(8.511, 6.063, 7.652), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 개활지")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(워크샵 개활지 밤);
	}

	action
	{
		Global.HiddenVector = Vector(318.469, 0.600, -192.118);
		Create HUD Text(All Players(All Teams), Icon String(Bolt), Custom String("이 맵에서는 부스터를 쓸 수 있습니다!"), Custom String(
			"길게 [{1}] = {0}부스터!!", Icon String(Bolt), Input Binding String(Button(Ability 1))), Right, 100, Color(Red), Color(White),
			Color(Red), Visible To and String, Default Visibility);
		Create In-World Text(All Players(All Teams), Custom String("길게 [{1}] = {0}부스터!!", Icon String(Bolt), Input Binding String(Button(
			Ability 1))), Vector(0, 4, -370), 1, Clip Against Surfaces, Visible To Position and String, Color(Red), Default Visibility);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(3, 0, -384), Vector(3, 10, 384), Color(Purple),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-3, 0, -384), Vector(-3, 10, 384), Color(Purple),
			Visible To Position and Radius);
		Global.HostSpawnVector = Vector(0, 0, 380);
		Global.DanceZoneVector = Vector(0, 0, 0);
		Global.BeamVector = Vector(0, 30, 384);
		Global.SpawnVector = Vector(0, 0, -380);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(-2.500, 0, -2.500), Vector(0, 10, 0), Global.ThemeColor4,
			Visible To Position Radius and Color);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(2.500, 0, -2.500), Vector(0, 10, 0), Global.ThemeColor2,
			Visible To Position Radius and Color);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(-2.500, 0, 2.500), Vector(0, 10, 0), Global.ThemeColor3,
			Visible To Position Radius and Color);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(2.500, 0, 2.500), Vector(0, 10, 0), Global.ThemeColor1,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Vector(0, 10, 0), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Global.ThemeColor1, Vector(288, 0, 288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Good Aura, Global.ThemeColor2, Vector(288, 0, -288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Good Aura, Global.ThemeColor3, Vector(-288, 0, 288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Good Aura, Global.ThemeColor4, Vector(-288, 0, -288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor1, Vector(288, 0, 288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor2, Vector(288, 0, -288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor3, Vector(-288, 0, 288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.ThemeColor4, Vector(-288, 0, -288), 10000,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Vector(288, 0, 288), 20,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor2, Vector(288, 0, -288), 20,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor3, Vector(-288, 0, 288), 20,
			Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor4, Vector(-288, 0, -288), 20,
			Visible To Position Radius and Color);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(0, 0, 384), Vector(0, 384, 0), Color(Purple),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(0, 0, -384), Vector(0, 384, 0), Color(Purple),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-384, 0, 0), Vector(0, 384, 0), Color(Purple),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(384, 0, 0), Vector(0, 384, 0), Color(Purple),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(384, 0, 384), Vector(0, 384, 0), Color(Green),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(384, 0, -384), Vector(0, 384, 0), Color(Green),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-384, 0, 384), Vector(0, 384, 0), Color(Green),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-384, 0, -384), Vector(0, 384, 0), Color(Green),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(192, 0, 384), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(384, 0, 192), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-192, 0, 384), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(384, 0, -192), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(192, 0, -384), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-384, 0, 192), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-192, 0, -384), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Vector(-384, 0, -192), Vector(0, 384, 0), Color(Yellow),
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.HostSpawnVector, 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Global.HostSpawnVector, 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Turquoise), Global.HostSpawnVector, 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Global.HostSpawnVector, 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.HostSpawnVector, 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Global.Tick == 1 ? Global.ThemeColor1 : (Global.Tick == 2 ? Global.ThemeColor2 : (
			Global.Tick == 3 ? Global.ThemeColor3 : Global.ThemeColor4)), Vector(0, -26, 384), 135, Visible To Position Radius and Color);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(96, 0, 384), Global.BeamVector, Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(-96, 0, 384), Global.BeamVector, Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(96, 0, 288), Global.BeamVector, Color(Red),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Vector(-96, 0, 288), Global.BeamVector, Color(Red),
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Sky Blue), Global.BeamVector, 38, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Vector(0, 0, 0), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Vector(0, 384, 0), 30, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Vector(0, 10, 0), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Vector(0, 0, 0), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Vector(0, 0, 0), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(0, 0, 384), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Vector(0, 1, 384), 10000, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(0, 2, 384), 10000, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(트레이서), Team 1, 4, Vector(30, 0, 330), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(에코), Team 2, 4, Vector(-30, 0, 330), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(한조), Team 1, 3, Vector(-288, 0, -288), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(젠야타), Team 2, 3, Vector(288, 0, -288), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 1)));
				Create Dummy Bot(Hero(D.Va), Team 1, 2, Vector(288, 0, 0), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 2)));
				Create Dummy Bot(Hero(모이라), Team 2, 2, Vector(-288, 0, 0), Null);
			End;
			If(!Entity Exists(Players In Slot(1, Team 1)));
				Create Dummy Bot(Hero(레킹볼), Team 1, 1, Vector(0, 0, 0), Null);
			End;
			If(!Entity Exists(Players In Slot(1, Team 2)));
				Create Dummy Bot(Hero(바스티온), Team 2, 1, Vector(0, 0, -288), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 카네자카")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(카네자카);
		Global.Map < 8;
	}

	action
	{
		Global.HiddenVector = Vector(-93.526, 11.299, 29.058);
		Global.HostSpawnVector = Vector(-30.573, 12.340, -9.511);
		Global.DanceZoneVector = Vector(5.618, 10.450, 1.750);
		Global.SpawnVector = Vector(-0.398, 10.450, -46.653);
		Global.BeamVector = Vector(-30.719, 41.611, -9.578);
		Create Effect(All Players(All Teams), Light Shaft, Color(Rose), Vector(-5.666, 6.300, -41.393), 5, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Rose), Vector(-20.794, 38.457, 105.694), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Vector(-36.576,
			6.500, -9.161), 120, Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.Tick % 2 == 0 ? Global.ThemeColor3 : Global.ThemeColor4, Vector(-36.576,
			6.500, -9.161), 120, Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(브리기테), Team 1, 3, Vector(-16.833, 11.950, 20.982), Local Vector Of(Vector(-16.833, 11.950, 20.982),
					Players In Slot(3, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(애쉬), Team 2, 3, Vector(3.715, 7.450, 8.019), Local Vector Of(Vector(3.715, 7.450, 8.019), Players In Slot(3,
					Team 2), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(겐지), Team 1, 4, Vector(-20.794, 38.457, 105.694), Local Vector Of(Vector(-20.794, 38.457, 105.694),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(한조), Team 2, 4, Vector(-30.710, 8.002, -8.515), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 카네자카 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(카네자카);
		Global.Map >= 8;
	}

	action
	{
		Global.HiddenMap = True;
		Global.HiddenVector = Vector(-65.645, 12.450, -11.803);
		Global.HostSpawnVector = Vector(-63.734, 13.595, -27.537);
		Global.DanceZoneVector = Vector(-31.013, 8.144, -9.540);
		Global.SpawnVector = Vector(-30.588, 12.486, -9.594);
		Global.BeamVector = Vector(-58.708, 17.550, -27.371);
		Create Effect(All Players(All Teams), Light Shaft, Color(Rose), Vector(-5.666, 6.300, -41.393), 5, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Rose), Vector(-20.794, 38.457, 105.694), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Vector(-36.576,
			6.500, -9.161), 120, Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Global.Tick % 2 == 0 ? Global.ThemeColor3 : Global.ThemeColor4, Vector(-36.576,
			6.500, -9.161), 120, Visible To Position Radius and Color);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(브리기테), Team 1, 3, Vector(-16.833, 11.950, 20.982), Local Vector Of(Vector(-16.833, 11.950, 20.982),
					Players In Slot(3, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(애쉬), Team 2, 3, Vector(3.715, 7.450, 8.019), Local Vector Of(Vector(3.715, 7.450, 8.019), Players In Slot(3,
					Team 2), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(겐지), Team 1, 4, Vector(-20.794, 38.457, 105.694), Local Vector Of(Vector(-20.794, 38.457, 105.694),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(한조), Team 2, 4, Vector(-30.710, 8.002, -8.515), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("무대세팅 - 말레벤토")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(말레벤토);
	}

	action
	{
		Global.HiddenVector = Vector(46.023, -7.771, -37.010);
		Global.HostSpawnVector = Vector(-0.003, 5.352, 7.852);
		Global.DanceZoneVector = Vector(-29.252, -0.650, 8.108);
		Global.SpawnVector = Vector(-0.343, 10.355, 38.502);
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(-3.273, 32.855, -59.505), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-3.273, 32.855, -59.505), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-3.273, 32.855, -59.505), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Sky Blue), Vector(-3.273, 32.855, -59.505), 200,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.SpawnVector, 200, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.SpawnVector, 200, Visible To Position and Radius);
		Global.BeamVector = Vector(-0.214, 12.398, 0.272);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Green), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Orange), Vector(0.029, -0.055, -11.021), 9, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Rose), Vector(0.029, -0.055, -11.021), 6, Visible To Position and Radius);
		Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Sphere,
			Global.Tick % 2 == 0 ? Global.ThemeColor3 : Global.ThemeColor4, Global.BeamVector, 30, Visible To Position Radius and Color);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(젠야타), Team 1, 4, Vector(-0.065, 11.418, 26.126), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(젠야타), Team 2, 4, Vector(25.035, 10.178, 22.012), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

disabled rule("여름특집! : 무대세팅 - 부산스타디움+이스타지우")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Game Mode == Game Mode(루시우볼);
		(Current Map == Map(부산 스타디움) || Current Map == Map(부산 스타디움 클래식) || Current Map == Map(이스타지우 다스 하스)) == True;
	}

	action
	{
		Global.HiddenVector = Vector(-964.006, 11.222, -171.377);
		Create In-World Text(All Players(All Teams), Custom String("{0} 멀리 바다까지 텔레포트 하면 {1}수영하실 수 있습니다 {0}", Icon String(Arrow: Up),
			Icon String(Spiral)), Vector(-35.346, 10, -69.604), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue),
			Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(-237.454, -2.700, -428.305), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Vector(-237.454, -2.700, -428.305), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(-237.454, -2.700, -428.305), 1000,
			Visible To Position and Radius);
		Disable Built-In Game Mode Completion;
		Disable Game Mode HUD(All Players(All Teams));
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(0, 4, -40), 40, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(0, 4, -40), 50, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Vector(0, 4, -40), 60, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(0, 4, -40), 70, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.HostSpawnVector, 100, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("영웅 변경 : 좌클릭/우클릭"), Global.SpawnVector, 1, Clip Against Surfaces,
			Visible To Position and String, Color(Blue), Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Lime Green), Vector(0, 1, 0), 50, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Vector(0, 1, 0), 50, Visible To Position and Radius);
		Global.HostSpawnVector = Vector(0, 1.614, -23.244);
		Global.DanceZoneVector = Vector(0, 1, 0);
		Global.BeamVector = Vector(0, 7, 0);
		Global.SpawnVector = Vector(0, 1.100, 21);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(-14.729, 2.536, -34.289), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(14.689, 2.536, -34.261), Null);
			End;
			Wait(30, Ignore Condition);
			Heal(All Players(All Teams), Null, 10000);
		End;
	}
}

disabled rule("여름특집! : 무대세팅 - 시드니하버아레나")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Game Mode == Game Mode(루시우볼);
		Current Map == Map(시드니 하버 아레나 클래식);
	}

	action
	{
		Global.HiddenVector = Vector(-75.067, 2.536, -78.662);
		Create In-World Text(All Players(All Teams), Custom String("{0} 멀리 바다까지 텔레포트 하면 {1}수영하실 수 있습니다 {0}", Icon String(Arrow: Up),
			Icon String(Spiral)), Vector(-75.128, 7.358, -78.493), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue),
			Default Visibility);
		Create Effect(All Players(All Teams), Cloud, Color(White), Vector(141.106, -4.500, -325.694), 1500,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Blue), Vector(141.106, -4.500, -325.694), 1500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(White), Vector(141.106, -4.500, -325.694), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Vector(141.106, -4.500, -325.694), 1000,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Vector(141.106, -4.500, -325.694), 1000,
			Visible To Position and Radius);
		Disable Built-In Game Mode Completion;
		Disable Game Mode HUD(All Players(All Teams));
		Create Effect(All Players(All Teams), Good Aura, Color(Green), Vector(15.900, 11.040, -95.860), 40,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Yellow), Vector(15.900, 11.040, -95.860), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Lime Green), Vector(15.900, 11.040, -95.860), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(15.900, 11.040, -95.860), 70, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.HostSpawnVector, 100, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("영웅 변경 : 좌클릭/우클릭"), Global.SpawnVector, 1, Clip Against Surfaces,
			Visible To Position and String, Color(Blue), Default Visibility);
		Create Effect(All Players(All Teams), Sparkles, Color(Aqua), Global.DanceZoneVector, 50, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 50, Visible To Position and Radius);
		Global.HostSpawnVector = Vector(-19.271, 1.614, -89.144);
		Global.DanceZoneVector = Vector(-42.043, 1.192, -84.810);
		Global.BeamVector = Vector(-42.226, 24, -84.632);
		Global.SpawnVector = Vector(-63.025, 1.178, -80.997);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Aqua), Global.BeamVector, 1.500, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(루시우), Team 1, 4, Vector(-11.213, 2.536, -105.545), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(루시우), Team 2, 4, Vector(-5.727, 2.536, -76.727), Null);
			End;
			Wait(30, Ignore Condition);
			Heal(All Players(All Teams), Null, 10000);
		End;
	}
}

disabled rule("여름특집! : 루시우볼 영웅선택")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Distance Between(Global.SpawnVector, Event Player) <= 3;
		Current Game Mode == Game Mode(루시우볼);
	}

	action
	{
		Wait(0.100, Ignore Condition);
		Disallow Button(Event Player, Button(Jump));
		Disallow Button(Event Player, Button(Primary Fire));
		Disallow Button(Event Player, Button(Secondary Fire));
		If(Is Button Held(Event Player, Button(Primary Fire)) == True);
			Event Player.lucioballHeroIndex -= 1;
			If(Event Player.lucioballHeroIndex < 0);
				Event Player.lucioballHeroIndex = 31;
			End;
			Start Forcing Player To Be Hero(Event Player, All Heroes[Event Player.lucioballHeroIndex]);
		Else If(Is Button Held(Event Player, Button(Secondary Fire)));
			Event Player.lucioballHeroIndex += 1;
			If(Event Player.lucioballHeroIndex > 31);
				Event Player.lucioballHeroIndex = 0;
			End;
			Start Forcing Player To Be Hero(Event Player, All Heroes[Event Player.lucioballHeroIndex]);
		End;
		Loop If Condition Is True;
		Allow Button(Event Player, Button(Jump));
		Allow Button(Event Player, Button(Primary Fire));
		Allow Button(Event Player, Button(Secondary Fire));
	}
}

disabled rule("여름특집! : 부산+이스타지우 수영")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -2.880;
		(Current Map == Map(부산 스타디움) || Current Map == Map(부산 스타디움 클래식) || Current Map == Map(이스타지우 다스 하스)) == True;
	}

	action
	{
		If(Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -5);
			Start Accelerating(Event Player, Vector(0, 1, 0), 30, 30, To World, Direction Rate and Max Speed);
			Teleport(Event Player, Event Player + Vector(0, 1, 0));
		End;
		Set Gravity(Event Player, 10);
		Start Accelerating(Event Player, Vector(0, 1, 0), 5, 3, To World, Direction Rate and Max Speed);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Event Player, 1);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Accelerating(Event Player);
	}
}

disabled rule("여름특집! : 시드니하버아레나 수영")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -4.500;
		Current Map == Map(시드니 하버 아레나 클래식);
	}

	action
	{
		If(Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -7);
			Start Accelerating(Event Player, Vector(0, 1, 0), 30, 30, To World, Direction Rate and Max Speed);
			Teleport(Event Player, Event Player + Vector(0, 1, 0));
		End;
		Set Gravity(Event Player, 10);
		Start Accelerating(Event Player, Vector(0, 1, 0), 5, 3, To World, Direction Rate and Max Speed);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Event Player, 1);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Accelerating(Event Player);
	}
}

rule("할로윈특집! : 무대세팅 - 아이헨발데 할로윈")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(아이헨발데 할로윈);
		Global.Map < 9;
	}

	action
	{
		Global.HiddenVector = Vector(15.186, 7.493, -95.832);
		Global.HostSpawnVector = Vector(125.635, 15.905, -18.651);
		Global.DanceZoneVector = Vector(123.298, 9.895, -27.396);
		Global.SpawnVector = Vector(122.857, 11.897, -63.352);
		Global.BeamVector = Vector(123.517, 18.172, -26.526);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Vector(128.011, 19.147, -28.793), 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(White), Vector(128.011, 19.147, -28.793), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Vector(118.586, 19.100, -26.078), 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(White), Vector(118.586, 19.100, -26.078), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Vector(120.489, 18.414, -20.632), 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(White), Vector(120.489, 18.414, -20.632), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Vector(129.136, 18.294, -22.689), 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(White), Vector(129.136, 18.294, -22.689), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Yellow), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(라인하르트), Team 1, 4, Vector(130.869, 11.676, -21.702), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(라인하르트), Team 2, 4, Vector(119.456, 11.676, -18.738), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 1)));
				Create Dummy Bot(Hero(브리기테), Team 1, 3, Vector(129.740, 15.910, -36.164), Null);
			End;
			If(!Entity Exists(Players In Slot(3, Team 2)));
				Create Dummy Bot(Hero(브리기테), Team 2, 3, Vector(114.081, 15.897, -31.792), Null);
			End;
			If(!Entity Exists(Players In Slot(2, Team 2)));
				Create Dummy Bot(Hero(바스티온), Team 2, 2, Vector(118.826, 20.031, -44.716), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 아이헨발데 할로윈 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(아이헨발데 할로윈);
		Global.Map == 9;
	}

	action
	{
		Global.HiddenVector = Vector(45.826, -4.075, -149.285);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(130.237, 11.898, -3.057);
		Global.DanceZoneVector = Vector(138.363, 11.898, 1.759);
		Global.SpawnVector = Vector(133.591, 11.898, 9.159);
		Global.BeamVector = Vector(133.713, 13.219, -4.983);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Yellow), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(라인하르트), Team 1, 4, Vector(125.985, 11.919, -1.079), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(라인하르트), Team 2, 4, Vector(136.943, 11.898, -4.510), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 아이헨발데 할로윈 3")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(아이헨발데 할로윈);
		Global.Map == 10;
	}

	action
	{
		Global.HiddenVector = Vector(31.987, 97.946, -200.879);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(50.860, -4.250, -145.595);
		Global.DanceZoneVector = Vector(55.081, -4.250, -118.972);
		Global.SpawnVector = Vector(53.174, -4.250, -129.180);
		Global.BeamVector = Vector(50.158, 38.662, -150.202);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.BeamVector, 60, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Global.BeamVector, 63, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Global.BeamVector, 66, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Global.BeamVector, 69, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Global.BeamVector, 72, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Turquoise), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Global.BeamVector, 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Yellow), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(라인하르트), Team 1, 4, Vector(41.068, -4.250, -132.183), Null);
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(라인하르트), Team 2, 4, Vector(61.617, -4.250, -137.318), Null);
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 할리우드 할로윈")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(할리우드 할로윈);
		Global.Map < 8;
	}

	action
	{
		Global.HiddenVector = Vector(20.377, 32.952, 43.563);
		Global.HostSpawnVector = Vector(-12.069, 2.500, 72.277);
		Global.DanceZoneVector = Vector(-12.265, 1.145, 56.534);
		Global.SpawnVector = Vector(-12.496, 6.303, 45.175);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.DanceZoneVector, 20, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-12.392, 39.016, 79.675), 40, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-12.392, 39.016, 79.675), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-12.392, 39.016, 79.675), 60, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-12.392, 39.016, 79.675), 70,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Vector(-12.392, 39.016, 79.675), 100,
			Visible To Position and Radius);
		Global.BeamVector = Vector(-12.069, 15.194, 72.277);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(리퍼), Team 1, 4, Vector(20.614, 1.175, 46.046), Local Vector Of(Vector(-39.149, 4.927, -155.505),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(위도우메이커), Team 2, 4, Vector(-12.570, 1.187, 41.300), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 할리우드 할로윈 2")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(할리우드 할로윈);
		Global.Map == 8;
	}

	action
	{
		Global.HiddenVector = Vector(67.751, 18.044, -18.060);
		Global.HostSpawnVector = Vector(-32.269, 34.661, -120.761);
		Global.DanceZoneVector = Vector(-35.113, 2.923, -134.716);
		Global.SpawnVector = Vector(-1.140, 34.654, -82.915);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-71.329, 148.272, -351.004), 40,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-71.329, 148.267, -351.004), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-71.329, 148.272, -351.004), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-71.329, 148.272, -351.004), 70,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.HostSpawnVector, 100, Visible To Position and Radius);
		Global.BeamVector = Vector(-15.517, 47.194, -103.117);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(솔저: 76), Team 1, 4, Vector(15.137, 35.043, -110.348), Local Vector Of(Vector(-39.149, 4.927, -155.505),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(리퍼), Team 2, 4, Vector(-49.454, 35.030, -94.335), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 할리우드 할로윈 3")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(할리우드 할로윈);
		Global.Map == 9;
	}

	action
	{
		Global.HiddenVector = Vector(-120.031, 64.939, 100.315);
		Global.HiddenMap = True;
		Global.HostSpawnVector = Vector(-27.131, 9.151, -156.348);
		Global.DanceZoneVector = Vector(-29.317, 7.126, -165.249);
		Global.SpawnVector = Vector(-31.880, 7.130, -175.804);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-21.659, 5.089, -158.228), 4, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Purple), Vector(-32.197, 5.089, -155.257), 4, Visible To Position and Radius);
		Global.BeamVector = Vector(-32.509, 10.495, -178.148);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(Red), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(리퍼), Team 1, 4, Vector(-17.393, 4.927, -160.935), Local Vector Of(Vector(-39.149, 4.927, -155.505),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(리퍼), Team 2, 4, Vector(-37.470, 4.923, -156.031), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("할로윈특집! : 무대세팅 - 할리우드 할로윈 4")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Current Map == Map(할리우드 할로윈);
		Global.Map == 10;
	}

	action
	{
		Global.HiddenVector = Vector(-48.732, 21.179, -50.122);
		Global.HiddenMap = True;
		Create Effect(All Players(All Teams), Sphere, Color(White), Vector(7.912, -188.500, -49.318), 200, Visible To Position and Radius);
		Global.HostSpawnVector = Vector(29.656, 17.267, -54.069);
		Global.DanceZoneVector = Vector(7.921, 14.353, -48.814);
		Global.SpawnVector = Vector(4.554, 12.200, -31.481);
		Create Effect(All Players(All Teams), Good Aura, Color(Red), Vector(-71.329, 148.272, -351.004), 40,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Purple), Vector(-71.329, 148.267, -351.004), 50,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Blue), Vector(-71.329, 148.272, -351.004), 60,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Orange), Vector(-71.329, 148.272, -351.004), 70,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(White), Global.HostSpawnVector, 100, Visible To Position and Radius);
		Global.BeamVector = Vector(7.921, 24.353, -48.814);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BeamVector, 18, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Cloud, Color(White), Global.BeamVector, 1, Visible To Position and Radius);
		While(True);
			If(!Entity Exists(Players In Slot(4, Team 1)));
				Create Dummy Bot(Hero(리퍼), Team 1, 4, Vector(1.872, 14.250, -66.695), Local Vector Of(Vector(-39.149, 4.927, -155.505),
					Players In Slot(4, Team 1), Rotation));
			End;
			If(!Entity Exists(Players In Slot(4, Team 2)));
				Create Dummy Bot(Hero(토르비욘), Team 2, 4, Vector(-0.870, 28.501, -82.428), Local Vector Of(Vector(-17.393, 4.927, -160.935),
					Players In Slot(4, Team 2), Rotation));
			End;
			Wait(30, Ignore Condition);
		End;
	}
}

rule("시네마틱 카메라")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.CinematicEnabled == True;
	}

	action
	{
		Skip If(Global.LevelOfClimax == 2, 2);
		Wait Until(Global.Tick == 1, 99999);
		Wait(0.100, Ignore Condition);
		Wait Until(Event Player.cameraZ == 1, 99999);
		Event Player.cameraX = Random Integer(-10, 0);
		Event Player.CinematicY = Random Real(0, 2) + Global.CinematicFocusPlayer.PlayerSize * 2;
		Event Player.CinematicZ = Random Real(1, 6) * Global.CinematicFocusPlayer.PlayerSize;
		If(Global.LevelOfClimax == 3);
			Event Player.CinematicRate = Random Real(2, 6);
		Else;
			Event Player.CinematicRate = Random Real(-0.500, 2.500);
		End;
		"벽 안뚫기"
		Start Camera(Event Player, Ray Cast Hit Position(Global.CinematicFocusPlayer, Global.CinematicFocusPlayer + Vector(
			Event Player.cameraX, Event Player.CinematicY, Event Player.CinematicZ), Null, All Players(All Teams), True),
			Global.CinematicFocusPlayer, Is Button Held(Global.LightManager, Button(Ability 1)) ? 0 : 20);
		Chase Player Variable At Rate(Event Player, cameraX, Event Player.cameraX + 8, Event Player.CinematicRate, Destination and Rate);
		If(Global.LevelOfClimax == 1);
			Wait(Global.BPMCalibrate_DefaultIs60 * 7.800 / Global.BPM, Ignore Condition);
		Else If(Global.LevelOfClimax == 2);
			If(Global.LightManager.DJMenuHUDOpened == True && Is Button Held(Global.LightManager, Button(Ability 1)) == True);
				Global.CinematicFocusPlayer = Random Value In Array(Filtered Array(All Players(All Teams), Has Spawned(Current Array Element)));
				Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
			Else;
				Wait(Global.BPMCalibrate_DefaultIs60 * 2 / Global.BPM, Ignore Condition);
			End;
		Else If(Global.LevelOfClimax == 3);
			Wait(Global.BPMCalibrate_DefaultIs60 * 3 / Global.BPM, Ignore Condition);
		End;
		Loop If Condition Is True;
		Stop Camera(Event Player);
	}
}

rule("춤추고있니")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == True;
	}

	action
	{
		Wait(5, Ignore Condition);
		Abort If Condition Is False;
		Small Message(Event Player, Custom String("{0} 시네마틱 모드에 들어가려면 상호작용({1})키를 길게 누르세요!", Icon String(Eye), Input Binding String(Button(
			Interact))));
	}
}

rule("시네마틱 접속!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Event Player.CinematicEnabled == False;
	}

	action
	{
		If(!Is Communicating Any Emote(Event Player));
			Event Player.CinematicEnabled = False;
			Stop Camera(Event Player);
			Event Player.Camera = False;
			Small Message(All Players(All Teams), Custom String("{0}{1} 님이 춤추러 시네마틱에서 나감!", Hero Icon String(Hero Of(Event Player)),
				Event Player));
			Destroy HUD Text(Event Player.CInematicHUD);
			Enable Hero HUD(Event Player);
			Destroy Effect(Event Player.CinematicDrone);
			Destroy In-World Text(Event Player.CinematicDroneText);
			Abort;
		Else If(Event Player.CinematicEnabled == False);
			Wait(1.500, Abort When False);
			Abort If Condition Is False;
			Event Player.CinematicEnabled = True;
			Disable Hero HUD(Event Player);
			Stop Camera(Event Player);
			Small Message(All Players(All Teams), Custom String("{0}{1} 님이 시네마틱에 참여!", Hero Icon String(Hero Of(Event Player)), Event Player));
			Event Player.cameraZ = 1;
			Event Player.CInematicHUD = Last Text ID;
			Create Effect(Filtered Array(All Players(All Teams), Event Player != Current Array Element), Sphere, Color(Red),
				Global.CinematicFocusPlayer + Vector(Event Player.cameraX, Event Player.CinematicY, Event Player.CinematicZ), 0.100,
				Visible To Position and Radius);
			Event Player.CinematicDrone = Last Created Entity;
			Wait(0.100, Ignore Condition);
			Create In-World Text(Filtered Array(All Players(All Teams), Event Player != Current Array Element), Custom String(
				"{0}{1} 의\r\n시네마틱카메라 드론", Hero Icon String(Hero Of(Event Player)), Event Player), Global.CinematicFocusPlayer + Vector(
				Event Player.cameraX, Event Player.CinematicY, Event Player.CinematicZ), 0.800, Clip Against Surfaces,
				Visible To Position and String, Color(Yellow), Default Visibility);
			Event Player.CinematicDroneText = Last Text ID;
		End;
		Wait(1, Ignore Condition);
		Loop;
	}
}

rule("당신의 몸놀림에 건배")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.CinematicEnabled == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Global.CinematicFocusPlayer != Event Player;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Event Player.MAXLightEffect == True), Good Explosion, Color(Purple),
			Global.CinematicFocusPlayer, 1);
		Play Effect(Filtered Array(All Players(All Teams), Event Player.MAXLightEffect == True), Good Explosion, Color(Turquoise),
			Global.CinematicFocusPlayer, 1);
		Small Message(Event Player, Custom String("{1} {2} 님에게 하트표시!{0}", Icon String(Heart), Hero Icon String(Hero Of(
			Global.CinematicFocusPlayer)), Global.CinematicFocusPlayer));
		Small Message(Global.CinematicFocusPlayer, Custom String("{1} {2} 님이 하트표시!{0}", Icon String(Heart), Hero Icon String(Hero Of(
			Event Player)), Event Player));
		Global.CinematicFocusPlayer.Love += 1;
		If(Global.CinematicFocusPlayer == Global.DJPlayer);
			Event Player.Love += 1;
			Small Message(Event Player, Custom String("{1} DJ 도 당신에게 하트표시!{0}", Icon String(Heart), Hero Icon String(Hero Of(
				Global.DJPlayer))));
			Wait Until(Global.Tick == 4, 4);
			Wait Until(Global.Tick == 1, 4);
		End;
		Wait Until(Global.Tick == 4, 4);
		Wait Until(Global.Tick == 1, 4);
	}
}

rule("시네마틱 카메라 대상 결정")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Wait Until(Global.DJPlayer.cameraZ == 1, 10);
		Wait Until(Global.Tick == 1, 10);
		Global.CinematicFocusPlayer = Random Value In Array(Filtered Array(All Players(All Teams), Has Spawned(Current Array Element)
			&& !Is Dummy Bot(Current Array Element)));
		Wait(Global.BPMCalibrate_DefaultIs60 * 7.500 / Global.BPM, Ignore Condition);
		Loop;
	}
}

rule("시네마틱 궁")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.CinematicEnabled == True;
		Global.LevelOfClimax == 3;
	}

	action
	{
		Global.CinematicFocusPlayer = Global.DJPlayer;
		Event Player.cameraZ = 1;
		Start Camera(Event Player, Ray Cast Hit Position(Global.DJPlayer + Vector(0, Global.DJPlayer.PlayerSize * 2 + 0.100, 0),
			Global.DJPlayer + Vector(0, Global.DJPlayer.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Global.DJPlayer) * (
			Event Player.cameraZ + Global.DJPlayer.PlayerSize * 3), Null, All Players(All Teams), False), Global.DJPlayer + (Eye Position(
			Global.DJPlayer) - Global.DJPlayer) + Facing Direction Of(Global.DJPlayer) * -20, 100);
		Chase Player Variable At Rate(Event Player, cameraZ, 40, 160, Destination and Rate);
		Wait(0.250, Ignore Condition);
		Chase Player Variable At Rate(Event Player, cameraZ, 1, Event Player.cameraZ * 1.100, Destination and Rate);
	}
}

rule("댄스존")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Distance Between(Global.DanceZoneVector, Event Player) <= 4;
		Is Communicating(Event Player, Countdown) == True;
		Global.DanceZoneLock == False;
	}

	action
	{
		Global.DanceZoneLock = True;
		Small Message(All Players(All Teams), Custom String("{0}{1} : {2}들 춤 맞춰요!(댄스존에 있음)", Hero Icon String(Hero Of(Event Player)),
			Event Player, Hero Of(Event Player)));
		Set Status(Event Player, Null, Rooted, 4);
		Global.DanceZoneTimer = 3;
		Destroy In-World Text(Global.DanceZoneText);
		Create Progress Bar In-World Text(All Players(All Teams), Global.DanceZoneTimer * 33, Custom String("{0}{1}들 춤 발동 {2}초전..",
			Hero Icon String(Hero Of(Event Player)), Hero Of(Event Player), Global.DanceZoneTimer), Vector(X Component Of(
			Global.DanceZoneVector), Y Component Of(Global.DanceZoneVector) + 2, Z Component Of(Global.DanceZoneVector)), 1, Do Not Clip,
			Color(Turquoise), Color(Turquoise), Visible To Position Values and Color, Default Visibility);
		Global.DanceZoneText = Last Text ID;
		While(Global.DanceZoneTimer > 0);
			Global.DanceZoneTimer = Global.DanceZoneTimer - 0.100;
			Wait(0.100, Ignore Condition);
		End;
		Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Event Player, 10);
		Communicate(Filtered Array(All Players(All Teams), Distance Between(Global.DanceZoneVector, Current Array Element) < 4 && Hero Of(
			Event Player) == Hero Of(Current Array Element) && !Is Dummy Bot(Current Array Element)), Emote Up);
		Destroy All Progress Bar In-World Text;
		Destroy In-World Text(Global.DanceZoneText);
		Create In-World Text(All Players(All Teams), Custom String("{0} 댄스존 > 카운트다운 키 {0}", Icon String(Halo)), Vector(X Component Of(
			Global.DanceZoneVector), Y Component Of(Global.DanceZoneVector) + 2, Z Component Of(Global.DanceZoneVector)), 1, Do Not Clip,
			Visible To Position and String, Color(Turquoise), Default Visibility);
		Global.DanceZoneText = Last Text ID;
		Global.DanceZoneLock = False;
	}
}

rule("댄스존 설명")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Distance Between(Global.DanceZoneVector, Event Player) <= 4;
	}

	action
	{
		Small Message(Event Player, Custom String("여기서 카운트다운(3,2,1) 키를 누르면 원 안에 모든 {0}{2} 들과 춤을 춥니다", Hero Icon String(Hero Of(
			Event Player)), Event Player, Hero Of(Event Player)));
		Wait(1, Ignore Condition);
		Small Message(Event Player, Custom String("카운트다운 키는 설정-조작법 에서 설정하셔야 합니다.", Hero Icon String(Hero Of(Event Player)), Event Player,
			Hero Of(Event Player)));
		Wait(1, Ignore Condition);
		Small Message(Event Player, Custom String("춤 감정표현을 위쪽에 장착하고 와주세요!", Hero Icon String(Hero Of(Event Player)), Event Player, Hero Of(
			Event Player)));
		Wait(60, Ignore Condition);
	}
}

rule("그냥 카운트다운")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Distance Between(Global.DanceZoneVector, Event Player) > 4;
		Is Communicating(Event Player, Countdown) == True;
	}

	action
	{
		Small Message(All Players(All Teams), Custom String("{0}{1} : 3...", Hero Icon String(Hero Of(Event Player)), Event Player));
		Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Event Player, 1);
		Wait(1, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("{0}{1} : 2...", Hero Icon String(Hero Of(Event Player)), Event Player));
		Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Event Player, 1);
		Wait(1, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("{0}{1} : 1...", Hero Icon String(Hero Of(Event Player)), Event Player));
		Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Event Player, 2);
		Wait(1, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("{0}{1} : 땡!", Hero Icon String(Hero Of(Event Player)), Event Player));
		Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Event Player, 10);
	}
}

rule("에코 복제 허용")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Hero Of(Event Player) == Hero(에코);
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Ultimate Charge Percent(Event Player) == 100;
		Is Duplicating(Event Player) != True;
	}

	action
	{
		Clear Status(Players Within Radius(Event Player, 10, Opposite Team Of(Team Of(Event Player)), Surfaces And All Barriers),
			Phased Out);
		Wait(0.100, Ignore Condition);
		Press Button(Event Player, Button(Ultimate));
		Wait(0.100, Ignore Condition);
		Set Status(All Players(All Teams), Null, Phased Out, 9999);
	}
}

rule("추가시간!")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Is Communicating(Host Player, Thanks) == True;
		Is Button Held(Host Player, Button(Jump)) == True;
	}

	action
	{
		Set Match Time(Match Time + 60);
		Global.CTFTimer = Global.CTFTimer + 60;
		Small Message(Host Player, Custom String("공연시간 +1분"));
	}
}

rule("조명감독 주기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Host Player;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Has Spawned(Host Player.SelectPlayer) == True;
		Host Player == Global.LightManager;
		Event Player.DJMenuHUDOpened == False;
		Global.DJmode == True;
		Event Player.DrawingMode == False;
		Event Player.SelectPlayerCache == Null;
	}

	action
	{
		Event Player.SelectPlayerCache = Event Player.SelectPlayer;
		Create In-World Text(Host Player, Custom String("{0} 조명감독을 시킬까요?\r\n{1}:예 / {2}:아니오", Icon String(Dizzy), Input Binding String(
			Button(Primary Fire)), Input Binding String(Button(Secondary Fire))), Event Player.SelectPlayerCache, 2, Do Not Clip,
			Visible To Position and String, Color(Turquoise), Visible Never);
		While(True);
			If(Is Button Held(Event Player, Button(Primary Fire)));
				Host Player.DJMenuHUDOpened = False;
				Global.LightManager = Host Player.SelectPlayerCache;
				Wait(0.100, Ignore Condition);
				Global.LightManager.DJMenuHUDOpened = False;
				Big Message(Host Player, Custom String("조명감독 권한을 {0}{1} 님에게 주었습니다.", Hero Icon String(Hero Of(Global.LightManager)),
					Global.LightManager));
				Play Effect(All Players(All Teams), Good Explosion, Color(Yellow), Global.LightManager, 1);
				Big Message(Global.LightManager, Custom String("조명감독 권한을 받았습니다! 왼쪽위 설명을 읽어주세요."));
				Break;
			Else If(Is Button Held(Event Player, Button(Secondary Fire)));
				Break;
			End;
			Wait(0.100, Ignore Condition);
		End;
		Event Player.SelectPlayerCache = Null;
		Destroy In-World Text(Last Text ID);
	}
}

rule("조명감독 뺏기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Host Player;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Reload)) == True;
		Host Player != Global.LightManager;
		Event Player.DJMenuHUDOpened == False;
		Global.DJmode == True;
		Event Player.DrawingMode == False;
	}

	action
	{
		Small Message(Host Player, Custom String("3초 후 {2}조명감독 을 뺏어옵니다!", Null, Null, Icon String(Dizzy)));
		Wait(1, Abort When False);
		Small Message(Host Player, Custom String("2초 후 {2}조명감독 을 뺏어옵니다!", Null, Null, Icon String(Dizzy)));
		Wait(1, Abort When False);
		Small Message(Host Player, Custom String("1초 후 {2}조명감독 을 뺏어옵니다!", Null, Null, Icon String(Dizzy)));
		Wait(1, Abort When False);
		Communicate(Global.LightManager, Need Healing);
		Big Message(Host Player, Custom String("조명 감독 권한을 뺏어왔습니다."));
		Big Message(Global.LightManager, Custom String("조명 감독 권한을 뺏겼습니다..."));
		Global.LightManager.DJMenuHUDOpened = False;
		Wait(0.200, Ignore Condition);
		Global.LightManager = Host Player;
		Host Player.DJMenuHUDOpened = False;
		Wait(1, Ignore Condition);
	}
}

rule("조명 모드!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Global.LightManager;
		Is Communicating Any Emote(Event Player) == True;
		Event Player.DJMenuHUDOpened == False;
		Event Player.DrawingMode == False;
	}

	action
	{
		Set Status(Event Player, Null, Rooted, 9999);
		Disallow Button(Event Player, Button(Primary Fire));
		Disallow Button(Event Player, Button(Secondary Fire));
		Disallow Button(Event Player, Button(Jump));
		Disallow Button(Event Player, Button(Crouch));
		Disallow Button(Event Player, Button(Ultimate));
		Disallow Button(Event Player, Button(Melee));
		Disallow Button(Event Player, Button(Reload));
		Disallow Button(Event Player, Button(Ability 1));
		Disallow Button(Event Player, Button(Ability 2));
		Wait(0.250, Ignore Condition);
		Global.DJPlayer.DJMenuHUDOpened = True;
		Global.LightManager.DJMenuHUDOpened = True;
		Communicate(Global.DJPlayer, Emote Up);
		Small Message(Event Player, Custom String("조명모드 시작"));
	}
}

rule("조명 모드 닫기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.DJMenuHUDOpened == True;
		Is Communicating(Event Player, Need Healing) == True;
		Event Player == Global.LightManager;
		Event Player.DrawingMode == False;
	}

	action
	{
		Clear Status(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Rooted);
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Primary Fire));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Secondary Fire));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Ability 1));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Ability 2));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Ultimate));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Jump));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Crouch));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Melee));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Reload));
		Wait(0.250, Ignore Condition);
		Event Player.DJMenuHUDOpened = False;
		Global.DJPlayer.DJMenuHUDOpened = False;
		Wait(0.100, Ignore Condition);
		Press Button(Event Player, Button(Jump));
		Press Button(Global.DJPlayer, Button(Jump));
		Small Message(Event Player, Custom String("조명모드 종료"));
		If(Event Player.Camera);
			Call Subroutine(SetTP);
		End;
	}
}

rule("조명모드 BPM DOWN")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.DJMenuHUDOpened == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
	}

	action
	{
		Global.BPM = Global.BPM + -1;
		If(Global.BPM < 50);
			Global.BPM = 50;
		End;
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("조명모드 BPM UP")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player.DJMenuHUDOpened == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
	}

	action
	{
		Global.BPM = Global.BPM + 1;
		If(Global.BPM > 220);
			Global.BPM = 220;
		End;
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("일리오스 수영")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -63;
		(Current Map == Map(일리오스 등대) || Current Map == Map(일리오스)) == True;
	}

	action
	{
		If(Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -66);
			Start Accelerating(Event Player, Vector(0, 1, 0), 30, 30, To World, Direction Rate and Max Speed);
			Teleport(Event Player, Event Player + Vector(0, 3.100, 0));
		End;
		Set Gravity(Event Player, 10);
		Start Accelerating(Event Player, Vector(0, 1, 0), 5, 3, To World, Direction Rate and Max Speed);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Event Player, 1);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Accelerating(Event Player);
	}
}

rule("리알토 수영")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -2.700;
		Current Map == Map(리알토);
	}

	action
	{
		If(Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -4);
			Start Accelerating(Event Player, Vector(0, 1, 0), 30, 30, To World, Direction Rate and Max Speed);
			Teleport(Event Player, Event Player + Vector(0, 1, 0));
		End;
		Set Gravity(Event Player, 10);
		Start Accelerating(Event Player, Vector(0, 1, 0), 5, 3, To World, Direction Rate and Max Speed);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Event Player, 1);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Accelerating(Event Player);
	}
}

rule("오아시스 수영")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < 0;
		Current Map == Map(오아시스 대학);
	}

	action
	{
		If(Y Component Of(Local Vector Of(Event Player, Event Player, Rotation)) < -1.500);
			Start Accelerating(Event Player, Vector(0, 1, 0), 30, 30, To World, Direction Rate and Max Speed);
			Teleport(Event Player, Event Player + Vector(0, 1, 0));
		End;
		Set Gravity(Event Player, 10);
		Start Accelerating(Event Player, Vector(0, 1, 0), 5, 3, To World, Direction Rate and Max Speed);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Event Player, 1);
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
		Stop Accelerating(Event Player);
	}
}

rule("개활지 부스터")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Current Map == Map(워크샵 개활지 밤);
		Is Button Held(Event Player, Button(Ability 1)) == True;
	}

	action
	{
		Abort If(Event Player == Global.LightManager && Event Player.DJMenuHUDOpened);
		Wait(0.500, Abort When False);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Red), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Blue), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Red), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.200);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.300);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 0.500);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 3);
		If(Event Player.Camera);
			Start Camera(Event Player, Ray Cast Hit Position(Event Player + Vector(0, 2, 0), Event Player + Vector(0, 2, 0)
				+ Facing Direction Of(Event Player) * -12, Null, All Players(All Teams), False), Event Player + (Eye Position(Event Player)
				- Event Player) + Facing Direction Of(Event Player) * 20, 20);
		End;
		While(Is Button Held(Event Player, Button(Ability 1)));
			Start Accelerating(Event Player, Facing Direction Of(Event Player), 100, 100, To World, Direction Rate and Max Speed);
			Disallow Button(Event Player, Button(Ability 1));
			Start Throttle In Direction(Event Player, Facing Direction Of(Event Player), 1, To World, Replace existing throttle,
				Direction and Magnitude);
			Set Move Speed(Event Player, 1000);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Pickup Effect, Color(Red),
				Event Player, 0.500);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
				Event Player, 0.200);
			Wait(0.100, Ignore Condition);
		End;
		Allow Button(Event Player, Button(Ability 1));
		Set Move Speed(Event Player, 100);
		Stop Accelerating(Event Player);
		If(Event Player.Camera);
			Call Subroutine(SetTP);
		End;
		Stop Throttle In Direction(Event Player);
	}
}

rule("정원2 제트팩")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Current Map == Map(리장 정원 설날);
		Is Button Held(Event Player, Button(Jump)) == True;
		Global.Map >= 7;
	}

	action
	{
		Abort If(Event Player == Global.LightManager && Event Player.DJMenuHUDOpened);
		Wait(0.200, Abort When False);
		Wait(0.050, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Sky Blue),
			Event Player, 0.100);
		Wait(0.050, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Blue), Event Player,
			0.100);
		Wait(0.050, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.050, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 0.500);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 3);
		If(Event Player.Camera);
			Start Camera(Event Player, Ray Cast Hit Position(Event Player + Vector(0, 2, 0), Event Player + Vector(0, 2, 0)
				+ Facing Direction Of(Event Player) * -12, Null, All Players(All Teams), False), Event Player + (Eye Position(Event Player)
				- Event Player) + Facing Direction Of(Event Player) * 20, 20);
		End;
		While(Is Button Held(Event Player, Button(Jump)));
			Start Accelerating(Event Player, Vector(0, 1, 0), 100, 5, To World, Direction Rate and Max Speed);
			Set Gravity(Event Player, 25);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Pickup Effect, Color(Sky Blue),
				Event Player, 0.500);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
				Event Player, 0.200);
			Wait(0.100, Ignore Condition);
		End;
		Set Gravity(Event Player, 100);
		Stop Accelerating(Event Player);
		If(Event Player.Camera);
			Call Subroutine(SetTP);
		End;
		Stop Throttle In Direction(Event Player);
	}
}

rule("부산 메카 제트엔진")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		(Current Map == Map(부산) || Current Map == Map(부산 시내 설날)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
		Is In Alternate Form(Event Player) == False;
		Hero Of(Event Player) == Hero(D.Va);
		Is Alive(Event Player) == True;
	}

	action
	{
		Abort If(Event Player == Global.LightManager && Event Player.DJMenuHUDOpened);
		Event Player.DvaBoostSpeed = 100;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Red), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Blue), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Red), Event Player,
			0.100);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.200);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
			Event Player, 0.300);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 0.500);
		Wait(0.100, Abort When False);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Yellow),
			Event Player, 3);
		If(Event Player.Camera);
			Start Camera(Event Player, Ray Cast Hit Position(Event Player + Vector(0, 2, 0), Event Player + Vector(0, 2, 0)
				+ Facing Direction Of(Event Player) * -12, Null, All Players(All Teams), False), Event Player + (Eye Position(Event Player)
				- Event Player) + Facing Direction Of(Event Player) * 20, 20);
		End;
		While(Is Button Held(Event Player, Button(Ability 1)));
			Disable Movement Collision With Environment(Event Player, True);
			Set Move Speed(Event Player, Event Player.DvaBoostSpeed);
			Set Gravity(Event Player, 10);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(Rose), Event Player,
				0.300);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Explosion, Color(White),
				Event Player, 0.200);
			If(!Is Using Ability 1(Event Player));
				Stop Holding Button(Event Player, Button(Ability 1));
				Event Player.DvaBoostSpeed += 12.500;
				Start Holding Button(Event Player, Button(Ability 1));
			End;
			Wait(0.100, Ignore Condition);
		End;
		Set Move Speed(Event Player, 100);
		If(Event Player.Camera);
			Call Subroutine(SetTP);
		End;
		Enable Movement Collision With Environment(Event Player);
		Global.Map = 0;
		Event Player.DvaBoostSpeed = 100;
	}
}

rule("인사 받아주는 착한 더미")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating(Event Player, Hello) == True;
		disabled (Event Player == Global.DJPlayer || Event Player == Host Player || Event Player == Global.LightManager) == True;
	}

	action
	{
		Wait(1, Ignore Condition);
		Communicate(Filtered Array(All Players(All Teams), Distance Between(Event Player, Current Array Element) <= 10 && Is Dummy Bot(
			Current Array Element)), Hello);
		If(Count Of(Filtered Array(All Players(All Teams), Distance Between(Event Player, Current Array Element) < 10 && Is Dummy Bot(
			Current Array Element))) > 0);
			Event Player.Love += 1;
			Small Message(Event Player, Custom String("{0} 관중 봇에게 하트를 받았어요!", Icon String(Heart)));
			Play Effect(All Players(All Teams), Good Pickup Effect, Color(Rose), Event Player, 2);
			Wait(10, Ignore Condition);
		End;
	}
}

rule("그림그리기 모드 허용?")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player == Host Player;
		Host Player.DJMenuHUDOpened == False;
		Is Button Held(Event Player, Button(Crouch)) != True;
	}

	action
	{
		Wait(1, Abort When False);
		If(Global.AllowDrawingMode == False);
			Big Message(All Players(All Teams), Custom String("{0} 그림 그리기 활성화됨! 좌클릭+우클릭 길게 누르면 활성화 됩니다", Ability Icon String(Hero(메르시), Button(
				Ability 1))));
			Global.AllowDrawingMode = True;
		Else;
			Big Message(All Players(All Teams), Custom String("{0} 그림 그리기 모드 비활성화됨!", Ability Icon String(Hero(메르시), Button(Ability 1))));
			Small Message(Filtered Array(All Players(All Teams), Current Array Element.DrawingMode), Custom String("{0} 그림 그리기 모드 종료!",
				Ability Icon String(Hero(메르시), Button(Ability 1))));
			Allow Button(Filtered Array(All Players(All Teams), Current Array Element.DrawingMode), Button(Primary Fire));
			Allow Button(Filtered Array(All Players(All Teams), Current Array Element.DrawingMode), Button(Secondary Fire));
			All Players(All Teams).DrawingMode = False;
			Destroy Effect(All Players(All Teams).Art[1]);
			Global.AllowDrawingMode = False;
		End;
	}
}

rule("그림그리기 모드!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Wait(1, Abort When False);
		If(Event Player.DrawingMode == False);
			Call Subroutine(SetFP);
			Small Message(Event Player, Custom String("{0} 그림 그리기 모드 시작!", Ability Icon String(Hero(메르시), Button(Ability 1))));
			Disallow Button(Event Player, Button(Primary Fire));
			Disallow Button(Event Player, Button(Secondary Fire));
			Disallow Button(Event Player, Button(Ultimate));
			Disallow Button(Event Player, Button(Ability 2));
			Event Player.DrawingMode = True;
		Else;
			Destroy Effect(Event Player.Art[1]);
			Small Message(Event Player, Custom String("{0} 그림 그리기 모드 종료!", Ability Icon String(Hero(메르시), Button(Ability 1))));
			Allow Button(Event Player, Button(Primary Fire));
			Allow Button(Event Player, Button(Secondary Fire));
			Allow Button(Event Player, Button(Ultimate));
			Allow Button(Event Player, Button(Ability 2));
			Event Player.DrawingMode = False;
		End;
	}
}

rule("그림 그리기 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player.DrawingMode == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Event Player.Art[0] = Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player) + Facing Direction Of(
			Event Player) * 2, Empty Array, All Players(All Teams), False);
		Call Subroutine(ArtColor1);
		Event Player.Art[1] = Last Created Entity;
		Abort If(Entity Exists(Last Created Entity) == True);
		Destroy Effect(Last Created Entity);
		Call Subroutine(EntityCleaner);
		Destroy Effect(Last Created Entity);
	}
}

rule("그림 그리기 2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Primary Fire)) == False;
		Event Player.Art[0] != Null;
		Event Player.DrawingMode == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Call Subroutine(ArtColor2);
		Global.Art[Count Of(Global.Art)] = Append To Array(Append To Array(Empty Array, Last Created Entity), Event Player);
		If(Entity Exists(Last Created Entity) == False);
			Destroy Effect(Event Player.Art[1]);
			Destroy Effect(Last Created Entity);
			Call Subroutine(EntityCleaner);
			Abort;
		End;
		Destroy Effect(Event Player.Art[1]);
	}
}

rule("그림 지우기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Primary Fire)) == False;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Event Player.DrawingMode == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Event Player.Art[3] = Last Of(Filtered Array(Global.Art, Current Array Element[1] == Event Player));
		disabled Skip If(Event Player.Art[3] == Null, 2);
		If(Event Player.Art[3] != Null);
			Destroy Effect(Event Player.Art[3][0]);
			Global.Art = Remove From Array(Global.Art, Event Player.Art[3]);
		Else;
			Destroy Effect(Last Created Entity);
		End;
		Event Player.Art[3] = Null;
	}
}

rule("그림객체 및 색 미리보기")
{
	event
	{
		Subroutine;
		ArtColor1;
	}

	action
	{
		If(Event Player.ArtColor == 0);
			Create Beam Effect(All Players(All Teams), Grapple Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(White),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 1);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Red),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 2);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Orange),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 3);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Green),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 4);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Blue),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 5);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Purple),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 6);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(White),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 7);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Black),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 8);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Rose),
				Visible To Position and Radius);
		Else If(Event Player.ArtColor == 9);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(
				Turquoise), Visible To Position and Radius);
		End;
	}
}

rule("그림객체 및 색 그리기")
{
	event
	{
		Subroutine;
		ArtColor2;
	}

	action
	{
		If(Event Player.ArtColor == 0);
			Create Beam Effect(All Players(All Teams), Grapple Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(White),
				Visible To);
		Else If(Event Player.ArtColor == 1);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Red),
				Visible To);
		Else If(Event Player.ArtColor == 2);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Orange),
				Visible To);
		Else If(Event Player.ArtColor == 3);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Green),
				Visible To);
		Else If(Event Player.ArtColor == 4);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Blue),
				Visible To);
		Else If(Event Player.ArtColor == 5);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Purple),
				Visible To);
		Else If(Event Player.ArtColor == 6);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(White),
				Visible To);
		Else If(Event Player.ArtColor == 7);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Black),
				Visible To);
		Else If(Event Player.ArtColor == 8);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(Rose),
				Visible To);
		Else If(Event Player.ArtColor == 9);
			Create Beam Effect(All Players(All Teams), Good Beam, Event Player.Art[0], Ray Cast Hit Position(Eye Position(Event Player),
				Eye Position(Event Player) + Facing Direction Of(Event Player) * 2, Empty Array, All Players(All Teams), False), Color(
				Turquoise), Visible To);
		End;
	}
}

rule("그림 색 바꾸기 -")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Event Player.DrawingMode == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Event Player.ArtColor += -1;
		Small Message(Event Player, Global.ArtColorArray[Event Player.ArtColor]);
		Abort If(Event Player.ArtColor >= 0);
		Event Player.ArtColor = Count Of(Global.ArtColorArray) - 1;
	}
}

rule("그림 색 바꾸기 +")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		Event Player.DrawingMode == True;
		Global.AllowDrawingMode == True;
	}

	action
	{
		Event Player.ArtColor += 1;
		Small Message(Event Player, Global.ArtColorArray[Event Player.ArtColor]);
		Abort If(Event Player.ArtColor < Count Of(Global.ArtColorArray));
		Event Player.ArtColor = 0;
	}
}

rule("메모리 남발 금지!")
{
	event
	{
		Subroutine;
		EntityCleaner;
	}

	action
	{
		If(Global.AllowDrawingMode == True);
			Global.AllowDrawingMode = False;
			Global.isDrawingMode = True;
		End;
		Global.CleanerIndex = 0;
		Small Message(All Players(All Teams), Custom String("메모리 초기화 중.. 이펙트 너무 남발하지 마세요!"));
		Destroy Effect(Global.LightEntity);
		Destroy Effect(Global.stageEntity);
		While(Count Of(Global.Art) > 0);
			Destroy Effect(Global.Art[0][0]);
			Global.Art = Remove From Array(Global.Art, Global.Art[0]);
			Wait(0.001, Ignore Condition);
		End;
		While(Count Of(Global.GlobalBoostSparkleArray) > 0);
			Destroy Effect(Global.GlobalBoostSparkleArray[0][0]);
			Global.GlobalBoostSparkleArray = Remove From Array(Global.GlobalBoostSparkleArray, Global.GlobalBoostSparkleArray[0]);
			Wait(0.001, Ignore Condition);
		End;
		While(Count Of(Global.GlobalBoostSparkleArray) > 0);
			Destroy Effect(Global.GlobalBoostSparkleArray[0][0]);
			Wait(0.001, Ignore Condition);
		End;
		While(Global.CleanerIndex <= 5);
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 1).LightEntity);
			Players In Slot(Global.CleanerIndex, Team 1).Light = 0;
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 1).Art[0]);
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 1).Art[1]);
			Players In Slot(Global.CleanerIndex, Team 1).Art[0] = Null;
			Players In Slot(Global.CleanerIndex, Team 1).Art[1] = Null;
			Wait(0.001, Ignore Condition);
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 2).LightEntity);
			Players In Slot(Global.CleanerIndex, Team 2).Light = 0;
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 2).Art[0]);
			Destroy Effect(Players In Slot(Global.CleanerIndex, Team 2).Art[1]);
			Players In Slot(Global.CleanerIndex, Team 2).Art[0] = Null;
			Players In Slot(Global.CleanerIndex, Team 2).Art[1] = Null;
			Wait(0.001, Ignore Condition);
			Global.CleanerIndex += 1;
		End;
		Destroy Effect(Last Created Entity);
		If(Global.isDrawingMode == True);
			Global.AllowDrawingMode = True;
			Global.isDrawingMode = False;
		End;
	}
}

rule("SetTP")
{
	event
	{
		Subroutine;
		SetTP;
	}

	action
	{
		Start Camera(Event Player, Ray Cast Hit Position(Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0),
			Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Local Player) * (
			-0.500 + Local Player.PlayerSize * -3), Null, All Players(All Teams), False), Local Player + (Eye Position(Local Player)
			- Local Player) + Facing Direction Of(Local Player) * 20, 100);
		Wait(0.100, Ignore Condition);
		Event Player.Camera = True;
	}
}

rule("SetFP")
{
	event
	{
		Subroutine;
		SetFP;
	}

	action
	{
		Stop Camera(Event Player);
		Wait(0.100, Ignore Condition);
		Event Player.Camera = False;
	}
}

rule("크기변경 모드 허용?")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player == Host Player;
		Host Player.DJMenuHUDOpened == False;
		Is Button Held(Event Player, Button(Crouch)) != True;
	}

	action
	{
		Wait(1, Abort When False);
		If(Global.AllowScalingMode == False);
			Big Message(All Players(All Teams), Custom String("{0} 크기 변경 활성화됨! 앉기+상호작용+좌클/우클 로 영웅의 크기를 조절하세요", Ability Icon String(Hero(로드호그),
				Button(Ultimate))));
			Global.AllowScalingMode = True;
		Else;
			Big Message(All Players(All Teams), Custom String("{0} 크기 변경 비활성화됨!", Ability Icon String(Hero(로드호그), Button(Ultimate))));
			Global.AllowScalingMode = False;
			All Players(All Teams).PlayerSize = 1;
			All Players(All Teams).PlayerVoice = 1;
		End;
	}
}

rule("커 져 라")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Global.AllowScalingMode == True;
	}

	action
	{
		If(Event Player == Global.LightManager);
			Abort If(Event Player.DJMenuHUDOpened == True);
		End;
		Abort If(Event Player.PlayerSize >= 20);
		If(Event Player.PlayerSize >= 3 && Event Player.Love < 50);
			Small Message(Event Player, Custom String("더 커지려면 하트를 50개 이상 모아주세요!"));
			Wait(1, Ignore Condition);
			Abort;
		End;
		If(Event Player.PlayerSize >= 10 && !Array Contains(Global.VIPList, Custom String("{0}", Event Player)));
			Small Message(Event Player, Custom String("더 커지려면 VIP가 되어야 합니다!"));
			Wait(1, Ignore Condition);
			Abort;
		End;
		If(Event Player.PlayerSize >= 1);
			Event Player.PlayerSize += 0.100;
		Else;
			Event Player.PlayerSize += 0.020;
		End;
		Call Subroutine(VoicePitch);
		If(Event Player.PlayerSize > 5);
			Disable Movement Collision With Environment(Event Player, False);
		Else;
			Enable Movement Collision With Environment(Event Player);
		End;
		Wait(0.050, Abort When False);
		Loop If Condition Is True;
	}
}

rule("작아져라...")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
		Global.AllowScalingMode == True;
	}

	action
	{
		If(Event Player == Global.LightManager);
			Abort If(Event Player.DJMenuHUDOpened == True);
		End;
		Abort If(Event Player.PlayerSize <= 0);
		If(Event Player.PlayerSize <= 0.800 && Event Player.Love < 50);
			Small Message(Event Player, Custom String("더 작아지려면 하트를 50개 이상 모아주세요!"));
			Wait(1, Ignore Condition);
			Abort;
		End;
		If(Event Player.PlayerSize <= 0.340 && !Array Contains(Global.VIPList, Custom String("{0}", Event Player)));
			Small Message(Event Player, Custom String("더 작아지려면 VIP가 되어야 합니다!"));
			Wait(1, Ignore Condition);
			Abort;
		End;
		If(Event Player.PlayerSize > 1);
			Event Player.PlayerSize += -0.100;
		Else;
			Event Player.PlayerSize += -0.020;
		End;
		Call Subroutine(VoicePitch);
		If(Event Player.PlayerSize > 5);
			Disable Movement Collision With Environment(Event Player, False);
		Else;
			Enable Movement Collision With Environment(Event Player);
		End;
		Wait(0.050, Abort When False);
		Loop If Condition Is True;
	}
}

rule("기어들어가라.... 목소리...찍..")
{
	event
	{
		Subroutine;
		VoicePitch;
	}

	action
	{
		If(Event Player.PlayerSize < 1);
			Event Player.PlayerVoice = 1 + (1 - Event Player.PlayerSize) / 2;
		Else If(Event Player.PlayerSize > 1);
			Event Player.PlayerVoice = 1 - (Event Player.PlayerSize - 1) / 20;
		Else;
			Event Player.PlayerVoice = 1;
		End;
	}
}

rule("플레이어 선택")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	action
	{
		Event Player.SelectPlayer = Player Closest To Reticle(Event Player, All Teams);
		If(Is Dummy Bot(Event Player.SelectPlayer));
			Event Player.SelectPlayer = Null;
		End;
		If(Distance Between(Event Player, Event Player.SelectPlayer) > (Event Player == Host Player ? (Is Button Held(Event Player, Button(
			Crouch)) ? 999 : 5) : 5));
			Event Player.SelectPlayer = Null;
		End;
		Wait(0.250, Ignore Condition);
		Loop;
	}
}

rule("DJ 알바 주기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Host Player;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Has Spawned(Host Player.SelectPlayer) == True;
		Host Player == Global.DJPlayer;
		Event Player.DJMenuHUDOpened == False;
		Global.DJmode == True;
		Event Player.DrawingMode == False;
		Event Player.SelectPlayerCache == Null;
	}

	action
	{
		Event Player.SelectPlayerCache = Event Player.SelectPlayer;
		Create In-World Text(Host Player, Custom String("{0} DJ를 넘길까요?\r\n{1}:예 / {2}:아니오", Ability Icon String(Hero(루시우), Button(
			Ultimate)), Input Binding String(Button(Primary Fire)), Input Binding String(Button(Secondary Fire))),
			Event Player.SelectPlayerCache, 2, Do Not Clip, Visible To Position and String, Color(Green), Visible Never);
		While(True);
			If(Is Button Held(Event Player, Button(Primary Fire)));
				Global.DJPlayer = Host Player.SelectPlayerCache;
				Wait(0.250, Ignore Condition);
				Big Message(All Players(All Teams), Custom String("{2} Our NEXT DJ! {0} DJ {1}!! {2}", Hero Icon String(Hero Of(Global.DJPlayer)),
					Global.DJPlayer, Ability Icon String(Hero(루시우), Button(Ability 2))));
				Play Effect(All Players(All Teams), Good Explosion, Color(Lime Green), Global.DJPlayer, 1);
				Big Message(Global.DJPlayer, Custom String("{0}DJ가 되었습니다! 멋진 음악을 틀어주세요!{0}", Ability Icon String(Hero(루시우), Button(Ability 2))));
				Break;
			Else If(Is Button Held(Event Player, Button(Secondary Fire)));
				Break;
			End;
			Wait(0.100, Ignore Condition);
		End;
		Event Player.SelectPlayerCache = Null;
		Destroy In-World Text(Last Text ID);
	}
}

rule("DJ 뺏기")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Host Player;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Host Player != Global.DJPlayer;
		Event Player.DJMenuHUDOpened == False;
		Global.DJmode == True;
		Event Player.DrawingMode == False;
	}

	action
	{
		Small Message(Host Player, Custom String("3초 후 {2}DJ 를 뺏어옵니다!", Null, Null, Ability Icon String(Hero(루시우), Button(Ability 2))));
		Wait(1, Abort When False);
		Small Message(Host Player, Custom String("2초 후 {2}DJ 를 뺏어옵니다!", Null, Null, Ability Icon String(Hero(루시우), Button(Ability 2))));
		Wait(1, Abort When False);
		Small Message(Host Player, Custom String("1초 후 {2}DJ 를 뺏어옵니다!", Null, Null, Ability Icon String(Hero(루시우), Button(Ability 2))));
		Wait(1, Abort When False);
		Big Message(Host Player, Custom String("DJ를 뺏어왔습니다!"));
		Big Message(Global.DJPlayer, Custom String("DJ 권한을 뺏겼습니다... 음악 꺼주세요ㅎ"));
		Communicate(Global.DJPlayer, Need Healing);
		Global.DJPlayer.DJMenuHUDOpened = False;
		Global.DJPlayer = Host Player;
		Wait(1, Ignore Condition);
	}
}

rule("DJ 조명메뉴 감지")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Is Communicating(Global.DJPlayer, Emote Up) == True;
		Global.LightManager != Global.DJPlayer;
	}

	action
	{
		Global.DJPlayer.DJMenuHUDOpened = True;
		Disallow Button(Global.DJPlayer, Button(Primary Fire));
		Disallow Button(Global.DJPlayer, Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Loop If Condition Is True;
		Global.DJPlayer.DJMenuHUDOpened = False;
		Allow Button(Global.DJPlayer, Button(Primary Fire));
		Allow Button(Global.DJPlayer, Button(Secondary Fire));
	}
}

rule("설명을 읽었습니다! Agreement")
{
	event
	{
		Subroutine;
		Agreement;
	}

	action
	{
		Disallow Button(Event Player, Button(Interact));
		Clear Status(Event Player, Unkillable);
		Clear Status(Event Player, Phased Out);
		Clear Status(Event Player, Invincible);
		Wait(0.250, Ignore Condition);
		Set Status(Event Player, Null, Knocked Down, 9999);
		Event Player.Agreement = False;
		Chase Player Variable At Rate(Event Player, cameraX, -8, 0.500, Destination and Rate);
		While(Event Player.HelpHUDOpened);
			Teleport(Event Player, Vector(0, 9999, 0));
			Wait(1, Ignore Condition);
		End;
		Event Player.Agreement = True;
		Set Status(Event Player, Null, Unkillable, 9999);
		Set Status(Event Player, Null, Phased Out, 9999);
		Set Status(Event Player, Null, Invincible, 9999);
		Clear Status(Event Player, Knocked Down);
		Allow Button(Event Player, Button(Interact));
	}
}

rule("과부하 방지")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Server Load Average >= 235;
	}

	action
	{
		Wait(6, Abort When False);
		disabled Small Message(All Players(All Teams), Custom String("{0}서버 과부하 감지! 최적화 중..{1}", Ability Icon String(Hero(토르비욘), Button(Ultimate)),
			Ability Icon String(Hero(메이), Button(Ultimate))));
		Start Forcing Player Outlines(All Players(All Teams), All Players(All Teams), False, Color(White), Always);
		Destroy All Dummy Bots;
		Global.ServerPanic = True;
		Wait Until(Server Load Average <= 200, 20);
		Global.ServerPanic = False;
		Loop If Condition Is False;
		Small Message(All Players(All Teams), Custom String("{0}과부하가 심각합니다! 모두 진정하세요..{1}", Ability Icon String(Hero(토르비욘), Button(
			Ultimate)), Ability Icon String(Hero(메이), Button(Ultimate))));
		All Players(All Teams).PlayerSize = 1;
		All Players(All Teams).PlayerVoice = 1;
		Enable Movement Collision With Environment(All Players(All Teams));
		Global.ServerPanic = True;
		Call Subroutine(EntityCleaner);
		Set Ability 1 Enabled(All Players(All Teams), False);
		Set Ability 2 Enabled(All Players(All Teams), False);
		Set Ultimate Ability Enabled(All Players(All Teams), False);
		Disallow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Primary Fire));
		Disallow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Secondary Fire));
		Wait Until(Server Load Average <= 200, 20);
		Global.ServerPanic = False;
		Set Ability 1 Enabled(All Players(All Teams), True);
		Set Ability 2 Enabled(All Players(All Teams), True);
		Set Ultimate Ability Enabled(All Players(All Teams), True);
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Primary Fire));
		Allow Button(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element)), Button(Secondary Fire));
		Loop If(Server Load Average < 235);
		Small Message(All Players(All Teams), Custom String("{0}과부하가 심각합니다! 멈춰!! (멈춰!!){1}", Ability Icon String(Hero(토르비욘), Button(
			Ultimate)), Ability Icon String(Hero(메이), Button(Ultimate))));
		Clear Status(All Players(All Teams), Phased Out);
		Set Status(All Players(All Teams), Null, Frozen, 20);
		Global.ServerPanic = True;
		Wait Until(Server Load Average <= 200, 20);
		Clear Status(All Players(All Teams), Frozen);
		Set Status(All Players(All Teams), Null, Phased Out, 9999);
		Global.ServerPanic = False;
		Loop If(Server Load Average < 235);
		Small Message(All Players(All Teams), Custom String("{0}이대론 터져버릴꺼에요! 타임스톤 사용하는 중..{1}", Ability Icon String(Hero(토르비욘), Button(
			Ultimate)), Ability Icon String(Hero(메이), Button(Ultimate))));
		Global.ServerPanic = True;
		Set Slow Motion(10);
		Wait Until(Server Load Average <= 150, 2);
		Global.ServerPanic = False;
		Global.CTFTimer -= 10;
		Set Slow Motion(100);
		Loop;
	}
}

rule("조명 팔레트 ColorPicker")
{
	event
	{
		Subroutine;
		ColorPicker;
	}

	action
	{
		If(Global.ColorTheme == 0);
			Call Subroutine(ColorTheme_Default);
		Else If(Global.ColorTheme == 1);
			Call Subroutine(ColorTheme_Halloween);
		Else If(Global.ColorTheme == 2);
			Call Subroutine(ColorTheme_Xmas);
		Else If(Global.ColorTheme == 3);
			Call Subroutine(ColorTheme_Random);
		Else If(Global.ColorTheme == 4);
			Call Subroutine(ColorTheme_NewYear);
		Else If(Global.ColorTheme == 5);
			Call Subroutine(ColorTheme_Summer);
		End;
	}
}

rule("스테이지조명 / 초기화 BuildStage")
{
	event
	{
		Subroutine;
		BuildStage;
	}

	action
	{
		If(Global.ColorTheme == 0);
			"기본 조명"
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 12, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Orange), Global.HostSpawnVector, 10, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Yellow), Global.HostSpawnVector, 8, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Green), Global.HostSpawnVector, 6, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Blue), Global.HostSpawnVector, 4, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Purple), Global.HostSpawnVector, 2, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 3, Visible To Position Radius and Color);
		Else If(Global.ColorTheme == 1);
			"할로윈 조명"
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 12, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Purple), Global.HostSpawnVector, 10, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 8, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Purple), Global.HostSpawnVector, 6, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 4, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Purple), Global.HostSpawnVector, 2, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 3, Visible To Position Radius and Color);
			Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Aura, Color(Black),
				Global.HostSpawnVector, 15, Visible To Position and Radius);
			Wait Until(Has Spawned(Host Player), 60);
			Create In-World Text(All Players(All Teams), Custom String("{0} 모두 해피 할로윈! {0}", Icon String(Moon)),
				Global.HostSpawnVector + Vector(0, 1.500, 0), 1.500, Do Not Clip, Color,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Visible Always);
			Big Message(All Players(All Teams), Custom String("{0} 모두 해피 할로윈! {0}", Icon String(Moon)));
		Else If(Global.ColorTheme == 2);
			"크리스마스 조명"
			Create Effect(All Players(All Teams), Ring, Custom Color(0, 160, 0, 255), Global.HostSpawnVector, 12,
				Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 10, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Custom Color(0, 160, 0, 255), Global.HostSpawnVector, 8,
				Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 6, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Custom Color(0, 160, 0, 255), Global.HostSpawnVector, 4,
				Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Color(Red), Global.HostSpawnVector, 2, Visible To Position and Radius);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 3, Visible To Position Radius and Color);
			Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Sparkles, Color(Red), Global.DJPlayer,
				8, Visible To Position and Radius);
			Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Sparkles, Color(Green),
				Global.DJPlayer, 8, Visible To Position and Radius);
			Wait Until(Has Spawned(Host Player), 60);
			Create In-World Text(All Players(All Teams), Custom String("{0} 모두 메리 크리스마스! {0}", Icon String(Heart)),
				Global.HostSpawnVector + Vector(0, 1.500, 0), 1.500, Do Not Clip, Color,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Visible Always);
			Big Message(All Players(All Teams), Custom String("{0} 모두 메리 크리스마스! {0}", Icon String(Heart)));
		Else If(Global.ColorTheme == 3);
			"랜덤 조명"
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Global.HostSpawnVector,
				12, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor2 : Global.ThemeColor1, Global.HostSpawnVector,
				10, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor3 : Global.ThemeColor4, Global.HostSpawnVector,
				8, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor4 : Global.ThemeColor3, Global.HostSpawnVector,
				6, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Global.HostSpawnVector,
				4, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor2 : Global.ThemeColor1, Global.HostSpawnVector,
				2, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.Tick % 2 == 0 ? Global.ThemeColor3 : Global.ThemeColor4, Global.HostSpawnVector,
				3, Visible To Position Radius and Color);
		Else If(Global.ColorTheme == 4);
			"새해복마니 조명"
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 12, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor2, Global.HostSpawnVector, 10, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 8, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor2, Global.HostSpawnVector, 6, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 4, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor2, Global.HostSpawnVector, 2, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor3, Global.HostSpawnVector, 3, Visible To Position Radius and Color);
			Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Global.DJPlayer, 3, Visible To Position Radius and Color);
			Create In-World Text(All Players(All Teams), Custom String("{0} 새해 복 많이 받으세요!! {0}", Icon String(Happy)),
				Global.HostSpawnVector + Vector(0, 1.500, 0), 1.500, Do Not Clip, Color,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Visible Always);
			Big Message(All Players(All Teams), Custom String("{0} 새해 복 많이 받으세요!! {0}", Icon String(Happy)));
		Else If(Global.ColorTheme == 5);
			"섬머파티!"
			Create Effect(All Players(All Teams), Ring, Color(Sky Blue), Global.HostSpawnVector, 12, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Color(White), Global.HostSpawnVector, 10, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Color(Aqua), Global.HostSpawnVector, 8, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Color(White), Global.HostSpawnVector, 6, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Color(Blue), Global.HostSpawnVector, 4, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Color(Yellow), Global.HostSpawnVector, 2, Visible To Position Radius and Color);
			Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Global.HostSpawnVector, 3, Visible To Position Radius and Color);
			Create Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Aura,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Global.DJPlayer, 3, Visible To Position Radius and Color);
			Create In-World Text(All Players(All Teams), Custom String("{0} SUMMER POOL PARTY!! {0}", Icon String(Spiral)),
				Global.HostSpawnVector + Vector(0, 1.500, 0), 1.500, Do Not Clip, Color,
				Global.Tick % 2 == 0 ? Global.ThemeColor1 : Global.ThemeColor2, Visible Always);
			Big Message(All Players(All Teams), Custom String("{0} 와!! 여름이다!!! {0}", Icon String(Happy)));
		End;
		Call Subroutine(ColorPicker);
	}
}

rule("모드별 조명 팔레트 - 일반")
{
	event
	{
		Subroutine;
		ColorTheme_Default;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		If(Global.ModeOfLightEffect == 1);
			Global.ThemeColor1 = Color(Green);
			Global.ThemeColor2 = Color(Yellow);
			Global.ThemeColor3 = Color(White);
			Global.ThemeColor4 = Color(Lime Green);
		Else If(Global.ModeOfLightEffect == 2);
			Global.ThemeColor1 = Color(Red);
			Global.ThemeColor2 = Color(Blue);
			Global.ThemeColor3 = Color(Red);
			Global.ThemeColor4 = Color(Blue);
		Else If(Global.ModeOfLightEffect == 3);
			Global.ThemeColor1 = Color(Turquoise);
			Global.ThemeColor2 = Color(Purple);
			Global.ThemeColor3 = Color(Aqua);
			Global.ThemeColor4 = Color(Violet);
		Else If(Global.ModeOfLightEffect == 4);
			Global.ThemeColor1 = Color(Orange);
			Global.ThemeColor2 = Color(White);
			Global.ThemeColor3 = Color(Orange);
			Global.ThemeColor4 = Color(White);
		End;
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("모드별 조명 팔레트 - 섬머파티!")
{
	event
	{
		Subroutine;
		ColorTheme_Summer;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		If(Global.ModeOfLightEffect == 1);
			Global.ThemeColor1 = Color(Sky Blue);
			Global.ThemeColor2 = Color(Lime Green);
			Global.ThemeColor3 = Color(Blue);
			Global.ThemeColor4 = Color(White);
		Else If(Global.ModeOfLightEffect == 2);
			Global.ThemeColor1 = Color(Orange);
			Global.ThemeColor2 = Color(Aqua);
			Global.ThemeColor3 = Color(White);
			Global.ThemeColor4 = Color(Sky Blue);
		Else If(Global.ModeOfLightEffect == 3);
			Global.ThemeColor1 = Color(Blue);
			Global.ThemeColor2 = Color(Turquoise);
			Global.ThemeColor3 = Color(Lime Green);
			Global.ThemeColor4 = Color(Rose);
		Else If(Global.ModeOfLightEffect == 4);
			Global.ThemeColor1 = Color(White);
			Global.ThemeColor2 = Color(Yellow);
			Global.ThemeColor3 = Color(Aqua);
			Global.ThemeColor4 = Color(Blue);
		End;
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("모드별 조명 팔레트 - 할로윈")
{
	event
	{
		Subroutine;
		ColorTheme_Halloween;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		If(Global.ModeOfLightEffect == 1);
			Global.ThemeColor1 = Color(Red);
			Global.ThemeColor2 = Color(Violet);
			Global.ThemeColor3 = Color(Rose);
			Global.ThemeColor4 = Color(Purple);
		Else If(Global.ModeOfLightEffect == 2);
			Global.ThemeColor1 = Color(Gray);
			Global.ThemeColor2 = Color(Black);
			Global.ThemeColor3 = Color(Gray);
			Global.ThemeColor4 = Color(Black);
		Else If(Global.ModeOfLightEffect == 3);
			Global.ThemeColor1 = Color(Turquoise);
			Global.ThemeColor2 = Color(Purple);
			Global.ThemeColor3 = Color(Turquoise);
			Global.ThemeColor4 = Color(Red);
		Else If(Global.ModeOfLightEffect == 4);
			Global.ThemeColor1 = Color(Orange);
			Global.ThemeColor2 = Color(Black);
			Global.ThemeColor3 = Color(Orange);
			Global.ThemeColor4 = Color(Black);
		End;
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("모드별 조명 팔레트 - 크리스마스")
{
	event
	{
		Subroutine;
		ColorTheme_Xmas;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		If(Global.ModeOfLightEffect == 1);
			Global.ThemeColor1 = Color(Green);
			Global.ThemeColor2 = Color(Red);
			Global.ThemeColor3 = Color(Green);
			Global.ThemeColor4 = Color(Red);
		Else If(Global.ModeOfLightEffect == 2);
			Global.ThemeColor1 = Color(Red);
			Global.ThemeColor2 = Color(White);
			Global.ThemeColor3 = Color(Green);
			Global.ThemeColor4 = Color(White);
		Else If(Global.ModeOfLightEffect == 3);
			Global.ThemeColor1 = Color(Violet);
			Global.ThemeColor2 = Color(Rose);
			Global.ThemeColor3 = Color(Blue);
			Global.ThemeColor4 = Color(Rose);
		Else If(Global.ModeOfLightEffect == 4);
			Global.ThemeColor1 = Color(Orange);
			Global.ThemeColor2 = Color(Green);
			Global.ThemeColor3 = Color(Orange);
			Global.ThemeColor4 = Color(Green);
		End;
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("모드별 조명 팔레트 - 랜덤!")
{
	event
	{
		Subroutine;
		ColorTheme_Random;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		Global.ThemeColor1 = Random Value In Array(Array(Color(White), Color(Yellow), Color(Green), Color(Purple), Color(Red), Color(Blue),
			Color(Orange), Color(Sky Blue), Color(Turquoise), Color(Lime Green), Color(Rose), Color(Violet)));
		Global.ThemeColor2 = Random Value In Array(Array(Color(White), Color(Yellow), Color(Green), Color(Purple), Color(Red), Color(Blue),
			Color(Orange), Color(Sky Blue), Color(Turquoise), Color(Lime Green), Color(Rose), Color(Violet)));
		Global.ThemeColor3 = Random Value In Array(Array(Color(White), Color(Yellow), Color(Green), Color(Purple), Color(Red), Color(Blue),
			Color(Aqua), Color(Orange), Color(Sky Blue), Color(Turquoise), Color(Lime Green), Color(Black), Color(Rose), Color(Violet)));
		Global.ThemeColor4 = Random Value In Array(Array(Color(White), Color(Yellow), Color(Green), Color(Purple), Color(Red), Color(Blue),
			Color(Aqua), Color(Orange), Color(Sky Blue), Color(Turquoise), Color(Lime Green), Color(Black), Color(Rose), Color(Violet)));
		Loop If(Global.ThemeColor1 == Global.ThemeColor2 || Global.ThemeColor3 == Global.ThemeColor4);
		disabled Global.ThemeColor1 = Custom Color(Random Real(135, 255), Random Real(135, 255), Random Real(135, 255), 255);
		disabled Global.ThemeColor2 = Custom Color(Random Real(100, 255), Random Real(100, 255), Random Real(100, 255), 255);
		disabled Global.ThemeColor3 = Custom Color(Random Real(0, 255), Random Real(0, 255), Random Real(0, 255), 255);
		disabled Global.ThemeColor4 = Custom Color(Random Real(0, 255), Random Real(0, 255), Random Real(0, 255), 255);
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("모드별 조명 팔레트 - 새해복마니")
{
	event
	{
		Subroutine;
		ColorTheme_NewYear;
	}

	action
	{
		Destroy Effect(Global.LightEntity);
		If(Global.ModeOfLightEffect == 1);
			Global.ThemeColor1 = Color(Red);
			Global.ThemeColor2 = Color(Orange);
			Global.ThemeColor3 = Color(Blue);
			Global.ThemeColor4 = Color(Yellow);
		Else If(Global.ModeOfLightEffect == 2);
			Global.ThemeColor1 = Color(Rose);
			Global.ThemeColor2 = Color(Sky Blue);
			Global.ThemeColor3 = Color(White);
			Global.ThemeColor4 = Color(White);
		Else If(Global.ModeOfLightEffect == 3);
			Global.ThemeColor1 = Color(Blue);
			Global.ThemeColor2 = Color(White);
			Global.ThemeColor3 = Color(Rose);
			Global.ThemeColor4 = Color(White);
		Else If(Global.ModeOfLightEffect == 4);
			Global.ThemeColor1 = Color(Orange);
			Global.ThemeColor2 = Color(Blue);
			Global.ThemeColor3 = Color(Orange);
			Global.ThemeColor4 = Color(Green);
		End;
		Create Effect(All Players(All Teams), Light Shaft, Global.ThemeColor1, Global.DJPlayer, 1, Visible To Position Radius and Color);
		Global.LightEntity = Last Created Entity;
	}
}

rule("qndldkdlvl")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Modify Global Variable(VIPList, Append To Array, Custom String("변기클라우드"));
		Modify Global Variable(VIPList, Append To Array, Custom String("몽쉘똥통"));
		Modify Global Variable(VIPList, Append To Array, Custom String("AVECTOI"));
		Modify Global Variable(VIPList, Append To Array, Custom String("망령전투기"));
		Modify Global Variable(VIPList, Append To Array, Custom String("강소라"));
		Modify Global Variable(VIPList, Append To Array, Custom String("메론의탬버린"));
		Modify Global Variable(VIPList, Append To Array, Custom String("다비"));
		Modify Global Variable(VIPList, Append To Array, Custom String("도하"));
		Modify Global Variable(VIPList, Append To Array, Custom String("케챱"));
		Modify Global Variable(VIPList, Append To Array, Custom String("번너클"));
		Modify Global Variable(VIPList, Append To Array, Custom String("레디안느"));
		Modify Global Variable(VIPList, Append To Array, Custom String("JY0327"));
		Modify Global Variable(VIPList, Append To Array, Custom String("코카이나"));
		Modify Global Variable(VIPList, Append To Array, Custom String("영덩이"));
		Modify Global Variable(VIPList, Append To Array, Custom String("빵셔틀뽀로"));
		Modify Global Variable(VIPList, Append To Array, Custom String("화령"));
		Modify Global Variable(VIPList, Append To Array, Custom String("DODO"));
		Modify Global Variable(VIPList, Append To Array, Custom String("럿페럿"));
		Modify Global Variable(VIPList, Append To Array, Custom String("빠나나슘"));
		Modify Global Variable(VIPList, Append To Array, Custom String("Rexy"));
		Modify Global Variable(VIPList, Append To Array, Custom String("다크바나나"));
		Modify Global Variable(VIPList, Append To Array, Custom String("JOGIYO"));
		Modify Global Variable(VIPList, Append To Array, Custom String("하람"));
		Modify Global Variable(VIPList, Append To Array, Custom String("Lua"));
		Modify Global Variable(VIPList, Append To Array, Custom String("섹송합니다"));
		Modify Global Variable(VIPList, Append To Array, Custom String("Limit"));
		Modify Global Variable(VIPList, Append To Array, Custom String("ISFJ"));
		Modify Global Variable(VIPList, Append To Array, Custom String("썩은호박"));
		Modify Global Variable(VIPList, Append To Array, Custom String("NANOME"));
		Modify Global Variable(VIPList, Append To Array, Custom String("지금이맻씨고"));
		Modify Global Variable(VIPList, Append To Array, Custom String("RESISTANCE"));
		Modify Global Variable(VIPList, Append To Array, Custom String("나나시무메이"));
		Modify Global Variable(VIPList, Append To Array, Custom String("몽지몽지몽"));
	}
}

rule("qmfforfltmxm")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Modify Global Variable(BlackList, Append To Array, Custom String("끙끙"));
		Modify Global Variable(BlackList, Append To Array, Custom String("신희"));
		Modify Global Variable(BlackList, Append To Array, Custom String("Crazyhorse"));
		Modify Global Variable(BlackList, Append To Array, Custom String("cthcth"));
		Modify Global Variable(BlackList, Append To Array, Custom String("풍월"));
		Modify Global Variable(BlackList, Append To Array, Custom String("징징이준형"));
		Modify Global Variable(BlackList, Append To Array, Custom String("MAMAMU"));
	}
}

rule("jjin tkrwp")
{
	event
	{
		Player Joined Match;
		All;
		All;
	}

	action
	{
		disabled Disable Voice Chat(Event Player, True, True, True);
		If(Array Contains(Global.BlackList, Custom String("{0}", Event Player)));
			Remove Player(Event Player);
		End;
	}
}

rule("removeJJin")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Event Player == Host Player;
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Melee)) == True;
		Has Spawned(Host Player.SelectPlayer) == True;
		Event Player.DJMenuHUDOpened == False;
		Event Player.DrawingMode == False;
		Event Player.SelectPlayerCache == Null;
	}

	action
	{
		Event Player.SelectPlayerCache = Event Player.SelectPlayer;
		Create In-World Text(Host Player, Custom String("{0} {2} 님을 차단 할까요?\r\n{1}", Icon String(No), Custom String(
			"{0}:숨기기 / {1}:영구추방 / {2}:취소", Input Binding String(Button(Primary Fire)), Input Binding String(Button(Reload)),
			Input Binding String(Button(Secondary Fire))), Event Player.SelectPlayerCache), Event Player.SelectPlayerCache, 2, Do Not Clip,
			Visible To Position and String, Color(Red), Visible Never);
		While(True);
			If(Is Button Held(Event Player, Button(Reload)));
				Play Effect(All Players(All Teams), Bad Explosion, Color(Red), Event Player.SelectPlayerCache, 10);
				Small Message(All Players(All Teams), Custom String("{0} 님이 영구 추방 되었습니다 ㅋㅋ", Event Player.SelectPlayerCache));
				Enable Inspector Recording;
				Log To Inspector(Custom String("{0}", Event Player.SelectPlayerCache));
				Disable Inspector Recording;
				Modify Global Variable(BlackList, Append To Array, Custom String("{0}", Event Player.SelectPlayerCache));
				Remove Player(Event Player.SelectPlayerCache);
				Wait(1, Ignore Condition);
				Break;
			Else If(Is Button Held(Event Player, Button(Primary Fire)));
				If(Event Player.SelectPlayerCache.BANNED == False);
					Small Message(All Players(All Teams), Custom String("{0} 님은 차단되어 투명인간이 되었습니다 ㅋㅋ", Event Player.SelectPlayerCache));
					Big Message(Event Player.SelectPlayerCache, Custom String("{0}비매너 행위를 하여 차단되었습니다!{0}", Icon String(No)));
					Big Message(Event Player.SelectPlayerCache, Custom String("{0}경기 보이스에서 마이크를 사용하지 말아주세요!{0}", Icon String(No)));
					Set Status(Event Player.SelectPlayerCache, Null, Hacked, 9999);
					Enable Voice Chat(Event Player.SelectPlayerCache);
					Wait(0.100, Ignore Condition);
					Disable Text Chat(Event Player.SelectPlayerCache);
					Disable Voice Chat(Event Player.SelectPlayerCache, True, True, True);
					Set Invisible(Event Player.SelectPlayerCache, All);
					Event Player.SelectPlayerCache.BANNED = True;
				Else;
					Clear Status(Event Player.SelectPlayerCache, Hacked);
					Enable Voice Chat(Event Player.SelectPlayerCache);
					Wait(0.100, Ignore Condition);
					Enable Text Chat(Event Player.SelectPlayerCache);
					Disable Voice Chat(Event Player.SelectPlayerCache, True, False, True);
					Set Invisible(Event Player.SelectPlayerCache, None);
					Event Player.SelectPlayerCache.BANNED = False;
				End;
				Wait(1, Ignore Condition);
				Break;
			Else If(Is Button Held(Event Player, Button(Secondary Fire)));
				Break;
			End;
			Wait(0.100, Ignore Condition);
		End;
		Event Player.SelectPlayerCache = Null;
		Destroy In-World Text(Last Text ID);
	}
}

rule("슈퍼 회오리~~~")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Ability 2)) == True;
		disabled Global.LevelOfClimax >= 3;
		Event Player != Global.DJPlayer;
		Event Player != Global.LightManager;
		Event Player != Is Dummy Bot(Event Player);
		Event Player.DrawingMode == False;
		(Array Contains(Global.VIPList, Custom String("{0}", Event Player)) || Event Player.Love >= 50 || Count Of(Filtered Array(
			All Players(All Teams), !Is Dummy Bot(Current Array Element))) == 12) == True;
		Global.ServerPanic == False;
	}

	action
	{
		Wait(0.500, Abort When False);
		If(Event Player.Light == 0);
			Press Button(Event Player, Button(Melee));
			Event Player.Light = 8;
			Create Beam Effect(All Players(All Teams), Bad Beam, Eye Position(Event Player) + World Vector Of(Vector(-0.500, 0, 0),
				Event Player, Rotation), Event Player + Facing Direction Of(Event Player) * 4, Custom Color(Random Real(0, 255), Random Real(0,
				255), Random Real(0, 255), 255), Visible To Position and Radius);
			Event Player.LightEntity = Last Created Entity;
		End;
		While(Is Button Held(Event Player, Button(Ability 2)) == True);
			Wait(0.130, Ignore Condition);
			Start Camera(Event Player, Event Player + Vector(Event Player.PlayerSize * (Total Time Elapsed % 7) + -3.500,
				Event Player.PlayerSize * 9 + 1, Event Player.PlayerSize * (Total Time Elapsed % 10) + -5), Event Player, 5);
			Start Facing(Event Player, Direction From Angles(45, 0), 1080, To Player, Direction and Turn Rate);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Ring Explosion, Custom Color(Random Real(
				100, 255), Random Real(100, 255), Random Real(100, 255), 255), Array Contains(Global.VIPList, Custom String("{0}",
				Event Player)) ? Event Player : Null, Random Real(1, 12));
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Pickup Effect, Custom Color(
				Random Real(100, 255), Random Real(100, 255), Random Real(100, 255), 255),
				Event Player.Love >= 50 ? Event Player + Facing Direction Of(Event Player) * 1.800 : Null, 6);
			Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Custom Color(Random Real(
				100, 255), Random Real(100, 255), Random Real(100, 255), 255), Event Player, 1);
		End;
		Wait(0.130, Ignore Condition);
		Loop If Condition Is True;
		Stop Facing(Event Player);
		Call Subroutine(SetTP);
	}
}

rule("VIP 춤 조명")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == True;
		Event Player != Global.DJPlayer;
		disabled Global.LevelOfClimax >= 2;
		Array Contains(Global.VIPList, Custom String("{0}", Event Player)) == True;
		Global.ServerPanic == False;
	}

	action
	{
		If(Global.LevelOfClimax < 3);
			Start Forcing Player Outlines(Filtered Array(All Players(All Teams), Array Contains(Global.VIPList, Custom String("{0}",
				Current Array Element))), All Players(All Teams), True, Global.ThemeColor3, Always);
		End;
		Create Effect(All Players(All Teams), Good Aura, Global.ThemeColor3, Event Player, 1, Visible To Position and Radius);
		Event Player.DanceSparkle = Last Created Entity;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor4,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
		If(Global.LevelOfClimax < 3);
			Start Forcing Player Outlines(Filtered Array(All Players(All Teams), Array Contains(Global.VIPList, Custom String("{0}",
				Current Array Element))), All Players(All Teams), True, Global.ThemeColor4, Always);
		End;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Global.ThemeColor3,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 / Global.BPM, Ignore Condition);
		Destroy Effect(Event Player.DanceSparkle);
		Loop If Condition Is True;
	}
}

rule("VIP 춤 조명 장판")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == True;
		Event Player != Global.DJPlayer;
		Event Player != Global.LightManager;
		Array Contains(Global.VIPList, Custom String("{0}", Event Player)) == True;
	}

	action
	{
		Create Effect(All Players(All Teams), Ring, Global.ThemeColor1, Event Player, 2, Visible To Position Radius and Color);
		Event Player.VipFloorEffect1 = Last Created Entity;
		Create Effect(All Players(All Teams), Ring, Global.ThemeColor2, Event Player, 1.660, Visible To Position Radius and Color);
		Event Player.VipFloorEffect2 = Last Created Entity;
		Create Effect(All Players(All Teams), Ring, Global.ThemeColor3, Event Player, 1.330, Visible To Position Radius and Color);
		Event Player.VipFloorEffect3 = Last Created Entity;
		Create Effect(All Players(All Teams), Ring, Global.ThemeColor4, Event Player, 1, Visible To Position Radius and Color);
		Event Player.VipFloorEffect4 = Last Created Entity;
		If(Entity Exists(Last Created Entity) == False);
			Call Subroutine(EntityCleaner);
		End;
	}
}

rule("VIP 춤 조명 장판 제거")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating Any Emote(Event Player) == False;
		Event Player != Global.DJPlayer;
		Event Player != Global.LightManager;
		Array Contains(Global.VIPList, Custom String("{0}", Event Player)) == True;
	}

	action
	{
		Start Forcing Player Outlines(Filtered Array(All Players(All Teams), Array Contains(Global.VIPList, Current Array Element)),
			All Players(All Teams), False, Null, Always);
		Destroy Effect(Event Player.VipFloorEffect1);
		Destroy Effect(Event Player.VipFloorEffect2);
		Destroy Effect(Event Player.VipFloorEffect3);
		Destroy Effect(Event Player.VipFloorEffect4);
	}
}

rule("누가 나갔나?")
{
	event
	{
		Player Left Match;
		All;
		All;
	}

	action
	{
		If(Global.DJPlayer == Event Player);
			Big Message(All Players(All Teams), Custom String("DJ가 나갔습니다..."));
			Global.DJPlayer.DJMenuHUDOpened = False;
			Global.DJPlayer = Host Player;
			Small Message(Host Player, Custom String("DJ 가 나가서 방장인 당신이 다시 DJ가 되었습니다.."));
		End;
		If(Global.LightManager == Event Player);
			Global.LightManager.DJMenuHUDOpened = False;
			Global.LightManager = Host Player;
			Small Message(Host Player, Custom String("조명감독이 나가서 방장인 당신이 다시 조명감독이 되었습니다.."));
		End;
		If(Array Contains(Global.VIPList, Custom String("{0}", Event Player)));
			Small Message(All Players(All Teams), Custom String("VIP {0} 님이 퇴장하였습니다.", Event Player));
		End;
		Small Message(Host Player, Custom String("{0} 퇴장. {1}/12", Event Player, Count Of(Filtered Array(All Players(All Teams),
			!Is Dummy Bot(Current Array Element)))));
		Wait(0.250, Ignore Condition);
		Move Player to Team(Players In Slot(1, Team 1), Team 1, -1);
		Move Player to Team(Players In Slot(2, Team 1), Team 1, -1);
		Move Player to Team(Players In Slot(3, Team 1), Team 1, -1);
		Move Player to Team(Players In Slot(4, Team 1), Team 1, -1);
		Move Player to Team(Players In Slot(5, Team 1), Team 1, -1);
		Move Player to Team(Players In Slot(1, Team 2), Team 2, -1);
		Move Player to Team(Players In Slot(2, Team 2), Team 2, -1);
		Move Player to Team(Players In Slot(3, Team 2), Team 2, -1);
		Move Player to Team(Players In Slot(4, Team 2), Team 2, -1);
		Move Player to Team(Players In Slot(5, Team 2), Team 2, -1);
		If(Global.DummyDance == True);
			If(!Entity Exists(Players In Slot(5, Team 1)));
				Destroy Dummy Bot(Team 1, 5);
				Create Dummy Bot(Hero Of(Global.DJPlayer), Team 1, 5, Global.DJPlayer + World Vector Of(Vector(-1, 0, 0), Global.DJPlayer,
					Rotation), Facing Direction Of(Global.DJPlayer));
			End;
			If(!Entity Exists(Players In Slot(5, Team 2)));
				Destroy Dummy Bot(Team 2, 5);
				Create Dummy Bot(Hero Of(Global.DJPlayer), Team 2, 5, Global.DJPlayer + World Vector Of(Vector(1, 0, 0), Global.DJPlayer,
					Rotation), Facing Direction Of(Global.DJPlayer));
			End;
		End;
	}
}

rule("Welcome")
{
	event
	{
		Subroutine;
		Welcome;
	}

	action
	{
		If(Array Contains(Global.VIPList, Custom String("{0}", Event Player)));
			Global.CheckInList = Append To Array(Global.CheckInList, Custom String("{0}", Event Player));
			If(Total Time Elapsed > 60);
				Teleport(Event Player, Global.SpawnVector);
				Start Forcing Player Position(Event Player, Global.SpawnVector, False);
				Wait(0.300, Ignore Condition);
				Set Facing(Event Player, Direction Towards(Global.SpawnVector, Global.HostSpawnVector), To World);
				Start Camera(All Players(All Teams), Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
					+ Facing Direction Of(Event Player) * 8, Null, All Players(All Teams), False), Event Player + Facing Direction Of(Event Player)
					* -40, 10);
				Wait(0.500, Ignore Condition);
				Big Message(All Players(All Teams), Custom String("VIP 멤버 {0} 님이 입장하셨습니다!", Event Player));
				Start Camera(All Players(All Teams), Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
					+ Facing Direction Of(Event Player) * 4, Null, All Players(All Teams), False), Event Player + Facing Direction Of(Event Player)
					* -20, 3);
				Wait(0.500, Ignore Condition);
				Communicate(Event Player, Hello);
				Wait(2.500, Ignore Condition);
				Start Camera(Event Player, Ray Cast Hit Position(Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0),
					Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Local Player) * (
					-0.500 + Local Player.PlayerSize * -3), Null, All Players(All Teams), False), Local Player + (Eye Position(Local Player)
					- Local Player) + Facing Direction Of(Local Player) * 20, 10);
				Wait(1, Ignore Condition);
				Stop Forcing Player Position(Event Player);
				Stop Camera(Filtered Array(All Players(All Teams), Event Player != Current Array Element));
				All Players(All Teams).Camera = False;
			End;
		End;
		If(!Is Dummy Bot(Event Player));
			If(Array Contains(Global.CheckInList, Custom String("{0}", Event Player)));
				disabled Create In-World Text(All Players(All Teams), Custom String("{0}고인물{0}", Icon String(Fire)), Event Player + Vector(0,
					1 * Event Player.PlayerSize + 1, 0), 0.600, Do Not Clip, Visible To and Position, Color(Orange), Default Visibility);
				Small Message(All Players(All Teams), Custom String("{1}{0} 님이 다시 돌아오셨어요!", Event Player, Hero Icon String(Hero Of(
					Event Player))));
				Event Player.Love = 20;
			Else;
				Small Message(All Players(All Teams), Custom String("{0} 님이 입장하였습니다.", Event Player));
				Global.GuestBook = Custom String("{0}\r\n{1}", Global.GuestBook, Event Player);
			End;
		End;
		If(Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) == 12);
			If(Global.DJmode == True);
				Big Message(All Players(All Teams), Custom String("{0} 풀방이네요! 추가 이펙트 적용! {0}", Icon String(Fire)));
			End;
		End;
		Wait(0.016, Ignore Condition);
	}
}

rule("풀방 버닝업!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Count Of(Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) == 12;
		Global.ServerPanic == False;
		Global.DJmode == True;
	}

	action
	{
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor1,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Pickup Effect, Global.ThemeColor2,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Global.ThemeColor3,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Bad Pickup Effect, Global.ThemeColor4,
			Event Player, 0.700);
		Wait(Global.BPMCalibrate_DefaultIs60 * 4 / Global.BPM, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("미호환 맵 방폭")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Global.HostSpawnVector == 0;
		Global.SpawnVector == 0;
		Global.BeamVector == 0;
		Global.DanceZoneVector == 0;
	}

	action
	{
		Wait(10, Abort When False);
		Big Message(All Players(All Teams), Custom String("이 맵은 호환되지 않습니다.."));
		Set Match Time(4);
		Global.CTFTimer = 4;
	}
}

rule("짝짜꿍~~")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating(Event Player, Hello) == True;
		Has Spawned(Event Player.SelectPlayer) == True;
	}

	action
	{
		Small Message(Event Player, Custom String("{0}{1} : {2} 안녕?", Hero Icon String(Hero Of(Event Player)), Event Player,
			Event Player.SelectPlayer));
		Small Message(Event Player.SelectPlayer, Custom String("{0}{1} : {2} 안녕?", Hero Icon String(Hero Of(Event Player)), Event Player,
			Event Player.SelectPlayer));
		Wait Until(Is Communicating(Event Player.SelectPlayer, Hello), 1.500);
		If(Is Communicating(Event Player.SelectPlayer, Hello) && Distance Between(Event Player, Event Player.SelectPlayer) <= 10);
			Small Message(All Players(All Teams), Custom String("{0} 짝짜꿍~ +{2} {1}", Hero Icon String(Hero Of(Event Player)), Hero Icon String(
				Hero Of(Event Player.SelectPlayer)), Icon String(Heart)));
			Attach Players(Event Player.SelectPlayer, Event Player, Vector(0, Event Player.PlayerSize + 1, 0));
			For Player Variable(Event Player, HelloCount, 0, 5, 1);
				Event Player.Love += 1;
				Event Player.SelectPlayer.Love += 1;
				Wait(0.500, Ignore Condition);
				Press Button(Event Player, Button(Jump));
				Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Pickup Effect, Custom Color(
					Random Real(100, 255), Random Real(100, 255), Random Real(100, 255), 255), Event Player, 5);
			End;
			Detach Players(All Players(All Teams));
		End;
	}
}

rule("꼬마웡!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating(Event Player, Thanks) == True;
		Has Spawned(Event Player.SelectPlayer) == True;
	}

	action
	{
		Small Message(Event Player, Custom String("{0}{1} : 꼬마웡 +{2}", Hero Icon String(Hero Of(Event Player)), Event Player, Icon String(
			Heart)));
		Small Message(Event Player.SelectPlayer, Custom String("{0}{1} : 꼬마웡 +{2}", Hero Icon String(Hero Of(Event Player)), Event Player,
			Icon String(Heart)));
		Event Player.SelectPlayer.Love += 3;
		Play Effect(Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect), Good Explosion, Custom Color(Random Real(
			100, 255), Random Real(100, 255), Random Real(100, 255), 255), Event Player, 5);
	}
}

rule("죽돌죽순이 보너스!")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Wait(60, Ignore Condition);
		Small Message(Filtered Array(All Players(All Teams), Current Array Element.Love == 1 && Current Array Element != Host Player),
			Custom String("{0}하트 획득! 1분이 지날때마다 하트를 얻어요! 다른 방법도 있을지도?", Icon String(Heart)));
		All Players(All Teams).Love += 1;
		Start Forcing Dummy Bot Name(Players In Slot(5, Team 1), Custom String("-백댄서봇-"));
		Start Forcing Dummy Bot Name(Players In Slot(5, Team 2), Custom String("-백댄서봇-"));
		Loop;
	}
}

rule("보물 찾았당!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.HiddenVector, Event Player) <= 2;
		Global.HiddenVector != 0;
	}

	action
	{
		Small Message(All Players(All Teams), Custom String("{1} 님이 하트 보물을 찾았습니다! {0}+30!", Icon String(Heart), Event Player));
		Event Player.Love += 30;
		Play Effect(All Players(All Teams), Good Pickup Effect, Color(Rose), Event Player, 5);
		Wait Until(False, 99999);
	}
}

rule("일로 와줭!")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	condition
	{
		Is Communicating(Event Player, Group Up) == True;
	}

	action
	{
		Small Message(All Players(All Teams), Custom String("{0}{1} : 이쪽으로 와주세요!", Hero Icon String(Hero Of(Event Player)), Event Player));
		Play Effect(All Players(All Teams), Ring Explosion, Custom Color(Random Real(100, 255), Random Real(100, 255), Random Real(100,
			255), 255), Event Player, 10);
		If(Array Contains(Global.VIPList, Custom String("{0}", Event Player)));
			Start Camera(All Players(All Teams), Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
				+ Facing Direction Of(Event Player) * 8, Null, All Players(All Teams), False), Event Player + Facing Direction Of(Event Player)
				* -40, 10);
			Wait(0.500, Ignore Condition);
			Big Message(All Players(All Teams), Custom String("{1}{0} : 나를 봐줘!!!!!!", Event Player, Hero Icon String(Hero Of(Event Player))));
			Start Camera(All Players(All Teams), Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
				+ Facing Direction Of(Event Player) * 4, Null, All Players(All Teams), False), Event Player + Facing Direction Of(Event Player)
				* -20, 3);
			Wait(4, Ignore Condition);
			Start Camera(All Players(All Teams), Ray Cast Hit Position(Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0),
				Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Local Player) * (
				-0.500 + Local Player.PlayerSize * -3), Null, All Players(All Teams), False), Local Player + (Eye Position(Local Player)
				- Local Player) + Facing Direction Of(Local Player) * 20, 10);
			Wait(1, Ignore Condition);
			disabled Stop Camera(All Players(All Teams));
			Start Camera(All Players(All Teams), Ray Cast Hit Position(Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0),
				Local Player + Vector(0, Local Player.PlayerSize * 2 + 0.100, 0) + Facing Direction Of(Local Player) * (
				-0.500 + Local Player.PlayerSize * -3), Null, All Players(All Teams), False), Local Player + (Eye Position(Local Player)
				- Local Player) + Facing Direction Of(Local Player) * 20, 100);
			All Players(All Teams).Camera = True;
			Small Message(Event Player, Custom String("VIP 어그로 쿨타임은 120초 입니다.", Hero Icon String(Hero Of(Event Player)), Event Player));
			Wait(120, Ignore Condition);
			Big Message(Event Player, Custom String("VIP 어그로 쿨타임 완료!"));
		End;
	}
}

rule("잠시 쉬었다 갈게요")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		((Is Communicating(Host Player, Sorry) && Is Button Held(Host Player, Button(Jump))) || (Global.LetsNextMap >= Count Of(
			Filtered Array(All Players(All Teams), !Is Dummy Bot(Current Array Element))) + -2 && Count Of(Filtered Array(All Players(
			All Teams), !Is Dummy Bot(Current Array Element))) >= 4)) == True;
	}

	action
	{
		Set Match Time(4);
		Global.CTFTimer = 4;
	}
}

rule("DJ Mode 변경")
{
	event
	{
		Ongoing - Global;
	}

	condition
	{
		Is Button Held(Host Player, Button(Crouch)) == True;
		Is Communicating(Host Player, With You) == True;
	}

	action
	{
		If(Global.DJmode == True);
			Global.DJPlayer = Null;
			Global.LightManager = Null;
			Global.DJmode = False;
			Big Message(All Players(All Teams), Custom String("DJ 가 퇴근하였습니다...?"));
		Else;
			Global.DJPlayer = Host Player;
			Global.LightManager = Host Player;
			Global.DJmode = True;
			Big Message(All Players(All Teams), Custom String("{0}DJ {1}{2}가 돌아왔습니다!{0}", Ability Icon String(Hero(루시우), Button(Ability 2)),
				Hero Icon String(Hero Of(Host Player)), Host Player));
		End;
		Wait(5, Ignore Condition);
	}
}

rule("미러볼 레이저 쇼")
{
	event
	{
		Ongoing - Global;
	}

	action
	{
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor1, Global.BeamVector, (Total Time Elapsed + 0) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor2, Global.BeamVector, (Total Time Elapsed + 1) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor3, Global.BeamVector, (Total Time Elapsed + 2) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor4, Global.BeamVector, (Total Time Elapsed + 3) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor1, Global.BeamVector, (Total Time Elapsed + 4) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor2, Global.BeamVector, (Total Time Elapsed + 5) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor3, Global.BeamVector, (Total Time Elapsed + 6) % 8 * 4, Visible To Position Radius and Color);
		Create Effect(Global.EnableTick == 1 ? Filtered Array(All Players(All Teams), Current Array Element.MAXLightEffect == True) : Null,
			Ring, Global.ThemeColor4, Global.BeamVector, (Total Time Elapsed + 7) % 8 * 4, Visible To Position Radius and Color);
	}
}
